                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.9.3 #11345 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module bsearch
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _bsearch
                                     12 ;--------------------------------------------------------
                                     13 ; ram data
                                     14 ;--------------------------------------------------------
                                     15 	.area DATA
                                     16 ;--------------------------------------------------------
                                     17 ; ram data
                                     18 ;--------------------------------------------------------
                                     19 	.area INITIALIZED
                                     20 ;--------------------------------------------------------
                                     21 ; absolute external ram data
                                     22 ;--------------------------------------------------------
                                     23 	.area DABS (ABS)
                                     24 
                                     25 ; default segment ordering for linker
                                     26 	.area HOME
                                     27 	.area GSINIT
                                     28 	.area GSFINAL
                                     29 	.area CONST
                                     30 	.area INITIALIZER
                                     31 	.area CODE
                                     32 
                                     33 ;--------------------------------------------------------
                                     34 ; global & static initialisations
                                     35 ;--------------------------------------------------------
                                     36 	.area HOME
                                     37 	.area GSINIT
                                     38 	.area GSFINAL
                                     39 	.area GSINIT
                                     40 ;--------------------------------------------------------
                                     41 ; Home
                                     42 ;--------------------------------------------------------
                                     43 	.area HOME
                                     44 	.area HOME
                                     45 ;--------------------------------------------------------
                                     46 ; code
                                     47 ;--------------------------------------------------------
                                     48 	.area CODE
                                     49 ;	../bsearch.c: 31: void *bsearch(const void *key, const void *base, size_t nmemb, size_t size, int (*compar)(const void *, const void *) __reentrant)
                                     50 ;	-----------------------------------------
                                     51 ;	 function bsearch
                                     52 ;	-----------------------------------------
      000000                         53 _bsearch:
      000000 52 0A            [ 2]   54 	sub	sp, #10
                                     55 ;	../bsearch.c: 33: for(const char *left = base; nmemb;)
      000002 1E 10            [ 2]   56 	ldw	x, (0x10, sp)
      000004 1F 01            [ 2]   57 	ldw	(0x01, sp), x
      000006                         58 00109$:
                                     59 ;	../bsearch.c: 35: const char *middle = left + nmemb / 2 * size;
      000006 1E 12            [ 2]   60 	ldw	x, (0x12, sp)
      000008 27 4E            [ 1]   61 	jreq	00107$
      00000A 54               [ 2]   62 	srlw	x
      00000B 1F 03            [ 2]   63 	ldw	(0x03, sp), x
      00000D 1E 14            [ 2]   64 	ldw	x, (0x14, sp)
      00000F 89               [ 2]   65 	pushw	x
      000010 1E 05            [ 2]   66 	ldw	x, (0x05, sp)
      000012 89               [ 2]   67 	pushw	x
      000013 8Ds00r00r00      [ 5]   68 	callf	__mulint
      000017 5B 04            [ 2]   69 	addw	sp, #4
      000019 72 FB 01         [ 2]   70 	addw	x, (0x01, sp)
                                     71 ;	../bsearch.c: 36: int c = (*compar)(key, middle);
      00001C 1F 05            [ 2]   72 	ldw	(0x05, sp), x
      00001E 1F 07            [ 2]   73 	ldw	(0x07, sp), x
      000020 89               [ 2]   74 	pushw	x
      000021 1E 10            [ 2]   75 	ldw	x, (0x10, sp)
      000023 89               [ 2]   76 	pushw	x
      000024 4Br31            [ 1]   77 	push	#(00134$)
      000026 4Bs00            [ 1]   78 	push	#(00134$ >> 8)
      000028 4Bs00            [ 1]   79 	push	#(00134$ >> 16)
      00002A 1E 1E            [ 2]   80 	ldw	x, (0x1e, sp)
      00002C 89               [ 2]   81 	pushw	x
      00002D 7B 1F            [ 1]   82 	ld	a, (0x1f, sp)
      00002F 88               [ 1]   83 	push	a
      000030 87               [ 5]   84 	retf
      000031                         85 00134$:
      000031 5B 04            [ 2]   86 	addw	sp, #4
      000033 1F 09            [ 2]   87 	ldw	(0x09, sp), x
                                     88 ;	../bsearch.c: 38: if(c < 0)
      000035 0D 09            [ 1]   89 	tnz	(0x09, sp)
      000037 2A 06            [ 1]   90 	jrpl	00105$
                                     91 ;	../bsearch.c: 39: nmemb = nmemb / 2;	
      000039 16 03            [ 2]   92 	ldw	y, (0x03, sp)
      00003B 17 12            [ 2]   93 	ldw	(0x12, sp), y
      00003D 20 C7            [ 2]   94 	jra	00109$
      00003F                         95 00105$:
                                     96 ;	../bsearch.c: 40: else if(c > 0)
      00003F 1E 09            [ 2]   97 	ldw	x, (0x09, sp)
      000041 A3 00 00         [ 2]   98 	cpw	x, #0x0000
      000044 2D 0F            [ 1]   99 	jrsle	00102$
                                    100 ;	../bsearch.c: 42: left = middle + size;
      000046 1E 05            [ 2]  101 	ldw	x, (0x05, sp)
      000048 72 FB 14         [ 2]  102 	addw	x, (0x14, sp)
      00004B 1F 01            [ 2]  103 	ldw	(0x01, sp), x
                                    104 ;	../bsearch.c: 43: nmemb = (nmemb - 1) / 2;
      00004D 1E 12            [ 2]  105 	ldw	x, (0x12, sp)
      00004F 5A               [ 2]  106 	decw	x
      000050 54               [ 2]  107 	srlw	x
      000051 1F 12            [ 2]  108 	ldw	(0x12, sp), x
      000053 20 B1            [ 2]  109 	jra	00109$
      000055                        110 00102$:
                                    111 ;	../bsearch.c: 46: return(middle);
      000055 1E 07            [ 2]  112 	ldw	x, (0x07, sp)
                                    113 ;	../bsearch.c: 49: return(0);
      000057 21                     114 	.byte 0x21
      000058                        115 00107$:
      000058 5F               [ 1]  116 	clrw	x
      000059                        117 00111$:
                                    118 ;	../bsearch.c: 50: }
      000059 5B 0A            [ 2]  119 	addw	sp, #10
      00005B 87               [ 5]  120 	retf
                                    121 	.area CODE
                                    122 	.area CONST
                                    123 	.area INITIALIZER
                                    124 	.area CABS (ABS)
