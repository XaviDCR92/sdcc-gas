                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.9.3 #11345 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module tancotf
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _tancotf
                                     12 	.globl _fabsf
                                     13 ;--------------------------------------------------------
                                     14 ; ram data
                                     15 ;--------------------------------------------------------
                                     16 	.area DATA
                                     17 ;--------------------------------------------------------
                                     18 ; ram data
                                     19 ;--------------------------------------------------------
                                     20 	.area INITIALIZED
                                     21 ;--------------------------------------------------------
                                     22 ; absolute external ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area DABS (ABS)
                                     25 
                                     26 ; default segment ordering for linker
                                     27 	.area HOME
                                     28 	.area GSINIT
                                     29 	.area GSFINAL
                                     30 	.area CONST
                                     31 	.area INITIALIZER
                                     32 	.area CODE
                                     33 
                                     34 ;--------------------------------------------------------
                                     35 ; global & static initialisations
                                     36 ;--------------------------------------------------------
                                     37 	.area HOME
                                     38 	.area GSINIT
                                     39 	.area GSFINAL
                                     40 	.area GSINIT
                                     41 ;--------------------------------------------------------
                                     42 ; Home
                                     43 ;--------------------------------------------------------
                                     44 	.area HOME
                                     45 	.area HOME
                                     46 ;--------------------------------------------------------
                                     47 ; code
                                     48 ;--------------------------------------------------------
                                     49 	.area CODE
                                     50 ;	../tancotf.c: 53: float tancotf(float x, bool iscotan)
                                     51 ;	-----------------------------------------
                                     52 ;	 function tancotf
                                     53 ;	-----------------------------------------
      000000                         54 _tancotf:
      000000 52 0E            [ 2]   55 	sub	sp, #14
                                     56 ;	../tancotf.c: 58: if (fabsf(x) > YMAX)
      000002 1E 14            [ 2]   57 	ldw	x, (0x14, sp)
      000004 89               [ 2]   58 	pushw	x
      000005 1E 14            [ 2]   59 	ldw	x, (0x14, sp)
      000007 89               [ 2]   60 	pushw	x
      000008 8Ds00r00r00      [ 5]   61 	callf	_fabsf
      00000C 5B 04            [ 2]   62 	addw	sp, #4
      00000E 89               [ 2]   63 	pushw	x
      00000F 90 89            [ 2]   64 	pushw	y
      000011 4B 00            [ 1]   65 	push	#0x00
      000013 4B 08            [ 1]   66 	push	#0x08
      000015 4B C9            [ 1]   67 	push	#0xc9
      000017 4B 45            [ 1]   68 	push	#0x45
      000019 8Ds00r00r00      [ 5]   69 	callf	___fslt
      00001D 5B 08            [ 2]   70 	addw	sp, #8
      00001F 6B 0E            [ 1]   71 	ld	(0x0e, sp), a
      000021 27 0D            [ 1]   72 	jreq	00102$
                                     73 ;	../tancotf.c: 60: errno = ERANGE;
      000023 AE 00 22         [ 2]   74 	ldw	x, #0x0022
      000026 CFu00u00         [ 2]   75 	ldw	_errno+0, x
                                     76 ;	../tancotf.c: 61: return 0.0;
      000029 5F               [ 1]   77 	clrw	x
      00002A 90 5F            [ 1]   78 	clrw	y
      00002C ACs00r02r66      [ 2]   79 	jpf	00115$
      000030                         80 00102$:
                                     81 ;	../tancotf.c: 65: n=(x*TWO_O_PI+(x>0.0?0.5:-0.5)); /*works for +-x*/
      000030 1E 14            [ 2]   82 	ldw	x, (0x14, sp)
      000032 89               [ 2]   83 	pushw	x
      000033 1E 14            [ 2]   84 	ldw	x, (0x14, sp)
      000035 89               [ 2]   85 	pushw	x
      000036 4B 83            [ 1]   86 	push	#0x83
      000038 4B F9            [ 1]   87 	push	#0xf9
      00003A 4B 22            [ 1]   88 	push	#0x22
      00003C 4B 3F            [ 1]   89 	push	#0x3f
      00003E 8Ds00r00r00      [ 5]   90 	callf	___fsmul
      000042 5B 08            [ 2]   91 	addw	sp, #8
      000044 1F 09            [ 2]   92 	ldw	(0x09, sp), x
      000046 17 07            [ 2]   93 	ldw	(0x07, sp), y
      000048 1E 14            [ 2]   94 	ldw	x, (0x14, sp)
      00004A 89               [ 2]   95 	pushw	x
      00004B 1E 14            [ 2]   96 	ldw	x, (0x14, sp)
      00004D 89               [ 2]   97 	pushw	x
      00004E 5F               [ 1]   98 	clrw	x
      00004F 89               [ 2]   99 	pushw	x
      000050 5F               [ 1]  100 	clrw	x
      000051 89               [ 2]  101 	pushw	x
      000052 8Ds00r00r00      [ 5]  102 	callf	___fslt
      000056 5B 08            [ 2]  103 	addw	sp, #8
      000058 4D               [ 1]  104 	tnz	a
      000059 27 0A            [ 1]  105 	jreq	00117$
      00005B 5F               [ 1]  106 	clrw	x
      00005C 1F 0D            [ 2]  107 	ldw	(0x0d, sp), x
      00005E AE 3F 00         [ 2]  108 	ldw	x, #0x3f00
      000061 1F 0B            [ 2]  109 	ldw	(0x0b, sp), x
      000063 20 08            [ 2]  110 	jra	00118$
      000065                        111 00117$:
      000065 5F               [ 1]  112 	clrw	x
      000066 1F 0D            [ 2]  113 	ldw	(0x0d, sp), x
      000068 AE BF 00         [ 2]  114 	ldw	x, #0xbf00
      00006B 1F 0B            [ 2]  115 	ldw	(0x0b, sp), x
      00006D                        116 00118$:
      00006D 1E 0D            [ 2]  117 	ldw	x, (0x0d, sp)
      00006F 89               [ 2]  118 	pushw	x
      000070 1E 0D            [ 2]  119 	ldw	x, (0x0d, sp)
      000072 89               [ 2]  120 	pushw	x
      000073 1E 0D            [ 2]  121 	ldw	x, (0x0d, sp)
      000075 89               [ 2]  122 	pushw	x
      000076 1E 0D            [ 2]  123 	ldw	x, (0x0d, sp)
      000078 89               [ 2]  124 	pushw	x
      000079 8Ds00r00r00      [ 5]  125 	callf	___fsadd
      00007D 5B 08            [ 2]  126 	addw	sp, #8
      00007F 89               [ 2]  127 	pushw	x
      000080 90 89            [ 2]  128 	pushw	y
      000082 8Ds00r00r00      [ 5]  129 	callf	___fs2sint
      000086 5B 04            [ 2]  130 	addw	sp, #4
                                    131 ;	../tancotf.c: 66: xn=n;
      000088 1F 01            [ 2]  132 	ldw	(0x01, sp), x
      00008A 89               [ 2]  133 	pushw	x
      00008B 8Ds00r00r00      [ 5]  134 	callf	___sint2fs
      00008F 5B 02            [ 2]  135 	addw	sp, #2
      000091 1F 05            [ 2]  136 	ldw	(0x05, sp), x
      000093 17 03            [ 2]  137 	ldw	(0x03, sp), y
                                    138 ;	../tancotf.c: 68: xnum=(int)x;
      000095 1E 14            [ 2]  139 	ldw	x, (0x14, sp)
      000097 89               [ 2]  140 	pushw	x
      000098 1E 14            [ 2]  141 	ldw	x, (0x14, sp)
      00009A 89               [ 2]  142 	pushw	x
      00009B 8Ds00r00r00      [ 5]  143 	callf	___fs2sint
      00009F 5B 04            [ 2]  144 	addw	sp, #4
      0000A1 89               [ 2]  145 	pushw	x
      0000A2 8Ds00r00r00      [ 5]  146 	callf	___sint2fs
      0000A6 5B 02            [ 2]  147 	addw	sp, #2
      0000A8 1F 0D            [ 2]  148 	ldw	(0x0d, sp), x
      0000AA 17 0B            [ 2]  149 	ldw	(0x0b, sp), y
                                    150 ;	../tancotf.c: 69: xden=x-xnum;
      0000AC 1E 0D            [ 2]  151 	ldw	x, (0x0d, sp)
      0000AE 89               [ 2]  152 	pushw	x
      0000AF 1E 0D            [ 2]  153 	ldw	x, (0x0d, sp)
      0000B1 89               [ 2]  154 	pushw	x
      0000B2 1E 18            [ 2]  155 	ldw	x, (0x18, sp)
      0000B4 89               [ 2]  156 	pushw	x
      0000B5 1E 18            [ 2]  157 	ldw	x, (0x18, sp)
      0000B7 89               [ 2]  158 	pushw	x
      0000B8 8Ds00r00r00      [ 5]  159 	callf	___fssub
      0000BC 5B 08            [ 2]  160 	addw	sp, #8
      0000BE 1F 09            [ 2]  161 	ldw	(0x09, sp), x
      0000C0 17 07            [ 2]  162 	ldw	(0x07, sp), y
                                    163 ;	../tancotf.c: 70: f=((xnum-xn*C1)+xden)-xn*C2;
      0000C2 1E 05            [ 2]  164 	ldw	x, (0x05, sp)
      0000C4 89               [ 2]  165 	pushw	x
      0000C5 1E 05            [ 2]  166 	ldw	x, (0x05, sp)
      0000C7 89               [ 2]  167 	pushw	x
      0000C8 5F               [ 1]  168 	clrw	x
      0000C9 89               [ 2]  169 	pushw	x
      0000CA 4B C9            [ 1]  170 	push	#0xc9
      0000CC 4B 3F            [ 1]  171 	push	#0x3f
      0000CE 8Ds00r00r00      [ 5]  172 	callf	___fsmul
      0000D2 5B 08            [ 2]  173 	addw	sp, #8
      0000D4 89               [ 2]  174 	pushw	x
      0000D5 90 89            [ 2]  175 	pushw	y
      0000D7 1E 11            [ 2]  176 	ldw	x, (0x11, sp)
      0000D9 89               [ 2]  177 	pushw	x
      0000DA 1E 11            [ 2]  178 	ldw	x, (0x11, sp)
      0000DC 89               [ 2]  179 	pushw	x
      0000DD 8Ds00r00r00      [ 5]  180 	callf	___fssub
      0000E1 5B 08            [ 2]  181 	addw	sp, #8
      0000E3 1F 0D            [ 2]  182 	ldw	(0x0d, sp), x
      0000E5 1E 09            [ 2]  183 	ldw	x, (0x09, sp)
      0000E7 89               [ 2]  184 	pushw	x
      0000E8 1E 09            [ 2]  185 	ldw	x, (0x09, sp)
      0000EA 89               [ 2]  186 	pushw	x
      0000EB 1E 11            [ 2]  187 	ldw	x, (0x11, sp)
      0000ED 89               [ 2]  188 	pushw	x
      0000EE 90 89            [ 2]  189 	pushw	y
      0000F0 8Ds00r00r00      [ 5]  190 	callf	___fsadd
      0000F4 5B 08            [ 2]  191 	addw	sp, #8
      0000F6 1F 0D            [ 2]  192 	ldw	(0x0d, sp), x
      0000F8 17 0B            [ 2]  193 	ldw	(0x0b, sp), y
      0000FA 1E 05            [ 2]  194 	ldw	x, (0x05, sp)
      0000FC 89               [ 2]  195 	pushw	x
      0000FD 1E 05            [ 2]  196 	ldw	x, (0x05, sp)
      0000FF 89               [ 2]  197 	pushw	x
      000100 4B 22            [ 1]  198 	push	#0x22
      000102 4B AA            [ 1]  199 	push	#0xaa
      000104 4B FD            [ 1]  200 	push	#0xfd
      000106 4B 39            [ 1]  201 	push	#0x39
      000108 8Ds00r00r00      [ 5]  202 	callf	___fsmul
      00010C 5B 08            [ 2]  203 	addw	sp, #8
      00010E 89               [ 2]  204 	pushw	x
      00010F 90 89            [ 2]  205 	pushw	y
      000111 1E 11            [ 2]  206 	ldw	x, (0x11, sp)
      000113 89               [ 2]  207 	pushw	x
      000114 1E 11            [ 2]  208 	ldw	x, (0x11, sp)
      000116 89               [ 2]  209 	pushw	x
      000117 8Ds00r00r00      [ 5]  210 	callf	___fssub
      00011B 5B 08            [ 2]  211 	addw	sp, #8
      00011D 1F 0D            [ 2]  212 	ldw	(0x0d, sp), x
      00011F 17 0B            [ 2]  213 	ldw	(0x0b, sp), y
                                    214 ;	../tancotf.c: 72: if (fabsf(f) < EPS)
      000121 1E 0D            [ 2]  215 	ldw	x, (0x0d, sp)
      000123 89               [ 2]  216 	pushw	x
      000124 1E 0D            [ 2]  217 	ldw	x, (0x0d, sp)
      000126 89               [ 2]  218 	pushw	x
      000127 8Ds00r00r00      [ 5]  219 	callf	_fabsf
      00012B 5B 04            [ 2]  220 	addw	sp, #4
      00012D 4B 00            [ 1]  221 	push	#0x00
      00012F 4B 00            [ 1]  222 	push	#0x00
      000131 4B 80            [ 1]  223 	push	#0x80
      000133 4B 39            [ 1]  224 	push	#0x39
      000135 89               [ 2]  225 	pushw	x
      000136 90 89            [ 2]  226 	pushw	y
      000138 8Ds00r00r00      [ 5]  227 	callf	___fslt
      00013C 5B 08            [ 2]  228 	addw	sp, #8
      00013E 6B 0A            [ 1]  229 	ld	(0x0a, sp), a
      000140 27 14            [ 1]  230 	jreq	00104$
                                    231 ;	../tancotf.c: 74: xnum = f;
      000142 16 0D            [ 2]  232 	ldw	y, (0x0d, sp)
      000144 17 05            [ 2]  233 	ldw	(0x05, sp), y
      000146 16 0B            [ 2]  234 	ldw	y, (0x0b, sp)
      000148 17 03            [ 2]  235 	ldw	(0x03, sp), y
                                    236 ;	../tancotf.c: 75: xden = 1.0;
      00014A 5F               [ 1]  237 	clrw	x
      00014B 1F 0D            [ 2]  238 	ldw	(0x0d, sp), x
      00014D AE 3F 80         [ 2]  239 	ldw	x, #0x3f80
      000150 1F 0B            [ 2]  240 	ldw	(0x0b, sp), x
      000152 ACs00r01rF7      [ 2]  241 	jpf	00105$
      000156                        242 00104$:
                                    243 ;	../tancotf.c: 79: g = f*f;
      000156 1E 0D            [ 2]  244 	ldw	x, (0x0d, sp)
      000158 89               [ 2]  245 	pushw	x
      000159 1E 0D            [ 2]  246 	ldw	x, (0x0d, sp)
      00015B 89               [ 2]  247 	pushw	x
      00015C 1E 11            [ 2]  248 	ldw	x, (0x11, sp)
      00015E 89               [ 2]  249 	pushw	x
      00015F 1E 11            [ 2]  250 	ldw	x, (0x11, sp)
      000161 89               [ 2]  251 	pushw	x
      000162 8Ds00r00r00      [ 5]  252 	callf	___fsmul
      000166 5B 08            [ 2]  253 	addw	sp, #8
      000168 1F 09            [ 2]  254 	ldw	(0x09, sp), x
      00016A 17 07            [ 2]  255 	ldw	(0x07, sp), y
                                    256 ;	../tancotf.c: 80: xnum = P(f,g);
      00016C 1E 09            [ 2]  257 	ldw	x, (0x09, sp)
      00016E 89               [ 2]  258 	pushw	x
      00016F 1E 09            [ 2]  259 	ldw	x, (0x09, sp)
      000171 89               [ 2]  260 	pushw	x
      000172 4B B8            [ 1]  261 	push	#0xb8
      000174 4B 33            [ 1]  262 	push	#0x33
      000176 4B C4            [ 1]  263 	push	#0xc4
      000178 4B BD            [ 1]  264 	push	#0xbd
      00017A 8Ds00r00r00      [ 5]  265 	callf	___fsmul
      00017E 5B 08            [ 2]  266 	addw	sp, #8
      000180 1F 05            [ 2]  267 	ldw	(0x05, sp), x
      000182 1E 0D            [ 2]  268 	ldw	x, (0x0d, sp)
      000184 89               [ 2]  269 	pushw	x
      000185 1E 0D            [ 2]  270 	ldw	x, (0x0d, sp)
      000187 89               [ 2]  271 	pushw	x
      000188 1E 09            [ 2]  272 	ldw	x, (0x09, sp)
      00018A 89               [ 2]  273 	pushw	x
      00018B 90 89            [ 2]  274 	pushw	y
      00018D 8Ds00r00r00      [ 5]  275 	callf	___fsmul
      000191 5B 08            [ 2]  276 	addw	sp, #8
      000193 1F 05            [ 2]  277 	ldw	(0x05, sp), x
      000195 1E 0D            [ 2]  278 	ldw	x, (0x0d, sp)
      000197 89               [ 2]  279 	pushw	x
      000198 1E 0D            [ 2]  280 	ldw	x, (0x0d, sp)
      00019A 89               [ 2]  281 	pushw	x
      00019B 1E 09            [ 2]  282 	ldw	x, (0x09, sp)
      00019D 89               [ 2]  283 	pushw	x
      00019E 90 89            [ 2]  284 	pushw	y
      0001A0 8Ds00r00r00      [ 5]  285 	callf	___fsadd
      0001A4 5B 08            [ 2]  286 	addw	sp, #8
      0001A6 1F 05            [ 2]  287 	ldw	(0x05, sp), x
      0001A8 17 03            [ 2]  288 	ldw	(0x03, sp), y
                                    289 ;	../tancotf.c: 81: xden = Q(g);
      0001AA 1E 09            [ 2]  290 	ldw	x, (0x09, sp)
      0001AC 89               [ 2]  291 	pushw	x
      0001AD 1E 09            [ 2]  292 	ldw	x, (0x09, sp)
      0001AF 89               [ 2]  293 	pushw	x
      0001B0 4B 75            [ 1]  294 	push	#0x75
      0001B2 4B 33            [ 1]  295 	push	#0x33
      0001B4 4B 1F            [ 1]  296 	push	#0x1f
      0001B6 4B 3C            [ 1]  297 	push	#0x3c
      0001B8 8Ds00r00r00      [ 5]  298 	callf	___fsmul
      0001BC 5B 08            [ 2]  299 	addw	sp, #8
      0001BE 4B AF            [ 1]  300 	push	#0xaf
      0001C0 4B B7            [ 1]  301 	push	#0xb7
      0001C2 4B DB            [ 1]  302 	push	#0xdb
      0001C4 4B BE            [ 1]  303 	push	#0xbe
      0001C6 89               [ 2]  304 	pushw	x
      0001C7 90 89            [ 2]  305 	pushw	y
      0001C9 8Ds00r00r00      [ 5]  306 	callf	___fsadd
      0001CD 5B 08            [ 2]  307 	addw	sp, #8
      0001CF 1F 0D            [ 2]  308 	ldw	(0x0d, sp), x
      0001D1 1E 09            [ 2]  309 	ldw	x, (0x09, sp)
      0001D3 89               [ 2]  310 	pushw	x
      0001D4 1E 09            [ 2]  311 	ldw	x, (0x09, sp)
      0001D6 89               [ 2]  312 	pushw	x
      0001D7 1E 11            [ 2]  313 	ldw	x, (0x11, sp)
      0001D9 89               [ 2]  314 	pushw	x
      0001DA 90 89            [ 2]  315 	pushw	y
      0001DC 8Ds00r00r00      [ 5]  316 	callf	___fsmul
      0001E0 5B 08            [ 2]  317 	addw	sp, #8
      0001E2 4B 00            [ 1]  318 	push	#0x00
      0001E4 4B 00            [ 1]  319 	push	#0x00
      0001E6 4B 80            [ 1]  320 	push	#0x80
      0001E8 4B 3F            [ 1]  321 	push	#0x3f
      0001EA 89               [ 2]  322 	pushw	x
      0001EB 90 89            [ 2]  323 	pushw	y
      0001ED 8Ds00r00r00      [ 5]  324 	callf	___fsadd
      0001F1 5B 08            [ 2]  325 	addw	sp, #8
      0001F3 1F 0D            [ 2]  326 	ldw	(0x0d, sp), x
      0001F5 17 0B            [ 2]  327 	ldw	(0x0b, sp), y
      0001F7                        328 00105$:
                                    329 ;	../tancotf.c: 84: if(n&1)
      0001F7 7B 02            [ 1]  330 	ld	a, (0x02, sp)
      0001F9 44               [ 1]  331 	srl	a
      0001FA 24 40            [ 1]  332 	jrnc	00113$
                                    333 ;	../tancotf.c: 87: if(iscotan) return (-xnum/xden);
      0001FC 0D 16            [ 1]  334 	tnz	(0x16, sp)
      0001FE 27 1E            [ 1]  335 	jreq	00107$
      000200 16 05            [ 2]  336 	ldw	y, (0x05, sp)
      000202 1E 03            [ 2]  337 	ldw	x, (0x03, sp)
      000204 58               [ 2]  338 	sllw	x
      000205 8C               [ 1]  339 	ccf
      000206 56               [ 2]  340 	rrcw	x
      000207 7B 0E            [ 1]  341 	ld	a, (0x0e, sp)
      000209 88               [ 1]  342 	push	a
      00020A 7B 0E            [ 1]  343 	ld	a, (0x0e, sp)
      00020C 88               [ 1]  344 	push	a
      00020D 7B 0E            [ 1]  345 	ld	a, (0x0e, sp)
      00020F 88               [ 1]  346 	push	a
      000210 7B 0E            [ 1]  347 	ld	a, (0x0e, sp)
      000212 88               [ 1]  348 	push	a
      000213 90 89            [ 2]  349 	pushw	y
      000215 89               [ 2]  350 	pushw	x
      000216 8Ds00r00r00      [ 5]  351 	callf	___fsdiv
      00021A 5B 08            [ 2]  352 	addw	sp, #8
      00021C 20 48            [ 2]  353 	jra	00115$
      00021E                        354 00107$:
                                    355 ;	../tancotf.c: 88: else return (-xden/xnum);
      00021E 16 0D            [ 2]  356 	ldw	y, (0x0d, sp)
      000220 1E 0B            [ 2]  357 	ldw	x, (0x0b, sp)
      000222 58               [ 2]  358 	sllw	x
      000223 8C               [ 1]  359 	ccf
      000224 56               [ 2]  360 	rrcw	x
      000225 7B 06            [ 1]  361 	ld	a, (0x06, sp)
      000227 88               [ 1]  362 	push	a
      000228 7B 06            [ 1]  363 	ld	a, (0x06, sp)
      00022A 88               [ 1]  364 	push	a
      00022B 7B 06            [ 1]  365 	ld	a, (0x06, sp)
      00022D 88               [ 1]  366 	push	a
      00022E 7B 06            [ 1]  367 	ld	a, (0x06, sp)
      000230 88               [ 1]  368 	push	a
      000231 90 89            [ 2]  369 	pushw	y
      000233 89               [ 2]  370 	pushw	x
      000234 8Ds00r00r00      [ 5]  371 	callf	___fsdiv
      000238 5B 08            [ 2]  372 	addw	sp, #8
      00023A 20 2A            [ 2]  373 	jra	00115$
      00023C                        374 00113$:
                                    375 ;	../tancotf.c: 92: if(iscotan) return (xden/xnum);
      00023C 0D 16            [ 1]  376 	tnz	(0x16, sp)
      00023E 27 14            [ 1]  377 	jreq	00110$
      000240 1E 05            [ 2]  378 	ldw	x, (0x05, sp)
      000242 89               [ 2]  379 	pushw	x
      000243 1E 05            [ 2]  380 	ldw	x, (0x05, sp)
      000245 89               [ 2]  381 	pushw	x
      000246 1E 11            [ 2]  382 	ldw	x, (0x11, sp)
      000248 89               [ 2]  383 	pushw	x
      000249 1E 11            [ 2]  384 	ldw	x, (0x11, sp)
      00024B 89               [ 2]  385 	pushw	x
      00024C 8Ds00r00r00      [ 5]  386 	callf	___fsdiv
      000250 5B 08            [ 2]  387 	addw	sp, #8
      000252 20 12            [ 2]  388 	jra	00115$
      000254                        389 00110$:
                                    390 ;	../tancotf.c: 93: else return (xnum/xden);
      000254 1E 0D            [ 2]  391 	ldw	x, (0x0d, sp)
      000256 89               [ 2]  392 	pushw	x
      000257 1E 0D            [ 2]  393 	ldw	x, (0x0d, sp)
      000259 89               [ 2]  394 	pushw	x
      00025A 1E 09            [ 2]  395 	ldw	x, (0x09, sp)
      00025C 89               [ 2]  396 	pushw	x
      00025D 1E 09            [ 2]  397 	ldw	x, (0x09, sp)
      00025F 89               [ 2]  398 	pushw	x
      000260 8Ds00r00r00      [ 5]  399 	callf	___fsdiv
      000264 5B 08            [ 2]  400 	addw	sp, #8
      000266                        401 00115$:
                                    402 ;	../tancotf.c: 95: }
      000266 5B 0E            [ 2]  403 	addw	sp, #14
      000268 87               [ 5]  404 	retf
                                    405 	.area CODE
                                    406 	.area CONST
                                    407 	.area INITIALIZER
                                    408 	.area CABS (ABS)
