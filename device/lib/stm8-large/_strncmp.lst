                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.9.3 #11345 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _strncmp
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _strncmp
                                     12 ;--------------------------------------------------------
                                     13 ; ram data
                                     14 ;--------------------------------------------------------
                                     15 	.area DATA
                                     16 ;--------------------------------------------------------
                                     17 ; ram data
                                     18 ;--------------------------------------------------------
                                     19 	.area INITIALIZED
                                     20 ;--------------------------------------------------------
                                     21 ; absolute external ram data
                                     22 ;--------------------------------------------------------
                                     23 	.area DABS (ABS)
                                     24 
                                     25 ; default segment ordering for linker
                                     26 	.area HOME
                                     27 	.area GSINIT
                                     28 	.area GSFINAL
                                     29 	.area CONST
                                     30 	.area INITIALIZER
                                     31 	.area CODE
                                     32 
                                     33 ;--------------------------------------------------------
                                     34 ; global & static initialisations
                                     35 ;--------------------------------------------------------
                                     36 	.area HOME
                                     37 	.area GSINIT
                                     38 	.area GSFINAL
                                     39 	.area GSINIT
                                     40 ;--------------------------------------------------------
                                     41 ; Home
                                     42 ;--------------------------------------------------------
                                     43 	.area HOME
                                     44 	.area HOME
                                     45 ;--------------------------------------------------------
                                     46 ; code
                                     47 ;--------------------------------------------------------
                                     48 	.area CODE
                                     49 ;	../_strncmp.c: 31: int strncmp ( const char * first, const char * last, size_t count )
                                     50 ;	-----------------------------------------
                                     51 ;	 function strncmp
                                     52 ;	-----------------------------------------
      000000                         53 _strncmp:
      000000 52 05            [ 2]   54 	sub	sp, #5
                                     55 ;	../_strncmp.c: 33: if (!count)
                                     56 ;	../_strncmp.c: 34: return(0);
      000002 1E 0D            [ 2]   57 	ldw	x, (0x0d, sp)
                                     58 ;	../_strncmp.c: 36: while (--count && *first && *first == *last) {
      000004 27 38            [ 1]   59 	jreq	00108$
      000006 16 09            [ 2]   60 	ldw	y, (0x09, sp)
      000008 17 02            [ 2]   61 	ldw	(0x02, sp), y
      00000A 16 0B            [ 2]   62 	ldw	y, (0x0b, sp)
      00000C 17 04            [ 2]   63 	ldw	(0x04, sp), y
      00000E 16 0D            [ 2]   64 	ldw	y, (0x0d, sp)
      000010                         65 00105$:
      000010 90 5A            [ 2]   66 	decw	y
      000012 1E 02            [ 2]   67 	ldw	x, (0x02, sp)
      000014 F6               [ 1]   68 	ld	a, (x)
      000015 1E 04            [ 2]   69 	ldw	x, (0x04, sp)
      000017 88               [ 1]   70 	push	a
      000018 F6               [ 1]   71 	ld	a, (x)
      000019 6B 02            [ 1]   72 	ld	(0x02, sp), a
      00001B 84               [ 1]   73 	pop	a
      00001C 90 5D            [ 2]   74 	tnzw	y
      00001E 27 13            [ 1]   75 	jreq	00107$
      000020 4D               [ 1]   76 	tnz	a
      000021 27 10            [ 1]   77 	jreq	00107$
      000023 11 01            [ 1]   78 	cp	a, (0x01, sp)
      000025 26 0C            [ 1]   79 	jrne	00107$
                                     80 ;	../_strncmp.c: 37: first++;
      000027 1E 02            [ 2]   81 	ldw	x, (0x02, sp)
      000029 5C               [ 1]   82 	incw	x
      00002A 1F 02            [ 2]   83 	ldw	(0x02, sp), x
                                     84 ;	../_strncmp.c: 38: last++;
      00002C 1E 04            [ 2]   85 	ldw	x, (0x04, sp)
      00002E 5C               [ 1]   86 	incw	x
      00002F 1F 04            [ 2]   87 	ldw	(0x04, sp), x
      000031 20 DD            [ 2]   88 	jra	00105$
      000033                         89 00107$:
                                     90 ;	../_strncmp.c: 41: return( *first - *last );
      000033 5F               [ 1]   91 	clrw	x
      000034 97               [ 1]   92 	ld	xl, a
      000035 7B 01            [ 1]   93 	ld	a, (0x01, sp)
      000037 6B 05            [ 1]   94 	ld	(0x05, sp), a
      000039 0F 04            [ 1]   95 	clr	(0x04, sp)
      00003B 72 F0 04         [ 2]   96 	subw	x, (0x04, sp)
      00003E                         97 00108$:
                                     98 ;	../_strncmp.c: 42: }
      00003E 5B 05            [ 2]   99 	addw	sp, #5
      000040 87               [ 5]  100 	retf
                                    101 	.area CODE
                                    102 	.area CONST
                                    103 	.area INITIALIZER
                                    104 	.area CABS (ABS)
