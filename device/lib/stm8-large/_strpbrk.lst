                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.9.3 #11345 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _strpbrk
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _strchr
                                     12 	.globl _strpbrk
                                     13 ;--------------------------------------------------------
                                     14 ; ram data
                                     15 ;--------------------------------------------------------
                                     16 	.area DATA
                                     17 ;--------------------------------------------------------
                                     18 ; ram data
                                     19 ;--------------------------------------------------------
                                     20 	.area INITIALIZED
                                     21 ;--------------------------------------------------------
                                     22 ; absolute external ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area DABS (ABS)
                                     25 
                                     26 ; default segment ordering for linker
                                     27 	.area HOME
                                     28 	.area GSINIT
                                     29 	.area GSFINAL
                                     30 	.area CONST
                                     31 	.area INITIALIZER
                                     32 	.area CODE
                                     33 
                                     34 ;--------------------------------------------------------
                                     35 ; global & static initialisations
                                     36 ;--------------------------------------------------------
                                     37 	.area HOME
                                     38 	.area GSINIT
                                     39 	.area GSFINAL
                                     40 	.area GSINIT
                                     41 ;--------------------------------------------------------
                                     42 ; Home
                                     43 ;--------------------------------------------------------
                                     44 	.area HOME
                                     45 	.area HOME
                                     46 ;--------------------------------------------------------
                                     47 ; code
                                     48 ;--------------------------------------------------------
                                     49 	.area CODE
                                     50 ;	../_strpbrk.c: 31: char * strpbrk ( const char * string, const char * control )
                                     51 ;	-----------------------------------------
                                     52 ;	 function strpbrk
                                     53 ;	-----------------------------------------
      000000                         54 _strpbrk:
      000000 52 04            [ 2]   55 	sub	sp, #4
                                     56 ;	../_strpbrk.c: 33: char *ret = NULL;
      000002 5F               [ 1]   57 	clrw	x
      000003 1F 01            [ 2]   58 	ldw	(0x01, sp), x
                                     59 ;	../_strpbrk.c: 36: while (ch = *control) {
      000005 16 0A            [ 2]   60 	ldw	y, (0x0a, sp)
      000007 17 03            [ 2]   61 	ldw	(0x03, sp), y
      000009                         62 00105$:
      000009 1E 03            [ 2]   63 	ldw	x, (0x03, sp)
      00000B F6               [ 1]   64 	ld	a, (x)
      00000C 97               [ 1]   65 	ld	xl, a
      00000D 4D               [ 1]   66 	tnz	a
      00000E 27 20            [ 1]   67 	jreq	00107$
                                     68 ;	../_strpbrk.c: 37: char * p = strchr(string, ch);
      000010 4F               [ 1]   69 	clr	a
      000011 95               [ 1]   70 	ld	xh, a
      000012 89               [ 2]   71 	pushw	x
      000013 1E 0A            [ 2]   72 	ldw	x, (0x0a, sp)
      000015 89               [ 2]   73 	pushw	x
      000016 8Ds00r00r00      [ 5]   74 	callf	_strchr
      00001A 5B 04            [ 2]   75 	addw	sp, #4
                                     76 ;	../_strpbrk.c: 38: if (p != NULL && (ret == NULL || p < ret)) {
      00001C 5D               [ 2]   77 	tnzw	x
      00001D 27 0A            [ 1]   78 	jreq	00102$
      00001F 16 01            [ 2]   79 	ldw	y, (0x01, sp)
      000021 27 04            [ 1]   80 	jreq	00101$
      000023 13 01            [ 2]   81 	cpw	x, (0x01, sp)
      000025 24 02            [ 1]   82 	jrnc	00102$
      000027                         83 00101$:
                                     84 ;	../_strpbrk.c: 39: ret = p;
      000027 1F 01            [ 2]   85 	ldw	(0x01, sp), x
      000029                         86 00102$:
                                     87 ;	../_strpbrk.c: 41: control++;
      000029 1E 03            [ 2]   88 	ldw	x, (0x03, sp)
      00002B 5C               [ 1]   89 	incw	x
      00002C 1F 03            [ 2]   90 	ldw	(0x03, sp), x
      00002E 20 D9            [ 2]   91 	jra	00105$
      000030                         92 00107$:
                                     93 ;	../_strpbrk.c: 44: return (ret);
      000030 1E 01            [ 2]   94 	ldw	x, (0x01, sp)
                                     95 ;	../_strpbrk.c: 45: }
      000032 5B 04            [ 2]   96 	addw	sp, #4
      000034 87               [ 5]   97 	retf
                                     98 	.area CODE
                                     99 	.area CONST
                                    100 	.area INITIALIZER
                                    101 	.area CABS (ABS)
