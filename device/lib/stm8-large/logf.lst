                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.9.3 #11345 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module logf
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _frexpf
                                     12 	.globl _logf
                                     13 ;--------------------------------------------------------
                                     14 ; ram data
                                     15 ;--------------------------------------------------------
                                     16 	.area DATA
                                     17 ;--------------------------------------------------------
                                     18 ; ram data
                                     19 ;--------------------------------------------------------
                                     20 	.area INITIALIZED
                                     21 ;--------------------------------------------------------
                                     22 ; absolute external ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area DABS (ABS)
                                     25 
                                     26 ; default segment ordering for linker
                                     27 	.area HOME
                                     28 	.area GSINIT
                                     29 	.area GSFINAL
                                     30 	.area CONST
                                     31 	.area INITIALIZER
                                     32 	.area CODE
                                     33 
                                     34 ;--------------------------------------------------------
                                     35 ; global & static initialisations
                                     36 ;--------------------------------------------------------
                                     37 	.area HOME
                                     38 	.area GSINIT
                                     39 	.area GSFINAL
                                     40 	.area GSINIT
                                     41 ;--------------------------------------------------------
                                     42 ; Home
                                     43 ;--------------------------------------------------------
                                     44 	.area HOME
                                     45 	.area HOME
                                     46 ;--------------------------------------------------------
                                     47 ; code
                                     48 ;--------------------------------------------------------
                                     49 	.area CODE
                                     50 ;	../logf.c: 216: float logf(float x) _FLOAT_FUNC_REENTRANT
                                     51 ;	-----------------------------------------
                                     52 ;	 function logf
                                     53 ;	-----------------------------------------
      000000                         54 _logf:
      000000 52 0E            [ 2]   55 	sub	sp, #14
                                     56 ;	../logf.c: 226: if (x<=0.0)
      000002 1E 14            [ 2]   57 	ldw	x, (0x14, sp)
      000004 89               [ 2]   58 	pushw	x
      000005 1E 14            [ 2]   59 	ldw	x, (0x14, sp)
      000007 89               [ 2]   60 	pushw	x
      000008 5F               [ 1]   61 	clrw	x
      000009 89               [ 2]   62 	pushw	x
      00000A 5F               [ 1]   63 	clrw	x
      00000B 89               [ 2]   64 	pushw	x
      00000C 8Ds00r00r00      [ 5]   65 	callf	___fslt
      000010 5B 08            [ 2]   66 	addw	sp, #8
      000012 6B 0E            [ 1]   67 	ld	(0x0e, sp), a
      000014 26 0D            [ 1]   68 	jrne	00102$
                                     69 ;	../logf.c: 228: errno=EDOM;
      000016 AE 00 21         [ 2]   70 	ldw	x, #0x0021
      000019 CFu00u00         [ 2]   71 	ldw	_errno+0, x
                                     72 ;	../logf.c: 229: return 0.0;
      00001C 5F               [ 1]   73 	clrw	x
      00001D 90 5F            [ 1]   74 	clrw	y
      00001F ACs00r01rF2      [ 2]   75 	jpf	00106$
      000023                         76 00102$:
                                     77 ;	../logf.c: 231: f=frexpf(x, &n);
      000023 96               [ 1]   78 	ldw	x, sp
      000024 5C               [ 1]   79 	incw	x
      000025 89               [ 2]   80 	pushw	x
      000026 1E 16            [ 2]   81 	ldw	x, (0x16, sp)
      000028 89               [ 2]   82 	pushw	x
      000029 1E 16            [ 2]   83 	ldw	x, (0x16, sp)
      00002B 89               [ 2]   84 	pushw	x
      00002C 8Ds00r00r00      [ 5]   85 	callf	_frexpf
      000030 5B 06            [ 2]   86 	addw	sp, #6
      000032 1F 05            [ 2]   87 	ldw	(0x05, sp), x
      000034 17 03            [ 2]   88 	ldw	(0x03, sp), y
                                     89 ;	../logf.c: 232: znum=f-0.5;
      000036 5F               [ 1]   90 	clrw	x
      000037 89               [ 2]   91 	pushw	x
      000038 4B 00            [ 1]   92 	push	#0x00
      00003A 4B 3F            [ 1]   93 	push	#0x3f
      00003C 1E 09            [ 2]   94 	ldw	x, (0x09, sp)
      00003E 89               [ 2]   95 	pushw	x
      00003F 1E 09            [ 2]   96 	ldw	x, (0x09, sp)
      000041 89               [ 2]   97 	pushw	x
      000042 8Ds00r00r00      [ 5]   98 	callf	___fssub
      000046 5B 08            [ 2]   99 	addw	sp, #8
      000048 1F 09            [ 2]  100 	ldw	(0x09, sp), x
      00004A 17 07            [ 2]  101 	ldw	(0x07, sp), y
                                    102 ;	../logf.c: 233: if (f>C0)
      00004C 1E 05            [ 2]  103 	ldw	x, (0x05, sp)
      00004E 89               [ 2]  104 	pushw	x
      00004F 1E 05            [ 2]  105 	ldw	x, (0x05, sp)
      000051 89               [ 2]  106 	pushw	x
      000052 4B F3            [ 1]  107 	push	#0xf3
      000054 4B 04            [ 1]  108 	push	#0x04
      000056 4B 35            [ 1]  109 	push	#0x35
      000058 4B 3F            [ 1]  110 	push	#0x3f
      00005A 8Ds00r00r00      [ 5]  111 	callf	___fslt
      00005E 5B 08            [ 2]  112 	addw	sp, #8
      000060 6B 0E            [ 1]  113 	ld	(0x0e, sp), a
      000062 27 3F            [ 1]  114 	jreq	00104$
                                    115 ;	../logf.c: 235: znum-=0.5;
      000064 5F               [ 1]  116 	clrw	x
      000065 89               [ 2]  117 	pushw	x
      000066 4B 00            [ 1]  118 	push	#0x00
      000068 4B 3F            [ 1]  119 	push	#0x3f
      00006A 1E 0D            [ 2]  120 	ldw	x, (0x0d, sp)
      00006C 89               [ 2]  121 	pushw	x
      00006D 1E 0D            [ 2]  122 	ldw	x, (0x0d, sp)
      00006F 89               [ 2]  123 	pushw	x
      000070 8Ds00r00r00      [ 5]  124 	callf	___fssub
      000074 5B 08            [ 2]  125 	addw	sp, #8
      000076 1F 09            [ 2]  126 	ldw	(0x09, sp), x
      000078 17 07            [ 2]  127 	ldw	(0x07, sp), y
                                    128 ;	../logf.c: 236: zden=(f*0.5)+0.5;
      00007A 1E 05            [ 2]  129 	ldw	x, (0x05, sp)
      00007C 89               [ 2]  130 	pushw	x
      00007D 1E 05            [ 2]  131 	ldw	x, (0x05, sp)
      00007F 89               [ 2]  132 	pushw	x
      000080 5F               [ 1]  133 	clrw	x
      000081 89               [ 2]  134 	pushw	x
      000082 4B 00            [ 1]  135 	push	#0x00
      000084 4B 3F            [ 1]  136 	push	#0x3f
      000086 8Ds00r00r00      [ 5]  137 	callf	___fsmul
      00008A 5B 08            [ 2]  138 	addw	sp, #8
      00008C 4B 00            [ 1]  139 	push	#0x00
      00008E 4B 00            [ 1]  140 	push	#0x00
      000090 4B 00            [ 1]  141 	push	#0x00
      000092 4B 3F            [ 1]  142 	push	#0x3f
      000094 89               [ 2]  143 	pushw	x
      000095 90 89            [ 2]  144 	pushw	y
      000097 8Ds00r00r00      [ 5]  145 	callf	___fsadd
      00009B 5B 08            [ 2]  146 	addw	sp, #8
      00009D 1F 0D            [ 2]  147 	ldw	(0x0d, sp), x
      00009F 17 0B            [ 2]  148 	ldw	(0x0b, sp), y
      0000A1 20 2C            [ 2]  149 	jra	00105$
      0000A3                        150 00104$:
                                    151 ;	../logf.c: 240: n--;
      0000A3 1E 01            [ 2]  152 	ldw	x, (0x01, sp)
      0000A5 5A               [ 2]  153 	decw	x
      0000A6 1F 01            [ 2]  154 	ldw	(0x01, sp), x
                                    155 ;	../logf.c: 241: zden=znum*0.5+0.5;
      0000A8 1E 09            [ 2]  156 	ldw	x, (0x09, sp)
      0000AA 89               [ 2]  157 	pushw	x
      0000AB 1E 09            [ 2]  158 	ldw	x, (0x09, sp)
      0000AD 89               [ 2]  159 	pushw	x
      0000AE 5F               [ 1]  160 	clrw	x
      0000AF 89               [ 2]  161 	pushw	x
      0000B0 4B 00            [ 1]  162 	push	#0x00
      0000B2 4B 3F            [ 1]  163 	push	#0x3f
      0000B4 8Ds00r00r00      [ 5]  164 	callf	___fsmul
      0000B8 5B 08            [ 2]  165 	addw	sp, #8
      0000BA 4B 00            [ 1]  166 	push	#0x00
      0000BC 4B 00            [ 1]  167 	push	#0x00
      0000BE 4B 00            [ 1]  168 	push	#0x00
      0000C0 4B 3F            [ 1]  169 	push	#0x3f
      0000C2 89               [ 2]  170 	pushw	x
      0000C3 90 89            [ 2]  171 	pushw	y
      0000C5 8Ds00r00r00      [ 5]  172 	callf	___fsadd
      0000C9 5B 08            [ 2]  173 	addw	sp, #8
      0000CB 1F 0D            [ 2]  174 	ldw	(0x0d, sp), x
      0000CD 17 0B            [ 2]  175 	ldw	(0x0b, sp), y
      0000CF                        176 00105$:
                                    177 ;	../logf.c: 243: z=znum/zden;
      0000CF 1E 0D            [ 2]  178 	ldw	x, (0x0d, sp)
      0000D1 89               [ 2]  179 	pushw	x
      0000D2 1E 0D            [ 2]  180 	ldw	x, (0x0d, sp)
      0000D4 89               [ 2]  181 	pushw	x
      0000D5 1E 0D            [ 2]  182 	ldw	x, (0x0d, sp)
      0000D7 89               [ 2]  183 	pushw	x
      0000D8 1E 0D            [ 2]  184 	ldw	x, (0x0d, sp)
      0000DA 89               [ 2]  185 	pushw	x
      0000DB 8Ds00r00r00      [ 5]  186 	callf	___fsdiv
      0000DF 5B 08            [ 2]  187 	addw	sp, #8
      0000E1 1F 0D            [ 2]  188 	ldw	(0x0d, sp), x
      0000E3 17 0B            [ 2]  189 	ldw	(0x0b, sp), y
      0000E5 16 0D            [ 2]  190 	ldw	y, (0x0d, sp)
      0000E7 17 05            [ 2]  191 	ldw	(0x05, sp), y
      0000E9 16 0B            [ 2]  192 	ldw	y, (0x0b, sp)
      0000EB 17 03            [ 2]  193 	ldw	(0x03, sp), y
                                    194 ;	../logf.c: 244: w=z*z;
      0000ED 1E 05            [ 2]  195 	ldw	x, (0x05, sp)
      0000EF 89               [ 2]  196 	pushw	x
      0000F0 1E 05            [ 2]  197 	ldw	x, (0x05, sp)
      0000F2 89               [ 2]  198 	pushw	x
      0000F3 1E 09            [ 2]  199 	ldw	x, (0x09, sp)
      0000F5 89               [ 2]  200 	pushw	x
      0000F6 1E 09            [ 2]  201 	ldw	x, (0x09, sp)
      0000F8 89               [ 2]  202 	pushw	x
      0000F9 8Ds00r00r00      [ 5]  203 	callf	___fsmul
      0000FD 5B 08            [ 2]  204 	addw	sp, #8
      0000FF 1F 0D            [ 2]  205 	ldw	(0x0d, sp), x
      000101 17 0B            [ 2]  206 	ldw	(0x0b, sp), y
                                    207 ;	../logf.c: 246: Rz=z+z*(w*A(w)/B(w));
      000103 1E 0D            [ 2]  208 	ldw	x, (0x0d, sp)
      000105 89               [ 2]  209 	pushw	x
      000106 1E 0D            [ 2]  210 	ldw	x, (0x0d, sp)
      000108 89               [ 2]  211 	pushw	x
      000109 4B 3D            [ 1]  212 	push	#0x3d
      00010B 4B 7E            [ 1]  213 	push	#0x7e
      00010D 4B 0D            [ 1]  214 	push	#0x0d
      00010F 4B BF            [ 1]  215 	push	#0xbf
      000111 8Ds00r00r00      [ 5]  216 	callf	___fsmul
      000115 5B 08            [ 2]  217 	addw	sp, #8
      000117 1F 09            [ 2]  218 	ldw	(0x09, sp), x
      000119 17 07            [ 2]  219 	ldw	(0x07, sp), y
      00011B 4B 3A            [ 1]  220 	push	#0x3a
      00011D 4B 3F            [ 1]  221 	push	#0x3f
      00011F 4B D4            [ 1]  222 	push	#0xd4
      000121 4B C0            [ 1]  223 	push	#0xc0
      000123 1E 11            [ 2]  224 	ldw	x, (0x11, sp)
      000125 89               [ 2]  225 	pushw	x
      000126 1E 11            [ 2]  226 	ldw	x, (0x11, sp)
      000128 89               [ 2]  227 	pushw	x
      000129 8Ds00r00r00      [ 5]  228 	callf	___fsadd
      00012D 5B 08            [ 2]  229 	addw	sp, #8
      00012F 1F 0D            [ 2]  230 	ldw	(0x0d, sp), x
      000131 17 0B            [ 2]  231 	ldw	(0x0b, sp), y
      000133 1E 0D            [ 2]  232 	ldw	x, (0x0d, sp)
      000135 89               [ 2]  233 	pushw	x
      000136 1E 0D            [ 2]  234 	ldw	x, (0x0d, sp)
      000138 89               [ 2]  235 	pushw	x
      000139 1E 0D            [ 2]  236 	ldw	x, (0x0d, sp)
      00013B 89               [ 2]  237 	pushw	x
      00013C 1E 0D            [ 2]  238 	ldw	x, (0x0d, sp)
      00013E 89               [ 2]  239 	pushw	x
      00013F 8Ds00r00r00      [ 5]  240 	callf	___fsdiv
      000143 5B 08            [ 2]  241 	addw	sp, #8
      000145 1F 0D            [ 2]  242 	ldw	(0x0d, sp), x
      000147 17 0B            [ 2]  243 	ldw	(0x0b, sp), y
      000149 1E 0D            [ 2]  244 	ldw	x, (0x0d, sp)
      00014B 89               [ 2]  245 	pushw	x
      00014C 1E 0D            [ 2]  246 	ldw	x, (0x0d, sp)
      00014E 89               [ 2]  247 	pushw	x
      00014F 1E 09            [ 2]  248 	ldw	x, (0x09, sp)
      000151 89               [ 2]  249 	pushw	x
      000152 1E 09            [ 2]  250 	ldw	x, (0x09, sp)
      000154 89               [ 2]  251 	pushw	x
      000155 8Ds00r00r00      [ 5]  252 	callf	___fsmul
      000159 5B 08            [ 2]  253 	addw	sp, #8
      00015B 1F 0D            [ 2]  254 	ldw	(0x0d, sp), x
      00015D 17 0B            [ 2]  255 	ldw	(0x0b, sp), y
      00015F 1E 0D            [ 2]  256 	ldw	x, (0x0d, sp)
      000161 89               [ 2]  257 	pushw	x
      000162 1E 0D            [ 2]  258 	ldw	x, (0x0d, sp)
      000164 89               [ 2]  259 	pushw	x
      000165 1E 09            [ 2]  260 	ldw	x, (0x09, sp)
      000167 89               [ 2]  261 	pushw	x
      000168 1E 09            [ 2]  262 	ldw	x, (0x09, sp)
      00016A 89               [ 2]  263 	pushw	x
      00016B 8Ds00r00r00      [ 5]  264 	callf	___fsadd
      00016F 5B 08            [ 2]  265 	addw	sp, #8
      000171 1F 0D            [ 2]  266 	ldw	(0x0d, sp), x
      000173 17 0B            [ 2]  267 	ldw	(0x0b, sp), y
      000175 16 0D            [ 2]  268 	ldw	y, (0x0d, sp)
      000177 17 05            [ 2]  269 	ldw	(0x05, sp), y
      000179 16 0B            [ 2]  270 	ldw	y, (0x0b, sp)
      00017B 17 03            [ 2]  271 	ldw	(0x03, sp), y
                                    272 ;	../logf.c: 247: xn=n;
      00017D 1E 01            [ 2]  273 	ldw	x, (0x01, sp)
      00017F 89               [ 2]  274 	pushw	x
      000180 8Ds00r00r00      [ 5]  275 	callf	___sint2fs
      000184 5B 02            [ 2]  276 	addw	sp, #2
      000186 1F 0D            [ 2]  277 	ldw	(0x0d, sp), x
      000188 17 0B            [ 2]  278 	ldw	(0x0b, sp), y
      00018A 16 0D            [ 2]  279 	ldw	y, (0x0d, sp)
      00018C 17 09            [ 2]  280 	ldw	(0x09, sp), y
      00018E 16 0B            [ 2]  281 	ldw	y, (0x0b, sp)
      000190 17 07            [ 2]  282 	ldw	(0x07, sp), y
                                    283 ;	../logf.c: 248: return ((xn*C2+Rz)+xn*C1);
      000192 1E 09            [ 2]  284 	ldw	x, (0x09, sp)
      000194 89               [ 2]  285 	pushw	x
      000195 1E 09            [ 2]  286 	ldw	x, (0x09, sp)
      000197 89               [ 2]  287 	pushw	x
      000198 4B 83            [ 1]  288 	push	#0x83
      00019A 4B 80            [ 1]  289 	push	#0x80
      00019C 4B 5E            [ 1]  290 	push	#0x5e
      00019E 4B B9            [ 1]  291 	push	#0xb9
      0001A0 8Ds00r00r00      [ 5]  292 	callf	___fsmul
      0001A4 5B 08            [ 2]  293 	addw	sp, #8
      0001A6 1F 0D            [ 2]  294 	ldw	(0x0d, sp), x
      0001A8 17 0B            [ 2]  295 	ldw	(0x0b, sp), y
      0001AA 1E 05            [ 2]  296 	ldw	x, (0x05, sp)
      0001AC 89               [ 2]  297 	pushw	x
      0001AD 1E 05            [ 2]  298 	ldw	x, (0x05, sp)
      0001AF 89               [ 2]  299 	pushw	x
      0001B0 1E 11            [ 2]  300 	ldw	x, (0x11, sp)
      0001B2 89               [ 2]  301 	pushw	x
      0001B3 1E 11            [ 2]  302 	ldw	x, (0x11, sp)
      0001B5 89               [ 2]  303 	pushw	x
      0001B6 8Ds00r00r00      [ 5]  304 	callf	___fsadd
      0001BA 5B 08            [ 2]  305 	addw	sp, #8
      0001BC 1F 0D            [ 2]  306 	ldw	(0x0d, sp), x
      0001BE 17 0B            [ 2]  307 	ldw	(0x0b, sp), y
      0001C0 1E 09            [ 2]  308 	ldw	x, (0x09, sp)
      0001C2 89               [ 2]  309 	pushw	x
      0001C3 1E 09            [ 2]  310 	ldw	x, (0x09, sp)
      0001C5 89               [ 2]  311 	pushw	x
      0001C6 4B 00            [ 1]  312 	push	#0x00
      0001C8 4B 80            [ 1]  313 	push	#0x80
      0001CA 4B 31            [ 1]  314 	push	#0x31
      0001CC 4B 3F            [ 1]  315 	push	#0x3f
      0001CE 8Ds00r00r00      [ 5]  316 	callf	___fsmul
      0001D2 5B 08            [ 2]  317 	addw	sp, #8
      0001D4 1F 09            [ 2]  318 	ldw	(0x09, sp), x
      0001D6 17 07            [ 2]  319 	ldw	(0x07, sp), y
      0001D8 1E 09            [ 2]  320 	ldw	x, (0x09, sp)
      0001DA 89               [ 2]  321 	pushw	x
      0001DB 1E 09            [ 2]  322 	ldw	x, (0x09, sp)
      0001DD 89               [ 2]  323 	pushw	x
      0001DE 1E 11            [ 2]  324 	ldw	x, (0x11, sp)
      0001E0 89               [ 2]  325 	pushw	x
      0001E1 1E 11            [ 2]  326 	ldw	x, (0x11, sp)
      0001E3 89               [ 2]  327 	pushw	x
      0001E4 8Ds00r00r00      [ 5]  328 	callf	___fsadd
      0001E8 5B 08            [ 2]  329 	addw	sp, #8
      0001EA 1F 0D            [ 2]  330 	ldw	(0x0d, sp), x
      0001EC 17 0B            [ 2]  331 	ldw	(0x0b, sp), y
      0001EE 1E 0D            [ 2]  332 	ldw	x, (0x0d, sp)
      0001F0 16 0B            [ 2]  333 	ldw	y, (0x0b, sp)
      0001F2                        334 00106$:
                                    335 ;	../logf.c: 249: }
      0001F2 5B 0E            [ 2]  336 	addw	sp, #14
      0001F4 87               [ 5]  337 	retf
                                    338 	.area CODE
                                    339 	.area CONST
                                    340 	.area INITIALIZER
                                    341 	.area CABS (ABS)
