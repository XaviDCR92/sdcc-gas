                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.9.3 #11345 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module cotf
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _tancotf
                                     12 	.globl _fabsf
                                     13 	.globl _cotf
                                     14 ;--------------------------------------------------------
                                     15 ; ram data
                                     16 ;--------------------------------------------------------
                                     17 	.area DATA
                                     18 ;--------------------------------------------------------
                                     19 ; ram data
                                     20 ;--------------------------------------------------------
                                     21 	.area INITIALIZED
                                     22 ;--------------------------------------------------------
                                     23 ; absolute external ram data
                                     24 ;--------------------------------------------------------
                                     25 	.area DABS (ABS)
                                     26 
                                     27 ; default segment ordering for linker
                                     28 	.area HOME
                                     29 	.area GSINIT
                                     30 	.area GSFINAL
                                     31 	.area CONST
                                     32 	.area INITIALIZER
                                     33 	.area CODE
                                     34 
                                     35 ;--------------------------------------------------------
                                     36 ; global & static initialisations
                                     37 ;--------------------------------------------------------
                                     38 	.area HOME
                                     39 	.area GSINIT
                                     40 	.area GSFINAL
                                     41 	.area GSINIT
                                     42 ;--------------------------------------------------------
                                     43 ; Home
                                     44 ;--------------------------------------------------------
                                     45 	.area HOME
                                     46 	.area HOME
                                     47 ;--------------------------------------------------------
                                     48 ; code
                                     49 ;--------------------------------------------------------
                                     50 	.area CODE
                                     51 ;	../cotf.c: 37: float cotf(float x) _FLOAT_FUNC_REENTRANT
                                     52 ;	-----------------------------------------
                                     53 ;	 function cotf
                                     54 ;	-----------------------------------------
      000000                         55 _cotf:
                                     56 ;	../cotf.c: 41: y=fabsf(x);
      000000 1E 06            [ 2]   57 	ldw	x, (0x06, sp)
      000002 89               [ 2]   58 	pushw	x
      000003 1E 06            [ 2]   59 	ldw	x, (0x06, sp)
      000005 89               [ 2]   60 	pushw	x
      000006 8Ds00r00r00      [ 5]   61 	callf	_fabsf
      00000A 5B 04            [ 2]   62 	addw	sp, #4
                                     63 ;	../cotf.c: 42: if (y<1.0E-30) //This one requires more thinking...
      00000C 4B 60            [ 1]   64 	push	#0x60
      00000E 4B 42            [ 1]   65 	push	#0x42
      000010 4B A2            [ 1]   66 	push	#0xa2
      000012 4B 0D            [ 1]   67 	push	#0x0d
      000014 89               [ 2]   68 	pushw	x
      000015 90 89            [ 2]   69 	pushw	y
      000017 8Ds00r00r00      [ 5]   70 	callf	___fslt
      00001B 5B 08            [ 2]   71 	addw	sp, #8
      00001D 4D               [ 1]   72 	tnz	a
      00001E 27 29            [ 1]   73 	jreq	00105$
                                     74 ;	../cotf.c: 44: errno = ERANGE;
      000020 AE 00 22         [ 2]   75 	ldw	x, #0x0022
      000023 CFu00u00         [ 2]   76 	ldw	_errno+0, x
                                     77 ;	../cotf.c: 45: if (x<0.0)
      000026 5F               [ 1]   78 	clrw	x
      000027 89               [ 2]   79 	pushw	x
      000028 5F               [ 1]   80 	clrw	x
      000029 89               [ 2]   81 	pushw	x
      00002A 1E 0A            [ 2]   82 	ldw	x, (0x0a, sp)
      00002C 89               [ 2]   83 	pushw	x
      00002D 1E 0A            [ 2]   84 	ldw	x, (0x0a, sp)
      00002F 89               [ 2]   85 	pushw	x
      000030 8Ds00r00r00      [ 5]   86 	callf	___fslt
      000034 5B 08            [ 2]   87 	addw	sp, #8
      000036 4D               [ 1]   88 	tnz	a
      000037 27 08            [ 1]   89 	jreq	00102$
                                     90 ;	../cotf.c: 46: return -HUGE_VALF;
      000039 5F               [ 1]   91 	clrw	x
      00003A 5A               [ 2]   92 	decw	x
      00003B 90 AE FF 7F      [ 2]   93 	ldw	y, #0xff7f
      00003F 20 16            [ 2]   94 	jra	00106$
      000041                         95 00102$:
                                     96 ;	../cotf.c: 48: return +HUGE_VALF;
      000041 5F               [ 1]   97 	clrw	x
      000042 5A               [ 2]   98 	decw	x
      000043 90 AE 7F 7F      [ 2]   99 	ldw	y, #0x7f7f
      000047 20 0E            [ 2]  100 	jra	00106$
      000049                        101 00105$:
                                    102 ;	../cotf.c: 50: return tancotf(x, 1);
      000049 4B 01            [ 1]  103 	push	#0x01
      00004B 1E 07            [ 2]  104 	ldw	x, (0x07, sp)
      00004D 89               [ 2]  105 	pushw	x
      00004E 1E 07            [ 2]  106 	ldw	x, (0x07, sp)
      000050 89               [ 2]  107 	pushw	x
      000051 8Ds00r00r00      [ 5]  108 	callf	_tancotf
      000055 5B 05            [ 2]  109 	addw	sp, #5
      000057                        110 00106$:
                                    111 ;	../cotf.c: 51: }
      000057 87               [ 5]  112 	retf
                                    113 	.area CODE
                                    114 	.area CONST
                                    115 	.area INITIALIZER
                                    116 	.area CABS (ABS)
