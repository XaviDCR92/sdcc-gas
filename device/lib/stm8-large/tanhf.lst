                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.9.3 #11345 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module tanhf
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _fabsf
                                     12 	.globl _expf
                                     13 	.globl _tanhf
                                     14 ;--------------------------------------------------------
                                     15 ; ram data
                                     16 ;--------------------------------------------------------
                                     17 	.area DATA
                                     18 ;--------------------------------------------------------
                                     19 ; ram data
                                     20 ;--------------------------------------------------------
                                     21 	.area INITIALIZED
                                     22 ;--------------------------------------------------------
                                     23 ; absolute external ram data
                                     24 ;--------------------------------------------------------
                                     25 	.area DABS (ABS)
                                     26 
                                     27 ; default segment ordering for linker
                                     28 	.area HOME
                                     29 	.area GSINIT
                                     30 	.area GSFINAL
                                     31 	.area CONST
                                     32 	.area INITIALIZER
                                     33 	.area CODE
                                     34 
                                     35 ;--------------------------------------------------------
                                     36 ; global & static initialisations
                                     37 ;--------------------------------------------------------
                                     38 	.area HOME
                                     39 	.area GSINIT
                                     40 	.area GSFINAL
                                     41 	.area GSINIT
                                     42 ;--------------------------------------------------------
                                     43 ; Home
                                     44 ;--------------------------------------------------------
                                     45 	.area HOME
                                     46 	.area HOME
                                     47 ;--------------------------------------------------------
                                     48 ; code
                                     49 ;--------------------------------------------------------
                                     50 	.area CODE
                                     51 ;	../tanhf.c: 50: float tanhf(float x) _FLOAT_FUNC_REENTRANT
                                     52 ;	-----------------------------------------
                                     53 ;	 function tanhf
                                     54 ;	-----------------------------------------
      000000                         55 _tanhf:
      000000 52 0C            [ 2]   56 	sub	sp, #12
                                     57 ;	../tanhf.c: 54: f=fabsf(x);
      000002 1E 12            [ 2]   58 	ldw	x, (0x12, sp)
      000004 89               [ 2]   59 	pushw	x
      000005 1E 12            [ 2]   60 	ldw	x, (0x12, sp)
      000007 89               [ 2]   61 	pushw	x
      000008 8Ds00r00r00      [ 5]   62 	callf	_fabsf
      00000C 5B 04            [ 2]   63 	addw	sp, #4
      00000E 1F 03            [ 2]   64 	ldw	(0x03, sp), x
      000010 17 01            [ 2]   65 	ldw	(0x01, sp), y
                                     66 ;	../tanhf.c: 55: if(f>SBIG) r=1.0;
      000012 1E 03            [ 2]   67 	ldw	x, (0x03, sp)
      000014 89               [ 2]   68 	pushw	x
      000015 1E 03            [ 2]   69 	ldw	x, (0x03, sp)
      000017 89               [ 2]   70 	pushw	x
      000018 4B B0            [ 1]   71 	push	#0xb0
      00001A 4B 2C            [ 1]   72 	push	#0x2c
      00001C 4B 10            [ 1]   73 	push	#0x10
      00001E 4B 41            [ 1]   74 	push	#0x41
      000020 8Ds00r00r00      [ 5]   75 	callf	___fslt
      000024 5B 08            [ 2]   76 	addw	sp, #8
      000026 6B 0C            [ 1]   77 	ld	(0x0c, sp), a
      000028 27 0C            [ 1]   78 	jreq	00108$
      00002A 5F               [ 1]   79 	clrw	x
      00002B 1F 0B            [ 2]   80 	ldw	(0x0b, sp), x
      00002D AE 3F 80         [ 2]   81 	ldw	x, #0x3f80
      000030 1F 09            [ 2]   82 	ldw	(0x09, sp), x
      000032 ACs00r01r80      [ 2]   83 	jpf	00109$
      000036                         84 00108$:
                                     85 ;	../tanhf.c: 56: else if(f>K1)
      000036 1E 03            [ 2]   86 	ldw	x, (0x03, sp)
      000038 89               [ 2]   87 	pushw	x
      000039 1E 03            [ 2]   88 	ldw	x, (0x03, sp)
      00003B 89               [ 2]   89 	pushw	x
      00003C 4B 54            [ 1]   90 	push	#0x54
      00003E 4B 9F            [ 1]   91 	push	#0x9f
      000040 4B 0C            [ 1]   92 	push	#0x0c
      000042 4B 3F            [ 1]   93 	push	#0x3f
      000044 8Ds00r00r00      [ 5]   94 	callf	___fslt
      000048 5B 08            [ 2]   95 	addw	sp, #8
      00004A 4D               [ 1]   96 	tnz	a
      00004B 27 7B            [ 1]   97 	jreq	00105$
                                     98 ;	../tanhf.c: 58: r=0.5-1.0/(expf(f+f)+1.0);
      00004D 1E 03            [ 2]   99 	ldw	x, (0x03, sp)
      00004F 89               [ 2]  100 	pushw	x
      000050 1E 03            [ 2]  101 	ldw	x, (0x03, sp)
      000052 89               [ 2]  102 	pushw	x
      000053 1E 07            [ 2]  103 	ldw	x, (0x07, sp)
      000055 89               [ 2]  104 	pushw	x
      000056 1E 07            [ 2]  105 	ldw	x, (0x07, sp)
      000058 89               [ 2]  106 	pushw	x
      000059 8Ds00r00r00      [ 5]  107 	callf	___fsadd
      00005D 5B 08            [ 2]  108 	addw	sp, #8
      00005F 1F 0B            [ 2]  109 	ldw	(0x0b, sp), x
      000061 17 09            [ 2]  110 	ldw	(0x09, sp), y
      000063 1E 0B            [ 2]  111 	ldw	x, (0x0b, sp)
      000065 89               [ 2]  112 	pushw	x
      000066 1E 0B            [ 2]  113 	ldw	x, (0x0b, sp)
      000068 89               [ 2]  114 	pushw	x
      000069 8Ds00r00r00      [ 5]  115 	callf	_expf
      00006D 5B 04            [ 2]  116 	addw	sp, #4
      00006F 1F 0B            [ 2]  117 	ldw	(0x0b, sp), x
      000071 17 09            [ 2]  118 	ldw	(0x09, sp), y
      000073 5F               [ 1]  119 	clrw	x
      000074 89               [ 2]  120 	pushw	x
      000075 4B 80            [ 1]  121 	push	#0x80
      000077 4B 3F            [ 1]  122 	push	#0x3f
      000079 1E 0F            [ 2]  123 	ldw	x, (0x0f, sp)
      00007B 89               [ 2]  124 	pushw	x
      00007C 1E 0F            [ 2]  125 	ldw	x, (0x0f, sp)
      00007E 89               [ 2]  126 	pushw	x
      00007F 8Ds00r00r00      [ 5]  127 	callf	___fsadd
      000083 5B 08            [ 2]  128 	addw	sp, #8
      000085 1F 0B            [ 2]  129 	ldw	(0x0b, sp), x
      000087 17 09            [ 2]  130 	ldw	(0x09, sp), y
      000089 1E 0B            [ 2]  131 	ldw	x, (0x0b, sp)
      00008B 89               [ 2]  132 	pushw	x
      00008C 1E 0B            [ 2]  133 	ldw	x, (0x0b, sp)
      00008E 89               [ 2]  134 	pushw	x
      00008F 5F               [ 1]  135 	clrw	x
      000090 89               [ 2]  136 	pushw	x
      000091 4B 80            [ 1]  137 	push	#0x80
      000093 4B 3F            [ 1]  138 	push	#0x3f
      000095 8Ds00r00r00      [ 5]  139 	callf	___fsdiv
      000099 5B 08            [ 2]  140 	addw	sp, #8
      00009B 89               [ 2]  141 	pushw	x
      00009C 90 89            [ 2]  142 	pushw	y
      00009E 5F               [ 1]  143 	clrw	x
      00009F 89               [ 2]  144 	pushw	x
      0000A0 4B 00            [ 1]  145 	push	#0x00
      0000A2 4B 3F            [ 1]  146 	push	#0x3f
      0000A4 8Ds00r00r00      [ 5]  147 	callf	___fssub
      0000A8 5B 08            [ 2]  148 	addw	sp, #8
      0000AA 1F 0B            [ 2]  149 	ldw	(0x0b, sp), x
      0000AC 17 09            [ 2]  150 	ldw	(0x09, sp), y
                                    151 ;	../tanhf.c: 59: r+=r;
      0000AE 1E 0B            [ 2]  152 	ldw	x, (0x0b, sp)
      0000B0 89               [ 2]  153 	pushw	x
      0000B1 1E 0B            [ 2]  154 	ldw	x, (0x0b, sp)
      0000B3 89               [ 2]  155 	pushw	x
      0000B4 1E 0F            [ 2]  156 	ldw	x, (0x0f, sp)
      0000B6 89               [ 2]  157 	pushw	x
      0000B7 1E 0F            [ 2]  158 	ldw	x, (0x0f, sp)
      0000B9 89               [ 2]  159 	pushw	x
      0000BA 8Ds00r00r00      [ 5]  160 	callf	___fsadd
      0000BE 5B 08            [ 2]  161 	addw	sp, #8
      0000C0 1F 0B            [ 2]  162 	ldw	(0x0b, sp), x
      0000C2 17 09            [ 2]  163 	ldw	(0x09, sp), y
      0000C4 ACs00r01r80      [ 2]  164 	jpf	00109$
      0000C8                        165 00105$:
                                    166 ;	../tanhf.c: 61: else if(f<EPS) r=f;
      0000C8 5F               [ 1]  167 	clrw	x
      0000C9 89               [ 2]  168 	pushw	x
      0000CA 4B 80            [ 1]  169 	push	#0x80
      0000CC 4B 39            [ 1]  170 	push	#0x39
      0000CE 1E 07            [ 2]  171 	ldw	x, (0x07, sp)
      0000D0 89               [ 2]  172 	pushw	x
      0000D1 1E 07            [ 2]  173 	ldw	x, (0x07, sp)
      0000D3 89               [ 2]  174 	pushw	x
      0000D4 8Ds00r00r00      [ 5]  175 	callf	___fslt
      0000D8 5B 08            [ 2]  176 	addw	sp, #8
      0000DA 4D               [ 1]  177 	tnz	a
      0000DB 27 0C            [ 1]  178 	jreq	00102$
      0000DD 16 03            [ 2]  179 	ldw	y, (0x03, sp)
      0000DF 17 0B            [ 2]  180 	ldw	(0x0b, sp), y
      0000E1 16 01            [ 2]  181 	ldw	y, (0x01, sp)
      0000E3 17 09            [ 2]  182 	ldw	(0x09, sp), y
      0000E5 ACs00r01r80      [ 2]  183 	jpf	00109$
      0000E9                        184 00102$:
                                    185 ;	../tanhf.c: 64: g=f*f;
      0000E9 1E 03            [ 2]  186 	ldw	x, (0x03, sp)
      0000EB 89               [ 2]  187 	pushw	x
      0000EC 1E 03            [ 2]  188 	ldw	x, (0x03, sp)
      0000EE 89               [ 2]  189 	pushw	x
      0000EF 1E 07            [ 2]  190 	ldw	x, (0x07, sp)
      0000F1 89               [ 2]  191 	pushw	x
      0000F2 1E 07            [ 2]  192 	ldw	x, (0x07, sp)
      0000F4 89               [ 2]  193 	pushw	x
      0000F5 8Ds00r00r00      [ 5]  194 	callf	___fsmul
      0000F9 5B 08            [ 2]  195 	addw	sp, #8
      0000FB 1F 07            [ 2]  196 	ldw	(0x07, sp), x
      0000FD 17 05            [ 2]  197 	ldw	(0x05, sp), y
                                    198 ;	../tanhf.c: 65: r=f+f*(P(g)/Q(g));
      0000FF 1E 07            [ 2]  199 	ldw	x, (0x07, sp)
      000101 89               [ 2]  200 	pushw	x
      000102 1E 07            [ 2]  201 	ldw	x, (0x07, sp)
      000104 89               [ 2]  202 	pushw	x
      000105 4B B2            [ 1]  203 	push	#0xb2
      000107 4B 11            [ 1]  204 	push	#0x11
      000109 4B 7B            [ 1]  205 	push	#0x7b
      00010B 4B BB            [ 1]  206 	push	#0xbb
      00010D 8Ds00r00r00      [ 5]  207 	callf	___fsmul
      000111 5B 08            [ 2]  208 	addw	sp, #8
      000113 4B C6            [ 1]  209 	push	#0xc6
      000115 4B E2            [ 1]  210 	push	#0xe2
      000117 4B 52            [ 1]  211 	push	#0x52
      000119 4B BF            [ 1]  212 	push	#0xbf
      00011B 89               [ 2]  213 	pushw	x
      00011C 90 89            [ 2]  214 	pushw	y
      00011E 8Ds00r00r00      [ 5]  215 	callf	___fsadd
      000122 5B 08            [ 2]  216 	addw	sp, #8
      000124 1F 0B            [ 2]  217 	ldw	(0x0b, sp), x
      000126 1E 07            [ 2]  218 	ldw	x, (0x07, sp)
      000128 89               [ 2]  219 	pushw	x
      000129 1E 07            [ 2]  220 	ldw	x, (0x07, sp)
      00012B 89               [ 2]  221 	pushw	x
      00012C 1E 0F            [ 2]  222 	ldw	x, (0x0f, sp)
      00012E 89               [ 2]  223 	pushw	x
      00012F 90 89            [ 2]  224 	pushw	y
      000131 8Ds00r00r00      [ 5]  225 	callf	___fsmul
      000135 5B 08            [ 2]  226 	addw	sp, #8
      000137 1F 0B            [ 2]  227 	ldw	(0x0b, sp), x
      000139 17 09            [ 2]  228 	ldw	(0x09, sp), y
      00013B 4B 1A            [ 1]  229 	push	#0x1a
      00013D 4B 2A            [ 1]  230 	push	#0x2a
      00013F 4B 1E            [ 1]  231 	push	#0x1e
      000141 4B 40            [ 1]  232 	push	#0x40
      000143 1E 0B            [ 2]  233 	ldw	x, (0x0b, sp)
      000145 89               [ 2]  234 	pushw	x
      000146 1E 0B            [ 2]  235 	ldw	x, (0x0b, sp)
      000148 89               [ 2]  236 	pushw	x
      000149 8Ds00r00r00      [ 5]  237 	callf	___fsadd
      00014D 5B 08            [ 2]  238 	addw	sp, #8
      00014F 89               [ 2]  239 	pushw	x
      000150 90 89            [ 2]  240 	pushw	y
      000152 1E 0F            [ 2]  241 	ldw	x, (0x0f, sp)
      000154 89               [ 2]  242 	pushw	x
      000155 1E 0F            [ 2]  243 	ldw	x, (0x0f, sp)
      000157 89               [ 2]  244 	pushw	x
      000158 8Ds00r00r00      [ 5]  245 	callf	___fsdiv
      00015C 5B 08            [ 2]  246 	addw	sp, #8
      00015E 89               [ 2]  247 	pushw	x
      00015F 90 89            [ 2]  248 	pushw	y
      000161 1E 07            [ 2]  249 	ldw	x, (0x07, sp)
      000163 89               [ 2]  250 	pushw	x
      000164 1E 07            [ 2]  251 	ldw	x, (0x07, sp)
      000166 89               [ 2]  252 	pushw	x
      000167 8Ds00r00r00      [ 5]  253 	callf	___fsmul
      00016B 5B 08            [ 2]  254 	addw	sp, #8
      00016D 89               [ 2]  255 	pushw	x
      00016E 90 89            [ 2]  256 	pushw	y
      000170 1E 07            [ 2]  257 	ldw	x, (0x07, sp)
      000172 89               [ 2]  258 	pushw	x
      000173 1E 07            [ 2]  259 	ldw	x, (0x07, sp)
      000175 89               [ 2]  260 	pushw	x
      000176 8Ds00r00r00      [ 5]  261 	callf	___fsadd
      00017A 5B 08            [ 2]  262 	addw	sp, #8
      00017C 1F 0B            [ 2]  263 	ldw	(0x0b, sp), x
      00017E 17 09            [ 2]  264 	ldw	(0x09, sp), y
      000180                        265 00109$:
                                    266 ;	../tanhf.c: 67: if(x<0.0) r=-r;
      000180 5F               [ 1]  267 	clrw	x
      000181 89               [ 2]  268 	pushw	x
      000182 5F               [ 1]  269 	clrw	x
      000183 89               [ 2]  270 	pushw	x
      000184 1E 16            [ 2]  271 	ldw	x, (0x16, sp)
      000186 89               [ 2]  272 	pushw	x
      000187 1E 16            [ 2]  273 	ldw	x, (0x16, sp)
      000189 89               [ 2]  274 	pushw	x
      00018A 8Ds00r00r00      [ 5]  275 	callf	___fslt
      00018E 5B 08            [ 2]  276 	addw	sp, #8
      000190 4D               [ 1]  277 	tnz	a
      000191 27 0B            [ 1]  278 	jreq	00111$
      000193 16 0B            [ 2]  279 	ldw	y, (0x0b, sp)
      000195 1E 09            [ 2]  280 	ldw	x, (0x09, sp)
      000197 58               [ 2]  281 	sllw	x
      000198 8C               [ 1]  282 	ccf
      000199 56               [ 2]  283 	rrcw	x
      00019A 17 0B            [ 2]  284 	ldw	(0x0b, sp), y
      00019C 1F 09            [ 2]  285 	ldw	(0x09, sp), x
      00019E                        286 00111$:
                                    287 ;	../tanhf.c: 68: return r;
      00019E 1E 0B            [ 2]  288 	ldw	x, (0x0b, sp)
      0001A0 16 09            [ 2]  289 	ldw	y, (0x09, sp)
                                    290 ;	../tanhf.c: 69: }
      0001A2 5B 0C            [ 2]  291 	addw	sp, #12
      0001A4 87               [ 5]  292 	retf
                                    293 	.area CODE
                                    294 	.area CONST
                                    295 	.area INITIALIZER
                                    296 	.area CABS (ABS)
