                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.9.3 #11345 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module strtol
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _strtoul
                                     12 	.globl _strtol
                                     13 ;--------------------------------------------------------
                                     14 ; ram data
                                     15 ;--------------------------------------------------------
                                     16 	.area DATA
                                     17 ;--------------------------------------------------------
                                     18 ; ram data
                                     19 ;--------------------------------------------------------
                                     20 	.area INITIALIZED
                                     21 ;--------------------------------------------------------
                                     22 ; absolute external ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area DABS (ABS)
                                     25 
                                     26 ; default segment ordering for linker
                                     27 	.area HOME
                                     28 	.area GSINIT
                                     29 	.area GSFINAL
                                     30 	.area CONST
                                     31 	.area INITIALIZER
                                     32 	.area CODE
                                     33 
                                     34 ;--------------------------------------------------------
                                     35 ; global & static initialisations
                                     36 ;--------------------------------------------------------
                                     37 	.area HOME
                                     38 	.area GSINIT
                                     39 	.area GSFINAL
                                     40 	.area GSINIT
                                     41 ;--------------------------------------------------------
                                     42 ; Home
                                     43 ;--------------------------------------------------------
                                     44 	.area HOME
                                     45 	.area HOME
                                     46 ;--------------------------------------------------------
                                     47 ; code
                                     48 ;--------------------------------------------------------
                                     49 	.area CODE
                                     50 ;	../strtol.c: 38: long int strtol(const char *nptr, char **endptr, int base)
                                     51 ;	-----------------------------------------
                                     52 ;	 function strtol
                                     53 ;	-----------------------------------------
      000000                         54 _strtol:
      000000 52 0B            [ 2]   55 	sub	sp, #11
                                     56 ;	../strtol.c: 40: const char *ptr = nptr;
      000002 16 0F            [ 2]   57 	ldw	y, (0x0f, sp)
                                     58 ;	../strtol.c: 45: while (isblank (*ptr))
      000004                         59 00101$:
      000004 90 F6            [ 1]   60 	ld	a, (y)
      000006 6B 09            [ 1]   61 	ld	(0x09, sp), a
                                     62 ;	../strtol.c: 46: ptr++;
      000008 93               [ 1]   63 	ldw	x, y
      000009 5C               [ 1]   64 	incw	x
      00000A 1F 0A            [ 2]   65 	ldw	(0x0a, sp), x
                                     66 ;	./../../include/ctype.h: 53: return ((unsigned char)c == ' ' || (unsigned char)c == '\t');
      00000C A1 20            [ 1]   67 	cp	a, #0x20
      00000E 27 04            [ 1]   68 	jreq	00132$
      000010 A1 09            [ 1]   69 	cp	a, #0x09
      000012 26 04            [ 1]   70 	jrne	00158$
      000014                         71 00132$:
                                     72 ;	../strtol.c: 46: ptr++;
      000014 16 0A            [ 2]   73 	ldw	y, (0x0a, sp)
      000016 20 EC            [ 2]   74 	jra	00101$
      000018                         75 00158$:
      000018 17 03            [ 2]   76 	ldw	(0x03, sp), y
                                     77 ;	../strtol.c: 50: if (*ptr == '-')
      00001A 7B 09            [ 1]   78 	ld	a, (0x09, sp)
                                     79 ;	../strtol.c: 52: neg = true;
      00001C A0 2D            [ 1]   80 	sub	a, #0x2d
      00001E 26 08            [ 1]   81 	jrne	00105$
      000020 4C               [ 1]   82 	inc	a
      000021 6B 05            [ 1]   83 	ld	(0x05, sp), a
                                     84 ;	../strtol.c: 53: ptr++;
      000023 16 0A            [ 2]   85 	ldw	y, (0x0a, sp)
      000025 17 03            [ 2]   86 	ldw	(0x03, sp), y
                                     87 ;	../strtol.c: 56: neg = false;
      000027 C5                      88 	.byte 0xc5
      000028                         89 00105$:
      000028 0F 05            [ 1]   90 	clr	(0x05, sp)
      00002A                         91 00106$:
                                     92 ;	../strtol.c: 62: *endptr = nptr;
      00002A 16 11            [ 2]   93 	ldw	y, (0x11, sp)
      00002C 17 06            [ 2]   94 	ldw	(0x06, sp), y
                                     95 ;	../strtol.c: 59: if (neg && (isblank (*ptr) || *ptr == '-' || *ptr == '+'))
      00002E 0D 05            [ 1]   96 	tnz	(0x05, sp)
      000030 27 26            [ 1]   97 	jreq	00110$
      000032 1E 03            [ 2]   98 	ldw	x, (0x03, sp)
      000034 F6               [ 1]   99 	ld	a, (x)
      000035 97               [ 1]  100 	ld	xl, a
                                    101 ;	./../../include/ctype.h: 53: return ((unsigned char)c == ' ' || (unsigned char)c == '\t');
      000036 A1 20            [ 1]  102 	cp	a, #0x20
      000038 27 0E            [ 1]  103 	jreq	00109$
      00003A A1 09            [ 1]  104 	cp	a, #0x09
      00003C 27 0A            [ 1]  105 	jreq	00109$
                                    106 ;	../strtol.c: 59: if (neg && (isblank (*ptr) || *ptr == '-' || *ptr == '+'))
      00003E 9F               [ 1]  107 	ld	a, xl
      00003F A1 2D            [ 1]  108 	cp	a, #0x2d
      000041 27 05            [ 1]  109 	jreq	00109$
      000043 9F               [ 1]  110 	ld	a, xl
      000044 A1 2B            [ 1]  111 	cp	a, #0x2b
      000046 26 10            [ 1]  112 	jrne	00110$
      000048                        113 00109$:
                                    114 ;	../strtol.c: 61: if (endptr)
      000048 1E 11            [ 2]  115 	ldw	x, (0x11, sp)
      00004A 27 05            [ 1]  116 	jreq	00108$
                                    117 ;	../strtol.c: 62: *endptr = nptr;
      00004C 1E 06            [ 2]  118 	ldw	x, (0x06, sp)
      00004E 16 0F            [ 2]  119 	ldw	y, (0x0f, sp)
      000050 FF               [ 2]  120 	ldw	(x), y
      000051                        121 00108$:
                                    122 ;	../strtol.c: 63: return (0);
      000051 5F               [ 1]  123 	clrw	x
      000052 90 5F            [ 1]  124 	clrw	y
      000054 ACs00r00rDC      [ 2]  125 	jpf	00129$
      000058                        126 00110$:
                                    127 ;	../strtol.c: 66: u = strtoul(ptr, &rptr, base);
      000058 96               [ 1]  128 	ldw	x, sp
      000059 5C               [ 1]  129 	incw	x
      00005A 16 13            [ 2]  130 	ldw	y, (0x13, sp)
      00005C 90 89            [ 2]  131 	pushw	y
      00005E 89               [ 2]  132 	pushw	x
      00005F 1E 07            [ 2]  133 	ldw	x, (0x07, sp)
      000061 89               [ 2]  134 	pushw	x
      000062 8Ds00r00r00      [ 5]  135 	callf	_strtoul
      000066 5B 06            [ 2]  136 	addw	sp, #6
      000068 1F 0A            [ 2]  137 	ldw	(0x0a, sp), x
      00006A 17 08            [ 2]  138 	ldw	(0x08, sp), y
                                    139 ;	../strtol.c: 69: if (rptr == ptr)
      00006C 1E 01            [ 2]  140 	ldw	x, (0x01, sp)
      00006E 13 03            [ 2]  141 	cpw	x, (0x03, sp)
      000070 26 0E            [ 1]  142 	jrne	00117$
                                    143 ;	../strtol.c: 71: if (endptr)
      000072 1E 11            [ 2]  144 	ldw	x, (0x11, sp)
      000074 27 05            [ 1]  145 	jreq	00115$
                                    146 ;	../strtol.c: 72: *endptr = nptr;
      000076 1E 06            [ 2]  147 	ldw	x, (0x06, sp)
      000078 16 0F            [ 2]  148 	ldw	y, (0x0f, sp)
      00007A FF               [ 2]  149 	ldw	(x), y
      00007B                        150 00115$:
                                    151 ;	../strtol.c: 73: return (0);
      00007B 5F               [ 1]  152 	clrw	x
      00007C 90 5F            [ 1]  153 	clrw	y
      00007E 20 5C            [ 2]  154 	jra	00129$
      000080                        155 00117$:
                                    156 ;	../strtol.c: 76: if (endptr)
      000080 1E 11            [ 2]  157 	ldw	x, (0x11, sp)
      000082 27 05            [ 1]  158 	jreq	00119$
                                    159 ;	../strtol.c: 77: *endptr = rptr;
      000084 1E 06            [ 2]  160 	ldw	x, (0x06, sp)
      000086 16 01            [ 2]  161 	ldw	y, (0x01, sp)
      000088 FF               [ 2]  162 	ldw	(x), y
      000089                        163 00119$:
                                    164 ;	../strtol.c: 80: if (!neg && u > LONG_MAX)
      000089 0D 05            [ 1]  165 	tnz	(0x05, sp)
      00008B 26 1C            [ 1]  166 	jrne	00124$
      00008D 5F               [ 1]  167 	clrw	x
      00008E 5A               [ 2]  168 	decw	x
      00008F 13 0A            [ 2]  169 	cpw	x, (0x0a, sp)
      000091 A6 FF            [ 1]  170 	ld	a, #0xff
      000093 12 09            [ 1]  171 	sbc	a, (0x09, sp)
      000095 A6 7F            [ 1]  172 	ld	a, #0x7f
      000097 12 08            [ 1]  173 	sbc	a, (0x08, sp)
      000099 24 0E            [ 1]  174 	jrnc	00124$
                                    175 ;	../strtol.c: 82: errno = ERANGE;
      00009B AE 00 22         [ 2]  176 	ldw	x, #0x0022
      00009E CFu00u00         [ 2]  177 	ldw	_errno+0, x
                                    178 ;	../strtol.c: 83: return (LONG_MAX);
      0000A1 5F               [ 1]  179 	clrw	x
      0000A2 5A               [ 2]  180 	decw	x
      0000A3 90 AE 7F FF      [ 2]  181 	ldw	y, #0x7fff
      0000A7 20 33            [ 2]  182 	jra	00129$
      0000A9                        183 00124$:
                                    184 ;	../strtol.c: 85: else if (neg && u > -LONG_MIN)
      0000A9 0D 05            [ 1]  185 	tnz	(0x05, sp)
      0000AB 27 19            [ 1]  186 	jreq	00125$
      0000AD 5F               [ 1]  187 	clrw	x
      0000AE 13 0A            [ 2]  188 	cpw	x, (0x0a, sp)
      0000B0 4F               [ 1]  189 	clr	a
      0000B1 12 09            [ 1]  190 	sbc	a, (0x09, sp)
      0000B3 A6 80            [ 1]  191 	ld	a, #0x80
      0000B5 12 08            [ 1]  192 	sbc	a, (0x08, sp)
      0000B7 24 0D            [ 1]  193 	jrnc	00125$
                                    194 ;	../strtol.c: 87: errno = ERANGE;
      0000B9 AE 00 22         [ 2]  195 	ldw	x, #0x0022
      0000BC CFu00u00         [ 2]  196 	ldw	_errno+0, x
                                    197 ;	../strtol.c: 88: return (LONG_MIN);
      0000BF 5F               [ 1]  198 	clrw	x
      0000C0 90 AE 80 00      [ 2]  199 	ldw	y, #0x8000
      0000C4 20 16            [ 2]  200 	jra	00129$
      0000C6                        201 00125$:
                                    202 ;	../strtol.c: 91: return (neg ? -u : u);
      0000C6 0D 05            [ 1]  203 	tnz	(0x05, sp)
      0000C8 27 0E            [ 1]  204 	jreq	00137$
      0000CA 16 0A            [ 2]  205 	ldw	y, (0x0a, sp)
      0000CC 90 50            [ 2]  206 	negw	y
      0000CE 1E 08            [ 2]  207 	ldw	x, (0x08, sp)
      0000D0 24 01            [ 1]  208 	jrnc	00258$
      0000D2 5C               [ 1]  209 	incw	x
      0000D3                        210 00258$:
      0000D3 50               [ 2]  211 	negw	x
      0000D4 17 0A            [ 2]  212 	ldw	(0x0a, sp), y
      0000D6 1F 08            [ 2]  213 	ldw	(0x08, sp), x
      0000D8                        214 00137$:
      0000D8 1E 0A            [ 2]  215 	ldw	x, (0x0a, sp)
      0000DA 16 08            [ 2]  216 	ldw	y, (0x08, sp)
      0000DC                        217 00129$:
                                    218 ;	../strtol.c: 92: }
      0000DC 5B 0B            [ 2]  219 	addw	sp, #11
      0000DE 87               [ 5]  220 	retf
                                    221 	.area CODE
                                    222 	.area CONST
                                    223 	.area INITIALIZER
                                    224 	.area CABS (ABS)
