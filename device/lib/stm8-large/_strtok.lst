                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.9.3 #11345 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _strtok
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _strchr
                                     12 	.globl _strtok
                                     13 ;--------------------------------------------------------
                                     14 ; ram data
                                     15 ;--------------------------------------------------------
                                     16 	.area DATA
      000000                         17 _strtok_s_65536_26:
      000000                         18 	.ds 2
                                     19 ;--------------------------------------------------------
                                     20 ; ram data
                                     21 ;--------------------------------------------------------
                                     22 	.area INITIALIZED
                                     23 ;--------------------------------------------------------
                                     24 ; absolute external ram data
                                     25 ;--------------------------------------------------------
                                     26 	.area DABS (ABS)
                                     27 
                                     28 ; default segment ordering for linker
                                     29 	.area HOME
                                     30 	.area GSINIT
                                     31 	.area GSFINAL
                                     32 	.area CONST
                                     33 	.area INITIALIZER
                                     34 	.area CODE
                                     35 
                                     36 ;--------------------------------------------------------
                                     37 ; global & static initialisations
                                     38 ;--------------------------------------------------------
                                     39 	.area HOME
                                     40 	.area GSINIT
                                     41 	.area GSFINAL
                                     42 	.area GSINIT
                                     43 ;--------------------------------------------------------
                                     44 ; Home
                                     45 ;--------------------------------------------------------
                                     46 	.area HOME
                                     47 	.area HOME
                                     48 ;--------------------------------------------------------
                                     49 ; code
                                     50 ;--------------------------------------------------------
                                     51 	.area CODE
                                     52 ;	../_strtok.c: 36: char * strtok ( char * str, const char * control )
                                     53 ;	-----------------------------------------
                                     54 ;	 function strtok
                                     55 ;	-----------------------------------------
      000000                         56 _strtok:
      000000 52 02            [ 2]   57 	sub	sp, #2
                                     58 ;	../_strtok.c: 41: if ( str )
                                     59 ;	../_strtok.c: 42: s = str;
      000002 1E 06            [ 2]   60 	ldw	x, (0x06, sp)
      000004 27 03            [ 1]   61 	jreq	00102$
      000006 CFu00u00         [ 2]   62 	ldw	_strtok_s_65536_26+0, x
      000009                         63 00102$:
                                     64 ;	../_strtok.c: 43: if ( !s )
      000009 CEu00u00         [ 2]   65 	ldw	x, _strtok_s_65536_26+0
      00000C 26 03            [ 1]   66 	jrne	00108$
                                     67 ;	../_strtok.c: 44: return NULL;
      00000E 5F               [ 1]   68 	clrw	x
      00000F 20 5D            [ 2]   69 	jra	00119$
                                     70 ;	../_strtok.c: 46: while (*s) {
      000011                         71 00108$:
      000011 CEu00u00         [ 2]   72 	ldw	x, _strtok_s_65536_26+0
      000014 F6               [ 1]   73 	ld	a, (x)
      000015 27 18            [ 1]   74 	jreq	00110$
                                     75 ;	../_strtok.c: 47: if (strchr(control,*s))
      000017 5F               [ 1]   76 	clrw	x
      000018 97               [ 1]   77 	ld	xl, a
      000019 89               [ 2]   78 	pushw	x
      00001A 1E 0A            [ 2]   79 	ldw	x, (0x0a, sp)
      00001C 89               [ 2]   80 	pushw	x
      00001D 8Ds00r00r00      [ 5]   81 	callf	_strchr
      000021 5B 04            [ 2]   82 	addw	sp, #4
      000023 5D               [ 2]   83 	tnzw	x
      000024 27 09            [ 1]   84 	jreq	00110$
                                     85 ;	../_strtok.c: 48: s++;
      000026 CEu00u00         [ 2]   86 	ldw	x, _strtok_s_65536_26+0
      000029 5C               [ 1]   87 	incw	x
      00002A CFu00u00         [ 2]   88 	ldw	_strtok_s_65536_26+0, x
      00002D 20 E2            [ 2]   89 	jra	00108$
                                     90 ;	../_strtok.c: 50: break;
      00002F                         91 00110$:
                                     92 ;	../_strtok.c: 53: s1 = s;
      00002F CEu00u00         [ 2]   93 	ldw	x, _strtok_s_65536_26+0
      000032 1F 01            [ 2]   94 	ldw	(0x01, sp), x
                                     95 ;	../_strtok.c: 55: while (*s) {
      000034                         96 00113$:
                                     97 ;	../_strtok.c: 46: while (*s) {
      000034 CEu00u00         [ 2]   98 	ldw	x, _strtok_s_65536_26+0
                                     99 ;	../_strtok.c: 55: while (*s) {
      000037 F6               [ 1]  100 	ld	a, (x)
      000038 27 27            [ 1]  101 	jreq	00115$
                                    102 ;	../_strtok.c: 56: if (strchr(control,*s)) {
      00003A 5F               [ 1]  103 	clrw	x
      00003B 97               [ 1]  104 	ld	xl, a
      00003C 89               [ 2]  105 	pushw	x
      00003D 1E 0A            [ 2]  106 	ldw	x, (0x0a, sp)
      00003F 89               [ 2]  107 	pushw	x
      000040 8Ds00r00r00      [ 5]  108 	callf	_strchr
      000044 5B 04            [ 2]  109 	addw	sp, #4
      000046 5D               [ 2]  110 	tnzw	x
      000047 27 0F            [ 1]  111 	jreq	00112$
                                    112 ;	../_strtok.c: 57: *s++ = '\0';
      000049 CEu00u00         [ 2]  113 	ldw	x, _strtok_s_65536_26+0
      00004C 7F               [ 1]  114 	clr	(x)
      00004D CEu00u00         [ 2]  115 	ldw	x, _strtok_s_65536_26+0
      000050 5C               [ 1]  116 	incw	x
      000051 CFu00u00         [ 2]  117 	ldw	_strtok_s_65536_26+0, x
                                    118 ;	../_strtok.c: 58: return s1;
      000054 1E 01            [ 2]  119 	ldw	x, (0x01, sp)
      000056 20 16            [ 2]  120 	jra	00119$
      000058                        121 00112$:
                                    122 ;	../_strtok.c: 60: s++ ;
      000058 CEu00u00         [ 2]  123 	ldw	x, _strtok_s_65536_26+0
      00005B 5C               [ 1]  124 	incw	x
      00005C CFu00u00         [ 2]  125 	ldw	_strtok_s_65536_26+0, x
      00005F 20 D3            [ 2]  126 	jra	00113$
      000061                        127 00115$:
                                    128 ;	../_strtok.c: 63: s = NULL;
      000061 5F               [ 1]  129 	clrw	x
      000062 CFu00u00         [ 2]  130 	ldw	_strtok_s_65536_26+0, x
                                    131 ;	../_strtok.c: 65: if (*s1)
      000065 1E 01            [ 2]  132 	ldw	x, (0x01, sp)
      000067 F6               [ 1]  133 	ld	a, (x)
      000068 27 03            [ 1]  134 	jreq	00117$
                                    135 ;	../_strtok.c: 66: return s1;
      00006A 1E 01            [ 2]  136 	ldw	x, (0x01, sp)
                                    137 ;	../_strtok.c: 68: return NULL;
      00006C 21                     138 	.byte 0x21
      00006D                        139 00117$:
      00006D 5F               [ 1]  140 	clrw	x
      00006E                        141 00119$:
                                    142 ;	../_strtok.c: 69: }
      00006E 5B 02            [ 2]  143 	addw	sp, #2
      000070 87               [ 5]  144 	retf
                                    145 	.area CODE
                                    146 	.area CONST
                                    147 	.area INITIALIZER
                                    148 	.area CABS (ABS)
