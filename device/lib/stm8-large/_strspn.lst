                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.9.3 #11345 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _strspn
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _strchr
                                     12 	.globl _strspn
                                     13 ;--------------------------------------------------------
                                     14 ; ram data
                                     15 ;--------------------------------------------------------
                                     16 	.area DATA
                                     17 ;--------------------------------------------------------
                                     18 ; ram data
                                     19 ;--------------------------------------------------------
                                     20 	.area INITIALIZED
                                     21 ;--------------------------------------------------------
                                     22 ; absolute external ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area DABS (ABS)
                                     25 
                                     26 ; default segment ordering for linker
                                     27 	.area HOME
                                     28 	.area GSINIT
                                     29 	.area GSFINAL
                                     30 	.area CONST
                                     31 	.area INITIALIZER
                                     32 	.area CODE
                                     33 
                                     34 ;--------------------------------------------------------
                                     35 ; global & static initialisations
                                     36 ;--------------------------------------------------------
                                     37 	.area HOME
                                     38 	.area GSINIT
                                     39 	.area GSFINAL
                                     40 	.area GSINIT
                                     41 ;--------------------------------------------------------
                                     42 ; Home
                                     43 ;--------------------------------------------------------
                                     44 	.area HOME
                                     45 	.area HOME
                                     46 ;--------------------------------------------------------
                                     47 ; code
                                     48 ;--------------------------------------------------------
                                     49 	.area CODE
                                     50 ;	../_strspn.c: 31: size_t strspn ( const char * string, const char * control )
                                     51 ;	-----------------------------------------
                                     52 ;	 function strspn
                                     53 ;	-----------------------------------------
      000000                         54 _strspn:
      000000 52 02            [ 2]   55 	sub	sp, #2
                                     56 ;	../_strspn.c: 36: while (ch = *string) {
      000002 5F               [ 1]   57 	clrw	x
      000003 1F 01            [ 2]   58 	ldw	(0x01, sp), x
      000005 16 06            [ 2]   59 	ldw	y, (0x06, sp)
      000007                         60 00104$:
      000007 90 F6            [ 1]   61 	ld	a, (y)
      000009 97               [ 1]   62 	ld	xl, a
      00000A 4D               [ 1]   63 	tnz	a
      00000B 27 1C            [ 1]   64 	jreq	00106$
                                     65 ;	../_strspn.c: 37: if ( strchr(control,ch) )
      00000D 4F               [ 1]   66 	clr	a
      00000E 95               [ 1]   67 	ld	xh, a
      00000F 90 89            [ 2]   68 	pushw	y
      000011 89               [ 2]   69 	pushw	x
      000012 1E 0C            [ 2]   70 	ldw	x, (0x0c, sp)
      000014 89               [ 2]   71 	pushw	x
      000015 8Ds00r00r00      [ 5]   72 	callf	_strchr
      000019 5B 04            [ 2]   73 	addw	sp, #4
      00001B 90 85            [ 2]   74 	popw	y
      00001D 5D               [ 2]   75 	tnzw	x
      00001E 27 09            [ 1]   76 	jreq	00106$
                                     77 ;	../_strspn.c: 38: count++ ;
      000020 1E 01            [ 2]   78 	ldw	x, (0x01, sp)
      000022 5C               [ 1]   79 	incw	x
      000023 1F 01            [ 2]   80 	ldw	(0x01, sp), x
                                     81 ;	../_strspn.c: 41: string++ ;
      000025 90 5C            [ 1]   82 	incw	y
      000027 20 DE            [ 2]   83 	jra	00104$
      000029                         84 00106$:
                                     85 ;	../_strspn.c: 44: return count ;
      000029 1E 01            [ 2]   86 	ldw	x, (0x01, sp)
                                     87 ;	../_strspn.c: 45: }
      00002B 5B 02            [ 2]   88 	addw	sp, #2
      00002D 87               [ 5]   89 	retf
                                     90 	.area CODE
                                     91 	.area CONST
                                     92 	.area INITIALIZER
                                     93 	.area CABS (ABS)
