                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.9.3 #11345 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _ltoa
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl __ltoa
                                     12 	.globl __ultoa
                                     13 ;--------------------------------------------------------
                                     14 ; ram data
                                     15 ;--------------------------------------------------------
                                     16 	.area DATA
                                     17 ;--------------------------------------------------------
                                     18 ; ram data
                                     19 ;--------------------------------------------------------
                                     20 	.area INITIALIZED
                                     21 ;--------------------------------------------------------
                                     22 ; absolute external ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area DABS (ABS)
                                     25 
                                     26 ; default segment ordering for linker
                                     27 	.area HOME
                                     28 	.area GSINIT
                                     29 	.area GSFINAL
                                     30 	.area CONST
                                     31 	.area INITIALIZER
                                     32 	.area CODE
                                     33 
                                     34 ;--------------------------------------------------------
                                     35 ; global & static initialisations
                                     36 ;--------------------------------------------------------
                                     37 	.area HOME
                                     38 	.area GSINIT
                                     39 	.area GSFINAL
                                     40 	.area GSINIT
                                     41 ;--------------------------------------------------------
                                     42 ; Home
                                     43 ;--------------------------------------------------------
                                     44 	.area HOME
                                     45 	.area HOME
                                     46 ;--------------------------------------------------------
                                     47 ; code
                                     48 ;--------------------------------------------------------
                                     49 	.area CODE
                                     50 ;	../_ltoa.c: 56: void _ultoa(unsigned long value, char* string, unsigned char radix)
                                     51 ;	-----------------------------------------
                                     52 ;	 function _ultoa
                                     53 ;	-----------------------------------------
      000000                         54 __ultoa:
      000000 52 27            [ 2]   55 	sub	sp, #39
                                     56 ;	../_ltoa.c: 61: do {
      000002 96               [ 1]   57 	ldw	x, sp
      000003 1C 00 05         [ 2]   58 	addw	x, #5
      000006 1F 25            [ 2]   59 	ldw	(0x25, sp), x
      000008 A6 20            [ 1]   60 	ld	a, #0x20
      00000A 6B 27            [ 1]   61 	ld	(0x27, sp), a
      00000C                         62 00103$:
                                     63 ;	../_ltoa.c: 62: unsigned char c = '0' + (value % radix);
      00000C 7B 31            [ 1]   64 	ld	a, (0x31, sp)
      00000E 6B 04            [ 1]   65 	ld	(0x04, sp), a
      000010 0F 03            [ 1]   66 	clr	(0x03, sp)
      000012 0F 02            [ 1]   67 	clr	(0x02, sp)
      000014 0F 01            [ 1]   68 	clr	(0x01, sp)
      000016 1E 03            [ 2]   69 	ldw	x, (0x03, sp)
      000018 89               [ 2]   70 	pushw	x
      000019 1E 03            [ 2]   71 	ldw	x, (0x03, sp)
      00001B 89               [ 2]   72 	pushw	x
      00001C 1E 31            [ 2]   73 	ldw	x, (0x31, sp)
      00001E 89               [ 2]   74 	pushw	x
      00001F 1E 31            [ 2]   75 	ldw	x, (0x31, sp)
      000021 89               [ 2]   76 	pushw	x
      000022 8Ds00r00r00      [ 5]   77 	callf	__modulong
      000026 5B 08            [ 2]   78 	addw	sp, #8
      000028 9F               [ 1]   79 	ld	a, xl
      000029 AB 30            [ 1]   80 	add	a, #0x30
                                     81 ;	../_ltoa.c: 63: if (c > (unsigned char)'9')
      00002B A1 39            [ 1]   82 	cp	a, #0x39
      00002D 23 02            [ 2]   83 	jrule	00102$
                                     84 ;	../_ltoa.c: 64: c += 'A' - '9' - 1;
      00002F AB 07            [ 1]   85 	add	a, #0x07
      000031                         86 00102$:
                                     87 ;	../_ltoa.c: 65: buffer[--index] = c;
      000031 0A 27            [ 1]   88 	dec	(0x27, sp)
      000033 5F               [ 1]   89 	clrw	x
      000034 41               [ 1]   90 	exg	a, xl
      000035 7B 27            [ 1]   91 	ld	a, (0x27, sp)
      000037 41               [ 1]   92 	exg	a, xl
      000038 72 FB 25         [ 2]   93 	addw	x, (0x25, sp)
      00003B F7               [ 1]   94 	ld	(x), a
                                     95 ;	../_ltoa.c: 66: value /= radix;
      00003C 1E 03            [ 2]   96 	ldw	x, (0x03, sp)
      00003E 89               [ 2]   97 	pushw	x
      00003F 1E 03            [ 2]   98 	ldw	x, (0x03, sp)
      000041 89               [ 2]   99 	pushw	x
      000042 1E 31            [ 2]  100 	ldw	x, (0x31, sp)
      000044 89               [ 2]  101 	pushw	x
      000045 1E 31            [ 2]  102 	ldw	x, (0x31, sp)
      000047 89               [ 2]  103 	pushw	x
      000048 8Ds00r00r00      [ 5]  104 	callf	__divulong
      00004C 5B 08            [ 2]  105 	addw	sp, #8
      00004E 1F 2D            [ 2]  106 	ldw	(0x2d, sp), x
      000050 17 2B            [ 2]  107 	ldw	(0x2b, sp), y
                                    108 ;	../_ltoa.c: 67: } while (value);
      000052 1E 2D            [ 2]  109 	ldw	x, (0x2d, sp)
      000054 26 B6            [ 1]  110 	jrne	00103$
      000056 1E 2B            [ 2]  111 	ldw	x, (0x2b, sp)
      000058 26 B2            [ 1]  112 	jrne	00103$
                                    113 ;	../_ltoa.c: 69: do {
      00005A 1E 2F            [ 2]  114 	ldw	x, (0x2f, sp)
      00005C                        115 00106$:
                                    116 ;	../_ltoa.c: 70: *string++ = buffer[index];
      00005C 90 5F            [ 1]  117 	clrw	y
      00005E 7B 27            [ 1]  118 	ld	a, (0x27, sp)
      000060 90 97            [ 1]  119 	ld	yl, a
      000062 72 F9 25         [ 2]  120 	addw	y, (0x25, sp)
      000065 90 F6            [ 1]  121 	ld	a, (y)
      000067 F7               [ 1]  122 	ld	(x), a
      000068 5C               [ 1]  123 	incw	x
                                    124 ;	../_ltoa.c: 71: } while ( ++index != NUMBER_OF_DIGITS );
      000069 0C 27            [ 1]  125 	inc	(0x27, sp)
      00006B 7B 27            [ 1]  126 	ld	a, (0x27, sp)
      00006D A1 20            [ 1]  127 	cp	a, #0x20
      00006F 26 EB            [ 1]  128 	jrne	00106$
                                    129 ;	../_ltoa.c: 73: *string = 0;  /* string terminator */
      000071 7F               [ 1]  130 	clr	(x)
                                    131 ;	../_ltoa.c: 74: }
      000072 5B 27            [ 2]  132 	addw	sp, #39
      000074 87               [ 5]  133 	retf
                                    134 ;	../_ltoa.c: 76: void _ltoa(long value, char* string, unsigned char radix)
                                    135 ;	-----------------------------------------
                                    136 ;	 function _ltoa
                                    137 ;	-----------------------------------------
      000075                        138 __ltoa:
                                    139 ;	../_ltoa.c: 78: if (value < 0 && radix == 10) {
      000075 0D 04            [ 1]  140 	tnz	(0x04, sp)
      000077 2A 1C            [ 1]  141 	jrpl	00102$
      000079 7B 0A            [ 1]  142 	ld	a, (0x0a, sp)
      00007B A1 0A            [ 1]  143 	cp	a, #0x0a
      00007D 26 16            [ 1]  144 	jrne	00102$
                                    145 ;	../_ltoa.c: 79: *string++ = '-';
      00007F 1E 08            [ 2]  146 	ldw	x, (0x08, sp)
      000081 A6 2D            [ 1]  147 	ld	a, #0x2d
      000083 F7               [ 1]  148 	ld	(x), a
      000084 5C               [ 1]  149 	incw	x
      000085 1F 08            [ 2]  150 	ldw	(0x08, sp), x
                                    151 ;	../_ltoa.c: 80: value = -value;
      000087 16 06            [ 2]  152 	ldw	y, (0x06, sp)
      000089 90 50            [ 2]  153 	negw	y
      00008B 1E 04            [ 2]  154 	ldw	x, (0x04, sp)
      00008D 24 01            [ 1]  155 	jrnc	00120$
      00008F 5C               [ 1]  156 	incw	x
      000090                        157 00120$:
      000090 50               [ 2]  158 	negw	x
      000091 17 06            [ 2]  159 	ldw	(0x06, sp), y
      000093 1F 04            [ 2]  160 	ldw	(0x04, sp), x
      000095                        161 00102$:
                                    162 ;	../_ltoa.c: 82: _ultoa(value, string, radix);
      000095 7B 0A            [ 1]  163 	ld	a, (0x0a, sp)
      000097 88               [ 1]  164 	push	a
      000098 1E 09            [ 2]  165 	ldw	x, (0x09, sp)
      00009A 89               [ 2]  166 	pushw	x
      00009B 1E 09            [ 2]  167 	ldw	x, (0x09, sp)
      00009D 89               [ 2]  168 	pushw	x
      00009E 1E 09            [ 2]  169 	ldw	x, (0x09, sp)
      0000A0 89               [ 2]  170 	pushw	x
      0000A1 8Ds00r00r00      [ 5]  171 	callf	__ultoa
      0000A5 5B 07            [ 2]  172 	addw	sp, #7
                                    173 ;	../_ltoa.c: 83: }
      0000A7 87               [ 5]  174 	retf
                                    175 	.area CODE
                                    176 	.area CONST
                                    177 	.area INITIALIZER
                                    178 	.area CABS (ABS)
