                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.9.3 #11345 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module memccpy
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _memccpy
                                     12 ;--------------------------------------------------------
                                     13 ; ram data
                                     14 ;--------------------------------------------------------
                                     15 	.area DATA
                                     16 ;--------------------------------------------------------
                                     17 ; ram data
                                     18 ;--------------------------------------------------------
                                     19 	.area INITIALIZED
                                     20 ;--------------------------------------------------------
                                     21 ; absolute external ram data
                                     22 ;--------------------------------------------------------
                                     23 	.area DABS (ABS)
                                     24 
                                     25 ; default segment ordering for linker
                                     26 	.area HOME
                                     27 	.area GSINIT
                                     28 	.area GSFINAL
                                     29 	.area CONST
                                     30 	.area INITIALIZER
                                     31 	.area CODE
                                     32 
                                     33 ;--------------------------------------------------------
                                     34 ; global & static initialisations
                                     35 ;--------------------------------------------------------
                                     36 	.area HOME
                                     37 	.area GSINIT
                                     38 	.area GSFINAL
                                     39 	.area GSINIT
                                     40 ;--------------------------------------------------------
                                     41 ; Home
                                     42 ;--------------------------------------------------------
                                     43 	.area HOME
                                     44 	.area HOME
                                     45 ;--------------------------------------------------------
                                     46 ; code
                                     47 ;--------------------------------------------------------
                                     48 	.area CODE
                                     49 ;	../memccpy.c: 31: void *memccpy (void *restrict dst, const void *restrict src, int c, size_t n)
                                     50 ;	-----------------------------------------
                                     51 ;	 function memccpy
                                     52 ;	-----------------------------------------
      000000                         53 _memccpy:
      000000 52 07            [ 2]   54 	sub	sp, #7
                                     55 ;	../memccpy.c: 33: char *d = dst;
      000002 1E 0B            [ 2]   56 	ldw	x, (0x0b, sp)
                                     57 ;	../memccpy.c: 34: const char *s = src;
      000004 16 0D            [ 2]   58 	ldw	y, (0x0d, sp)
                                     59 ;	../memccpy.c: 36: while (n--)
      000006 17 04            [ 2]   60 	ldw	(0x04, sp), y
      000008 1F 06            [ 2]   61 	ldw	(0x06, sp), x
      00000A 16 11            [ 2]   62 	ldw	y, (0x11, sp)
      00000C                         63 00103$:
      00000C 17 02            [ 2]   64 	ldw	(0x02, sp), y
      00000E 90 5A            [ 2]   65 	decw	y
      000010 1E 02            [ 2]   66 	ldw	x, (0x02, sp)
      000012 27 22            [ 1]   67 	jreq	00105$
                                     68 ;	../memccpy.c: 37: if ((*d++ = *s++) == (unsigned char)c)
      000014 1E 04            [ 2]   69 	ldw	x, (0x04, sp)
      000016 F6               [ 1]   70 	ld	a, (x)
      000017 6B 01            [ 1]   71 	ld	(0x01, sp), a
      000019 1E 04            [ 2]   72 	ldw	x, (0x04, sp)
      00001B 5C               [ 1]   73 	incw	x
      00001C 1F 04            [ 2]   74 	ldw	(0x04, sp), x
      00001E 1E 06            [ 2]   75 	ldw	x, (0x06, sp)
      000020 7B 01            [ 1]   76 	ld	a, (0x01, sp)
      000022 F7               [ 1]   77 	ld	(x), a
      000023 1E 06            [ 2]   78 	ldw	x, (0x06, sp)
      000025 5C               [ 1]   79 	incw	x
      000026 1F 06            [ 2]   80 	ldw	(0x06, sp), x
      000028 1F 02            [ 2]   81 	ldw	(0x02, sp), x
      00002A 7B 10            [ 1]   82 	ld	a, (0x10, sp)
      00002C 11 01            [ 1]   83 	cp	a, (0x01, sp)
      00002E 26 DC            [ 1]   84 	jrne	00103$
                                     85 ;	../memccpy.c: 38: return (d);
      000030 16 02            [ 2]   86 	ldw	y, (0x02, sp)
      000032 17 06            [ 2]   87 	ldw	(0x06, sp), y
      000034 93               [ 1]   88 	ldw	x, y
                                     89 ;	../memccpy.c: 40: return (0);
      000035 21                      90 	.byte 0x21
      000036                         91 00105$:
      000036 5F               [ 1]   92 	clrw	x
      000037                         93 00106$:
                                     94 ;	../memccpy.c: 41: }
      000037 5B 07            [ 2]   95 	addw	sp, #7
      000039 87               [ 5]   96 	retf
                                     97 	.area CODE
                                     98 	.area CONST
                                     99 	.area INITIALIZER
                                    100 	.area CABS (ABS)
