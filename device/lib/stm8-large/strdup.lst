                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.9.3 #11345 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module strdup
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _malloc
                                     12 	.globl _strlen
                                     13 	.globl _strcpy
                                     14 	.globl _strdup
                                     15 ;--------------------------------------------------------
                                     16 ; ram data
                                     17 ;--------------------------------------------------------
                                     18 	.area DATA
                                     19 ;--------------------------------------------------------
                                     20 ; ram data
                                     21 ;--------------------------------------------------------
                                     22 	.area INITIALIZED
                                     23 ;--------------------------------------------------------
                                     24 ; absolute external ram data
                                     25 ;--------------------------------------------------------
                                     26 	.area DABS (ABS)
                                     27 
                                     28 ; default segment ordering for linker
                                     29 	.area HOME
                                     30 	.area GSINIT
                                     31 	.area GSFINAL
                                     32 	.area CONST
                                     33 	.area INITIALIZER
                                     34 	.area CODE
                                     35 
                                     36 ;--------------------------------------------------------
                                     37 ; global & static initialisations
                                     38 ;--------------------------------------------------------
                                     39 	.area HOME
                                     40 	.area GSINIT
                                     41 	.area GSFINAL
                                     42 	.area GSINIT
                                     43 ;--------------------------------------------------------
                                     44 ; Home
                                     45 ;--------------------------------------------------------
                                     46 	.area HOME
                                     47 	.area HOME
                                     48 ;--------------------------------------------------------
                                     49 ; code
                                     50 ;--------------------------------------------------------
                                     51 	.area CODE
                                     52 ;	../strdup.c: 33: char *strdup (const char *s)
                                     53 ;	-----------------------------------------
                                     54 ;	 function strdup
                                     55 ;	-----------------------------------------
      000000                         56 _strdup:
                                     57 ;	../strdup.c: 35: char *r = malloc(strlen(s) + 1);
      000000 1E 04            [ 2]   58 	ldw	x, (0x04, sp)
      000002 89               [ 2]   59 	pushw	x
      000003 8Ds00r00r00      [ 5]   60 	callf	_strlen
      000007 5B 02            [ 2]   61 	addw	sp, #2
      000009 5C               [ 1]   62 	incw	x
      00000A 89               [ 2]   63 	pushw	x
      00000B 8Ds00r00r00      [ 5]   64 	callf	_malloc
      00000F 5B 02            [ 2]   65 	addw	sp, #2
                                     66 ;	../strdup.c: 36: if (r)
      000011 5D               [ 2]   67 	tnzw	x
      000012 27 0D            [ 1]   68 	jreq	00102$
                                     69 ;	../strdup.c: 37: strcpy(r, s);
      000014 89               [ 2]   70 	pushw	x
      000015 16 06            [ 2]   71 	ldw	y, (0x06, sp)
      000017 90 89            [ 2]   72 	pushw	y
      000019 89               [ 2]   73 	pushw	x
      00001A 8Ds00r00r00      [ 5]   74 	callf	_strcpy
      00001E 5B 04            [ 2]   75 	addw	sp, #4
      000020 85               [ 2]   76 	popw	x
      000021                         77 00102$:
                                     78 ;	../strdup.c: 38: return (r);
                                     79 ;	../strdup.c: 39: }
      000021 87               [ 5]   80 	retf
                                     81 	.area CODE
                                     82 	.area CONST
                                     83 	.area INITIALIZER
                                     84 	.area CABS (ABS)
