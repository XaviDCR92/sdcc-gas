                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.9.3 #11345 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _strncat
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _strncat
                                     12 ;--------------------------------------------------------
                                     13 ; ram data
                                     14 ;--------------------------------------------------------
                                     15 	.area DATA
                                     16 ;--------------------------------------------------------
                                     17 ; ram data
                                     18 ;--------------------------------------------------------
                                     19 	.area INITIALIZED
                                     20 ;--------------------------------------------------------
                                     21 ; absolute external ram data
                                     22 ;--------------------------------------------------------
                                     23 	.area DABS (ABS)
                                     24 
                                     25 ; default segment ordering for linker
                                     26 	.area HOME
                                     27 	.area GSINIT
                                     28 	.area GSFINAL
                                     29 	.area CONST
                                     30 	.area INITIALIZER
                                     31 	.area CODE
                                     32 
                                     33 ;--------------------------------------------------------
                                     34 ; global & static initialisations
                                     35 ;--------------------------------------------------------
                                     36 	.area HOME
                                     37 	.area GSINIT
                                     38 	.area GSFINAL
                                     39 	.area GSINIT
                                     40 ;--------------------------------------------------------
                                     41 ; Home
                                     42 ;--------------------------------------------------------
                                     43 	.area HOME
                                     44 	.area HOME
                                     45 ;--------------------------------------------------------
                                     46 ; code
                                     47 ;--------------------------------------------------------
                                     48 	.area CODE
                                     49 ;	../_strncat.c: 31: char * strncat ( char * front, const char * back, size_t count )
                                     50 ;	-----------------------------------------
                                     51 ;	 function strncat
                                     52 ;	-----------------------------------------
      000000                         53 _strncat:
      000000 52 0A            [ 2]   54 	sub	sp, #10
                                     55 ;	../_strncat.c: 33: char *start = front;
      000002 16 0E            [ 2]   56 	ldw	y, (0x0e, sp)
                                     57 ;	../_strncat.c: 35: while (*front++);
      000004 17 01            [ 2]   58 	ldw	(0x01, sp), y
      000006 93               [ 1]   59 	ldw	x, y
      000007                         60 00101$:
      000007 F6               [ 1]   61 	ld	a, (x)
      000008 5C               [ 1]   62 	incw	x
      000009 4D               [ 1]   63 	tnz	a
      00000A 26 FB            [ 1]   64 	jrne	00101$
                                     65 ;	../_strncat.c: 37: front--;
      00000C 5A               [ 2]   66 	decw	x
      00000D 1F 0E            [ 2]   67 	ldw	(0x0e, sp), x
                                     68 ;	../_strncat.c: 39: while (count--)
      00000F 16 10            [ 2]   69 	ldw	y, (0x10, sp)
      000011 17 05            [ 2]   70 	ldw	(0x05, sp), y
      000013 16 0E            [ 2]   71 	ldw	y, (0x0e, sp)
      000015 17 07            [ 2]   72 	ldw	(0x07, sp), y
      000017 16 12            [ 2]   73 	ldw	y, (0x12, sp)
      000019 17 09            [ 2]   74 	ldw	(0x09, sp), y
      00001B                         75 00106$:
      00001B 16 09            [ 2]   76 	ldw	y, (0x09, sp)
      00001D 17 03            [ 2]   77 	ldw	(0x03, sp), y
      00001F 1E 09            [ 2]   78 	ldw	x, (0x09, sp)
      000021 5A               [ 2]   79 	decw	x
      000022 1F 09            [ 2]   80 	ldw	(0x09, sp), x
      000024 1E 03            [ 2]   81 	ldw	x, (0x03, sp)
      000026 27 19            [ 1]   82 	jreq	00108$
                                     83 ;	../_strncat.c: 40: if (!(*front++ = *back++))
      000028 1E 05            [ 2]   84 	ldw	x, (0x05, sp)
      00002A F6               [ 1]   85 	ld	a, (x)
      00002B 1E 05            [ 2]   86 	ldw	x, (0x05, sp)
      00002D 5C               [ 1]   87 	incw	x
      00002E 1F 05            [ 2]   88 	ldw	(0x05, sp), x
      000030 1E 07            [ 2]   89 	ldw	x, (0x07, sp)
      000032 F7               [ 1]   90 	ld	(x), a
      000033 1E 07            [ 2]   91 	ldw	x, (0x07, sp)
      000035 5C               [ 1]   92 	incw	x
      000036 1F 07            [ 2]   93 	ldw	(0x07, sp), x
      000038 1F 0E            [ 2]   94 	ldw	(0x0e, sp), x
      00003A 4D               [ 1]   95 	tnz	a
      00003B 26 DE            [ 1]   96 	jrne	00106$
                                     97 ;	../_strncat.c: 41: return(start);
      00003D 1E 01            [ 2]   98 	ldw	x, (0x01, sp)
      00003F 20 08            [ 2]   99 	jra	00109$
      000041                        100 00108$:
                                    101 ;	../_strncat.c: 43: *front = '\0';
      000041 16 0E            [ 2]  102 	ldw	y, (0x0e, sp)
      000043 17 09            [ 2]  103 	ldw	(0x09, sp), y
      000045 93               [ 1]  104 	ldw	x, y
      000046 7F               [ 1]  105 	clr	(x)
                                    106 ;	../_strncat.c: 44: return(start);
      000047 1E 01            [ 2]  107 	ldw	x, (0x01, sp)
      000049                        108 00109$:
                                    109 ;	../_strncat.c: 45: }
      000049 5B 0A            [ 2]  110 	addw	sp, #10
      00004B 87               [ 5]  111 	retf
                                    112 	.area CODE
                                    113 	.area CONST
                                    114 	.area INITIALIZER
                                    115 	.area CABS (ABS)
