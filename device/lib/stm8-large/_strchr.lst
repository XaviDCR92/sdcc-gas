                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.9.3 #11345 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _strchr
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _strchr
                                     12 ;--------------------------------------------------------
                                     13 ; ram data
                                     14 ;--------------------------------------------------------
                                     15 	.area DATA
                                     16 ;--------------------------------------------------------
                                     17 ; ram data
                                     18 ;--------------------------------------------------------
                                     19 	.area INITIALIZED
                                     20 ;--------------------------------------------------------
                                     21 ; absolute external ram data
                                     22 ;--------------------------------------------------------
                                     23 	.area DABS (ABS)
                                     24 
                                     25 ; default segment ordering for linker
                                     26 	.area HOME
                                     27 	.area GSINIT
                                     28 	.area GSFINAL
                                     29 	.area CONST
                                     30 	.area INITIALIZER
                                     31 	.area CODE
                                     32 
                                     33 ;--------------------------------------------------------
                                     34 ; global & static initialisations
                                     35 ;--------------------------------------------------------
                                     36 	.area HOME
                                     37 	.area GSINIT
                                     38 	.area GSFINAL
                                     39 	.area GSINIT
                                     40 ;--------------------------------------------------------
                                     41 ; Home
                                     42 ;--------------------------------------------------------
                                     43 	.area HOME
                                     44 	.area HOME
                                     45 ;--------------------------------------------------------
                                     46 ; code
                                     47 ;--------------------------------------------------------
                                     48 	.area CODE
                                     49 ;	../_strchr.c: 36: char * strchr ( const char * string, int ch )
                                     50 ;	-----------------------------------------
                                     51 ;	 function strchr
                                     52 ;	-----------------------------------------
      000000                         53 _strchr:
      000000 88               [ 1]   54 	push	a
                                     55 ;	../_strchr.c: 39: while (*string && *string != ch)
      000001 1E 05            [ 2]   56 	ldw	x, (0x05, sp)
      000003                         57 00102$:
      000003 F6               [ 1]   58 	ld	a, (x)
      000004 6B 01            [ 1]   59 	ld	(0x01, sp), a
      000006 90 5F            [ 1]   60 	clrw	y
      000008 7B 01            [ 1]   61 	ld	a, (0x01, sp)
      00000A 90 97            [ 1]   62 	ld	yl, a
      00000C 51               [ 1]   63 	exgw	x, y
      00000D 13 07            [ 2]   64 	cpw	x, (0x07, sp)
      00000F 51               [ 1]   65 	exgw	x, y
      000010 26 03            [ 1]   66 	jrne	00131$
      000012 A6 01            [ 1]   67 	ld	a, #0x01
      000014 21                      68 	.byte 0x21
      000015                         69 00131$:
      000015 4F               [ 1]   70 	clr	a
      000016                         71 00132$:
      000016 0D 01            [ 1]   72 	tnz	(0x01, sp)
      000018 27 06            [ 1]   73 	jreq	00104$
      00001A 4D               [ 1]   74 	tnz	a
      00001B 26 03            [ 1]   75 	jrne	00104$
                                     76 ;	../_strchr.c: 40: string++;
      00001D 5C               [ 1]   77 	incw	x
      00001E 20 E3            [ 2]   78 	jra	00102$
      000020                         79 00104$:
                                     80 ;	../_strchr.c: 42: if (*string == ch)
      000020 4D               [ 1]   81 	tnz	a
                                     82 ;	../_strchr.c: 43: return((char *)string);
      000021 26 01            [ 1]   83 	jrne	00107$
                                     84 ;	../_strchr.c: 44: return ( NULL );
      000023 5F               [ 1]   85 	clrw	x
      000024                         86 00107$:
                                     87 ;	../_strchr.c: 45: }
      000024 84               [ 1]   88 	pop	a
      000025 87               [ 5]   89 	retf
                                     90 	.area CODE
                                     91 	.area CONST
                                     92 	.area INITIALIZER
                                     93 	.area CABS (ABS)
