                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.9.3 #11345 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module wcstombs
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _wctomb
                                     12 	.globl _wcstombs
                                     13 ;--------------------------------------------------------
                                     14 ; ram data
                                     15 ;--------------------------------------------------------
                                     16 	.area DATA
                                     17 ;--------------------------------------------------------
                                     18 ; ram data
                                     19 ;--------------------------------------------------------
                                     20 	.area INITIALIZED
                                     21 ;--------------------------------------------------------
                                     22 ; absolute external ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area DABS (ABS)
                                     25 
                                     26 ; default segment ordering for linker
                                     27 	.area HOME
                                     28 	.area GSINIT
                                     29 	.area GSFINAL
                                     30 	.area CONST
                                     31 	.area INITIALIZER
                                     32 	.area CODE
                                     33 
                                     34 ;--------------------------------------------------------
                                     35 ; global & static initialisations
                                     36 ;--------------------------------------------------------
                                     37 	.area HOME
                                     38 	.area GSINIT
                                     39 	.area GSFINAL
                                     40 	.area GSINIT
                                     41 ;--------------------------------------------------------
                                     42 ; Home
                                     43 ;--------------------------------------------------------
                                     44 	.area HOME
                                     45 	.area HOME
                                     46 ;--------------------------------------------------------
                                     47 ; code
                                     48 ;--------------------------------------------------------
                                     49 	.area CODE
                                     50 ;	../wcstombs.c: 33: size_t wcstombs(char *restrict s, const wchar_t *restrict pwcs, size_t n)
                                     51 ;	-----------------------------------------
                                     52 ;	 function wcstombs
                                     53 ;	-----------------------------------------
      000000                         54 _wcstombs:
      000000 52 10            [ 2]   55 	sub	sp, #16
                                     56 ;	../wcstombs.c: 35: size_t m = 0;
      000002 5F               [ 1]   57 	clrw	x
      000003 1F 09            [ 2]   58 	ldw	(0x09, sp), x
                                     59 ;	../wcstombs.c: 38: while(n > MB_LEN_MAX || n >= wctomb(buffer, *pwcs))
      000005 96               [ 1]   60 	ldw	x, sp
      000006 1C 00 05         [ 2]   61 	addw	x, #5
      000009 1F 0B            [ 2]   62 	ldw	(0x0b, sp), x
      00000B 16 16            [ 2]   63 	ldw	y, (0x16, sp)
      00000D 17 0F            [ 2]   64 	ldw	(0x0f, sp), y
      00000F                         65 00107$:
      00000F 1E 18            [ 2]   66 	ldw	x, (0x18, sp)
      000011 A3 00 04         [ 2]   67 	cpw	x, #0x0004
      000014 22 25            [ 1]   68 	jrugt	00108$
      000016 1E 0F            [ 2]   69 	ldw	x, (0x0f, sp)
      000018 90 93            [ 1]   70 	ldw	y, x
      00001A 90 EE 02         [ 2]   71 	ldw	y, (0x2, y)
      00001D 17 03            [ 2]   72 	ldw	(0x03, sp), y
      00001F FE               [ 2]   73 	ldw	x, (x)
      000020 1F 01            [ 2]   74 	ldw	(0x01, sp), x
      000022 1E 0B            [ 2]   75 	ldw	x, (0x0b, sp)
      000024 16 03            [ 2]   76 	ldw	y, (0x03, sp)
      000026 90 89            [ 2]   77 	pushw	y
      000028 16 03            [ 2]   78 	ldw	y, (0x03, sp)
      00002A 90 89            [ 2]   79 	pushw	y
      00002C 89               [ 2]   80 	pushw	x
      00002D 8Ds00r00r00      [ 5]   81 	callf	_wctomb
      000031 5B 06            [ 2]   82 	addw	sp, #6
      000033 1F 0D            [ 2]   83 	ldw	(0x0d, sp), x
      000035 1E 18            [ 2]   84 	ldw	x, (0x18, sp)
      000037 13 0D            [ 2]   85 	cpw	x, (0x0d, sp)
      000039 25 44            [ 1]   86 	jrc	00109$
      00003B                         87 00108$:
                                     88 ;	../wcstombs.c: 40: int b = wctomb(s, *pwcs);
      00003B 1E 0F            [ 2]   89 	ldw	x, (0x0f, sp)
      00003D 90 93            [ 1]   90 	ldw	y, x
      00003F 90 EE 02         [ 2]   91 	ldw	y, (0x2, y)
      000042 FE               [ 2]   92 	ldw	x, (x)
      000043 90 89            [ 2]   93 	pushw	y
      000045 89               [ 2]   94 	pushw	x
      000046 1E 18            [ 2]   95 	ldw	x, (0x18, sp)
      000048 89               [ 2]   96 	pushw	x
      000049 8Ds00r00r00      [ 5]   97 	callf	_wctomb
      00004D 5B 06            [ 2]   98 	addw	sp, #6
                                     99 ;	../wcstombs.c: 42: if(b == 1 && !*s)
      00004F A3 00 01         [ 2]  100 	cpw	x, #0x0001
      000052 26 06            [ 1]  101 	jrne	00102$
      000054 16 14            [ 2]  102 	ldw	y, (0x14, sp)
      000056 90 F6            [ 1]  103 	ld	a, (y)
      000058 27 25            [ 1]  104 	jreq	00109$
                                    105 ;	../wcstombs.c: 43: break;
      00005A                        106 00102$:
                                    107 ;	../wcstombs.c: 44: if(b < 0)
      00005A 5D               [ 2]  108 	tnzw	x
      00005B 2A 04            [ 1]  109 	jrpl	00105$
                                    110 ;	../wcstombs.c: 45: return(-1);
      00005D 5F               [ 1]  111 	clrw	x
      00005E 5A               [ 2]  112 	decw	x
      00005F 20 20            [ 2]  113 	jra	00110$
      000061                        114 00105$:
                                    115 ;	../wcstombs.c: 47: n -= b;
      000061 1F 0D            [ 2]  116 	ldw	(0x0d, sp), x
      000063 16 18            [ 2]  117 	ldw	y, (0x18, sp)
      000065 72 F2 0D         [ 2]  118 	subw	y, (0x0d, sp)
      000068 17 18            [ 2]  119 	ldw	(0x18, sp), y
                                    120 ;	../wcstombs.c: 48: m += b;
      00006A 16 09            [ 2]  121 	ldw	y, (0x09, sp)
      00006C 72 F9 0D         [ 2]  122 	addw	y, (0x0d, sp)
      00006F 17 09            [ 2]  123 	ldw	(0x09, sp), y
                                    124 ;	../wcstombs.c: 49: s += b;
      000071 72 FB 14         [ 2]  125 	addw	x, (0x14, sp)
      000074 1F 14            [ 2]  126 	ldw	(0x14, sp), x
                                    127 ;	../wcstombs.c: 50: pwcs++;
      000076 1E 0F            [ 2]  128 	ldw	x, (0x0f, sp)
      000078 1C 00 04         [ 2]  129 	addw	x, #0x0004
      00007B 1F 0F            [ 2]  130 	ldw	(0x0f, sp), x
      00007D 20 90            [ 2]  131 	jra	00107$
      00007F                        132 00109$:
                                    133 ;	../wcstombs.c: 53: return(m);
      00007F 1E 09            [ 2]  134 	ldw	x, (0x09, sp)
      000081                        135 00110$:
                                    136 ;	../wcstombs.c: 54: }
      000081 5B 10            [ 2]  137 	addw	sp, #16
      000083 87               [ 5]  138 	retf
                                    139 	.area CODE
                                    140 	.area CONST
                                    141 	.area INITIALIZER
                                    142 	.area CABS (ABS)
