                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.9.3 #11345 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module atanf
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _fabsf
                                     12 	.globl _atanf
                                     13 ;--------------------------------------------------------
                                     14 ; ram data
                                     15 ;--------------------------------------------------------
                                     16 	.area DATA
                                     17 ;--------------------------------------------------------
                                     18 ; ram data
                                     19 ;--------------------------------------------------------
                                     20 	.area INITIALIZED
                                     21 ;--------------------------------------------------------
                                     22 ; absolute external ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area DABS (ABS)
                                     25 
                                     26 ; default segment ordering for linker
                                     27 	.area HOME
                                     28 	.area GSINIT
                                     29 	.area GSFINAL
                                     30 	.area CONST
                                     31 	.area INITIALIZER
                                     32 	.area CODE
                                     33 
                                     34 ;--------------------------------------------------------
                                     35 ; global & static initialisations
                                     36 ;--------------------------------------------------------
                                     37 	.area HOME
                                     38 	.area GSINIT
                                     39 	.area GSFINAL
                                     40 	.area GSINIT
                                     41 ;--------------------------------------------------------
                                     42 ; Home
                                     43 ;--------------------------------------------------------
                                     44 	.area HOME
                                     45 	.area HOME
                                     46 ;--------------------------------------------------------
                                     47 ; code
                                     48 ;--------------------------------------------------------
                                     49 	.area CODE
                                     50 ;	../atanf.c: 55: float atanf(float x) _FLOAT_FUNC_REENTRANT
                                     51 ;	-----------------------------------------
                                     52 ;	 function atanf
                                     53 ;	-----------------------------------------
      000000                         54 _atanf:
      000000 52 0E            [ 2]   55 	sub	sp, #14
                                     56 ;	../atanf.c: 58: int n=0;
      000002 5F               [ 1]   57 	clrw	x
      000003 1F 01            [ 2]   58 	ldw	(0x01, sp), x
                                     59 ;	../atanf.c: 61: f=fabsf(x);
      000005 1E 14            [ 2]   60 	ldw	x, (0x14, sp)
      000007 89               [ 2]   61 	pushw	x
      000008 1E 14            [ 2]   62 	ldw	x, (0x14, sp)
      00000A 89               [ 2]   63 	pushw	x
      00000B 8Ds00r00r00      [ 5]   64 	callf	_fabsf
      00000F 5B 04            [ 2]   65 	addw	sp, #4
      000011 1F 05            [ 2]   66 	ldw	(0x05, sp), x
      000013 17 03            [ 2]   67 	ldw	(0x03, sp), y
                                     68 ;	../atanf.c: 62: if(f>1.0)
      000015 1E 05            [ 2]   69 	ldw	x, (0x05, sp)
      000017 89               [ 2]   70 	pushw	x
      000018 1E 05            [ 2]   71 	ldw	x, (0x05, sp)
      00001A 89               [ 2]   72 	pushw	x
      00001B 5F               [ 1]   73 	clrw	x
      00001C 89               [ 2]   74 	pushw	x
      00001D 4B 80            [ 1]   75 	push	#0x80
      00001F 4B 3F            [ 1]   76 	push	#0x3f
      000021 8Ds00r00r00      [ 5]   77 	callf	___fslt
      000025 5B 08            [ 2]   78 	addw	sp, #8
      000027 4D               [ 1]   79 	tnz	a
      000028 27 1B            [ 1]   80 	jreq	00102$
                                     81 ;	../atanf.c: 64: f=1.0/f;
      00002A 1E 05            [ 2]   82 	ldw	x, (0x05, sp)
      00002C 89               [ 2]   83 	pushw	x
      00002D 1E 05            [ 2]   84 	ldw	x, (0x05, sp)
      00002F 89               [ 2]   85 	pushw	x
      000030 5F               [ 1]   86 	clrw	x
      000031 89               [ 2]   87 	pushw	x
      000032 4B 80            [ 1]   88 	push	#0x80
      000034 4B 3F            [ 1]   89 	push	#0x3f
      000036 8Ds00r00r00      [ 5]   90 	callf	___fsdiv
      00003A 5B 08            [ 2]   91 	addw	sp, #8
      00003C 1F 05            [ 2]   92 	ldw	(0x05, sp), x
      00003E 17 03            [ 2]   93 	ldw	(0x03, sp), y
                                     94 ;	../atanf.c: 65: n=2;
      000040 AE 00 02         [ 2]   95 	ldw	x, #0x0002
      000043 1F 01            [ 2]   96 	ldw	(0x01, sp), x
      000045                         97 00102$:
                                     98 ;	../atanf.c: 67: if(f>K1)
      000045 1E 05            [ 2]   99 	ldw	x, (0x05, sp)
      000047 89               [ 2]  100 	pushw	x
      000048 1E 05            [ 2]  101 	ldw	x, (0x05, sp)
      00004A 89               [ 2]  102 	pushw	x
      00004B 4B A3            [ 1]  103 	push	#0xa3
      00004D 4B 30            [ 1]  104 	push	#0x30
      00004F 4B 89            [ 1]  105 	push	#0x89
      000051 4B 3E            [ 1]  106 	push	#0x3e
      000053 8Ds00r00r00      [ 5]  107 	callf	___fslt
      000057 5B 08            [ 2]  108 	addw	sp, #8
      000059 4D               [ 1]  109 	tnz	a
      00005A 27 68            [ 1]  110 	jreq	00104$
                                    111 ;	../atanf.c: 69: f=((K2*f-1.0)+f)/(K3+f);
      00005C 1E 05            [ 2]  112 	ldw	x, (0x05, sp)
      00005E 89               [ 2]  113 	pushw	x
      00005F 1E 05            [ 2]  114 	ldw	x, (0x05, sp)
      000061 89               [ 2]  115 	pushw	x
      000062 4B AF            [ 1]  116 	push	#0xaf
      000064 4B 67            [ 1]  117 	push	#0x67
      000066 4B 3B            [ 1]  118 	push	#0x3b
      000068 4B 3F            [ 1]  119 	push	#0x3f
      00006A 8Ds00r00r00      [ 5]  120 	callf	___fsmul
      00006E 5B 08            [ 2]  121 	addw	sp, #8
      000070 4B 00            [ 1]  122 	push	#0x00
      000072 4B 00            [ 1]  123 	push	#0x00
      000074 4B 80            [ 1]  124 	push	#0x80
      000076 4B 3F            [ 1]  125 	push	#0x3f
      000078 89               [ 2]  126 	pushw	x
      000079 90 89            [ 2]  127 	pushw	y
      00007B 8Ds00r00r00      [ 5]  128 	callf	___fssub
      00007F 5B 08            [ 2]  129 	addw	sp, #8
      000081 1F 0D            [ 2]  130 	ldw	(0x0d, sp), x
      000083 1E 05            [ 2]  131 	ldw	x, (0x05, sp)
      000085 89               [ 2]  132 	pushw	x
      000086 1E 05            [ 2]  133 	ldw	x, (0x05, sp)
      000088 89               [ 2]  134 	pushw	x
      000089 1E 11            [ 2]  135 	ldw	x, (0x11, sp)
      00008B 89               [ 2]  136 	pushw	x
      00008C 90 89            [ 2]  137 	pushw	y
      00008E 8Ds00r00r00      [ 5]  138 	callf	___fsadd
      000092 5B 08            [ 2]  139 	addw	sp, #8
      000094 1F 0D            [ 2]  140 	ldw	(0x0d, sp), x
      000096 17 0B            [ 2]  141 	ldw	(0x0b, sp), y
      000098 4B D7            [ 1]  142 	push	#0xd7
      00009A 4B B3            [ 1]  143 	push	#0xb3
      00009C 4B DD            [ 1]  144 	push	#0xdd
      00009E 4B 3F            [ 1]  145 	push	#0x3f
      0000A0 1E 09            [ 2]  146 	ldw	x, (0x09, sp)
      0000A2 89               [ 2]  147 	pushw	x
      0000A3 1E 09            [ 2]  148 	ldw	x, (0x09, sp)
      0000A5 89               [ 2]  149 	pushw	x
      0000A6 8Ds00r00r00      [ 5]  150 	callf	___fsadd
      0000AA 5B 08            [ 2]  151 	addw	sp, #8
      0000AC 89               [ 2]  152 	pushw	x
      0000AD 90 89            [ 2]  153 	pushw	y
      0000AF 1E 11            [ 2]  154 	ldw	x, (0x11, sp)
      0000B1 89               [ 2]  155 	pushw	x
      0000B2 1E 11            [ 2]  156 	ldw	x, (0x11, sp)
      0000B4 89               [ 2]  157 	pushw	x
      0000B5 8Ds00r00r00      [ 5]  158 	callf	___fsdiv
      0000B9 5B 08            [ 2]  159 	addw	sp, #8
      0000BB 1F 05            [ 2]  160 	ldw	(0x05, sp), x
      0000BD 17 03            [ 2]  161 	ldw	(0x03, sp), y
                                    162 ;	../atanf.c: 73: n++;
      0000BF 1E 01            [ 2]  163 	ldw	x, (0x01, sp)
      0000C1 5C               [ 1]  164 	incw	x
      0000C2 1F 01            [ 2]  165 	ldw	(0x01, sp), x
      0000C4                        166 00104$:
                                    167 ;	../atanf.c: 75: if(fabsf(f)<EPS) r=f;
      0000C4 1E 05            [ 2]  168 	ldw	x, (0x05, sp)
      0000C6 89               [ 2]  169 	pushw	x
      0000C7 1E 05            [ 2]  170 	ldw	x, (0x05, sp)
      0000C9 89               [ 2]  171 	pushw	x
      0000CA 8Ds00r00r00      [ 5]  172 	callf	_fabsf
      0000CE 5B 04            [ 2]  173 	addw	sp, #4
      0000D0 4B 00            [ 1]  174 	push	#0x00
      0000D2 4B 00            [ 1]  175 	push	#0x00
      0000D4 4B 80            [ 1]  176 	push	#0x80
      0000D6 4B 39            [ 1]  177 	push	#0x39
      0000D8 89               [ 2]  178 	pushw	x
      0000D9 90 89            [ 2]  179 	pushw	y
      0000DB 8Ds00r00r00      [ 5]  180 	callf	___fslt
      0000DF 5B 08            [ 2]  181 	addw	sp, #8
      0000E1 6B 0E            [ 1]  182 	ld	(0x0e, sp), a
      0000E3 27 0C            [ 1]  183 	jreq	00106$
      0000E5 16 05            [ 2]  184 	ldw	y, (0x05, sp)
      0000E7 17 0D            [ 2]  185 	ldw	(0x0d, sp), y
      0000E9 16 03            [ 2]  186 	ldw	y, (0x03, sp)
      0000EB 17 0B            [ 2]  187 	ldw	(0x0b, sp), y
      0000ED ACs00r01r8C      [ 2]  188 	jpf	00107$
      0000F1                        189 00106$:
                                    190 ;	../atanf.c: 78: g=f*f;
      0000F1 1E 05            [ 2]  191 	ldw	x, (0x05, sp)
      0000F3 89               [ 2]  192 	pushw	x
      0000F4 1E 05            [ 2]  193 	ldw	x, (0x05, sp)
      0000F6 89               [ 2]  194 	pushw	x
      0000F7 1E 09            [ 2]  195 	ldw	x, (0x09, sp)
      0000F9 89               [ 2]  196 	pushw	x
      0000FA 1E 09            [ 2]  197 	ldw	x, (0x09, sp)
      0000FC 89               [ 2]  198 	pushw	x
      0000FD 8Ds00r00r00      [ 5]  199 	callf	___fsmul
      000101 5B 08            [ 2]  200 	addw	sp, #8
      000103 1F 09            [ 2]  201 	ldw	(0x09, sp), x
      000105 17 07            [ 2]  202 	ldw	(0x07, sp), y
                                    203 ;	../atanf.c: 79: r=f+P(g,f)/Q(g);
      000107 1E 09            [ 2]  204 	ldw	x, (0x09, sp)
      000109 89               [ 2]  205 	pushw	x
      00010A 1E 09            [ 2]  206 	ldw	x, (0x09, sp)
      00010C 89               [ 2]  207 	pushw	x
      00010D 4B 91            [ 1]  208 	push	#0x91
      00010F 4B 86            [ 1]  209 	push	#0x86
      000111 4B 50            [ 1]  210 	push	#0x50
      000113 4B BD            [ 1]  211 	push	#0xbd
      000115 8Ds00r00r00      [ 5]  212 	callf	___fsmul
      000119 5B 08            [ 2]  213 	addw	sp, #8
      00011B 4B F6            [ 1]  214 	push	#0xf6
      00011D 4B 10            [ 1]  215 	push	#0x10
      00011F 4B F1            [ 1]  216 	push	#0xf1
      000121 4B BE            [ 1]  217 	push	#0xbe
      000123 89               [ 2]  218 	pushw	x
      000124 90 89            [ 2]  219 	pushw	y
      000126 8Ds00r00r00      [ 5]  220 	callf	___fsadd
      00012A 5B 08            [ 2]  221 	addw	sp, #8
      00012C 1F 0D            [ 2]  222 	ldw	(0x0d, sp), x
      00012E 1E 09            [ 2]  223 	ldw	x, (0x09, sp)
      000130 89               [ 2]  224 	pushw	x
      000131 1E 09            [ 2]  225 	ldw	x, (0x09, sp)
      000133 89               [ 2]  226 	pushw	x
      000134 1E 11            [ 2]  227 	ldw	x, (0x11, sp)
      000136 89               [ 2]  228 	pushw	x
      000137 90 89            [ 2]  229 	pushw	y
      000139 8Ds00r00r00      [ 5]  230 	callf	___fsmul
      00013D 5B 08            [ 2]  231 	addw	sp, #8
      00013F 1F 0D            [ 2]  232 	ldw	(0x0d, sp), x
      000141 1E 05            [ 2]  233 	ldw	x, (0x05, sp)
      000143 89               [ 2]  234 	pushw	x
      000144 1E 05            [ 2]  235 	ldw	x, (0x05, sp)
      000146 89               [ 2]  236 	pushw	x
      000147 1E 11            [ 2]  237 	ldw	x, (0x11, sp)
      000149 89               [ 2]  238 	pushw	x
      00014A 90 89            [ 2]  239 	pushw	y
      00014C 8Ds00r00r00      [ 5]  240 	callf	___fsmul
      000150 5B 08            [ 2]  241 	addw	sp, #8
      000152 1F 0D            [ 2]  242 	ldw	(0x0d, sp), x
      000154 17 0B            [ 2]  243 	ldw	(0x0b, sp), y
      000156 4B D3            [ 1]  244 	push	#0xd3
      000158 4B CC            [ 1]  245 	push	#0xcc
      00015A 4B B4            [ 1]  246 	push	#0xb4
      00015C 4B 3F            [ 1]  247 	push	#0x3f
      00015E 1E 0D            [ 2]  248 	ldw	x, (0x0d, sp)
      000160 89               [ 2]  249 	pushw	x
      000161 1E 0D            [ 2]  250 	ldw	x, (0x0d, sp)
      000163 89               [ 2]  251 	pushw	x
      000164 8Ds00r00r00      [ 5]  252 	callf	___fsadd
      000168 5B 08            [ 2]  253 	addw	sp, #8
      00016A 89               [ 2]  254 	pushw	x
      00016B 90 89            [ 2]  255 	pushw	y
      00016D 1E 11            [ 2]  256 	ldw	x, (0x11, sp)
      00016F 89               [ 2]  257 	pushw	x
      000170 1E 11            [ 2]  258 	ldw	x, (0x11, sp)
      000172 89               [ 2]  259 	pushw	x
      000173 8Ds00r00r00      [ 5]  260 	callf	___fsdiv
      000177 5B 08            [ 2]  261 	addw	sp, #8
      000179 89               [ 2]  262 	pushw	x
      00017A 90 89            [ 2]  263 	pushw	y
      00017C 1E 09            [ 2]  264 	ldw	x, (0x09, sp)
      00017E 89               [ 2]  265 	pushw	x
      00017F 1E 09            [ 2]  266 	ldw	x, (0x09, sp)
      000181 89               [ 2]  267 	pushw	x
      000182 8Ds00r00r00      [ 5]  268 	callf	___fsadd
      000186 5B 08            [ 2]  269 	addw	sp, #8
      000188 1F 0D            [ 2]  270 	ldw	(0x0d, sp), x
      00018A 17 0B            [ 2]  271 	ldw	(0x0b, sp), y
      00018C                        272 00107$:
                                    273 ;	../atanf.c: 81: if(n>1) r=-r;
      00018C 1E 01            [ 2]  274 	ldw	x, (0x01, sp)
      00018E A3 00 01         [ 2]  275 	cpw	x, #0x0001
      000191 2D 0B            [ 1]  276 	jrsle	00109$
      000193 16 0D            [ 2]  277 	ldw	y, (0x0d, sp)
      000195 1E 0B            [ 2]  278 	ldw	x, (0x0b, sp)
      000197 58               [ 2]  279 	sllw	x
      000198 8C               [ 1]  280 	ccf
      000199 56               [ 2]  281 	rrcw	x
      00019A 17 0D            [ 2]  282 	ldw	(0x0d, sp), y
      00019C 1F 0B            [ 2]  283 	ldw	(0x0b, sp), x
      00019E                        284 00109$:
                                    285 ;	../atanf.c: 82: r+=a[n];
      00019E 1E 01            [ 2]  286 	ldw	x, (0x01, sp)
      0001A0 58               [ 2]  287 	sllw	x
      0001A1 58               [ 2]  288 	sllw	x
      0001A2 1Cr00r00         [ 2]  289 	addw	x, #(_atanf_a_65536_26 + 0)
      0001A5 4F               [ 1]  290 	clr	a
      0001A6 A9s00            [ 1]  291 	adc	a, #((_atanf_a_65536_26 + 0) >> 16)
      0001A8 90 93            [ 1]  292 	ldw	y, x
      0001AA 90 EE 02         [ 2]  293 	ldw	y, (0x2, y)
      0001AD FE               [ 2]  294 	ldw	x, (x)
      0001AE 90 89            [ 2]  295 	pushw	y
      0001B0 89               [ 2]  296 	pushw	x
      0001B1 1E 11            [ 2]  297 	ldw	x, (0x11, sp)
      0001B3 89               [ 2]  298 	pushw	x
      0001B4 1E 11            [ 2]  299 	ldw	x, (0x11, sp)
      0001B6 89               [ 2]  300 	pushw	x
      0001B7 8Ds00r00r00      [ 5]  301 	callf	___fsadd
      0001BB 5B 08            [ 2]  302 	addw	sp, #8
                                    303 ;	../atanf.c: 83: if(x<0.0) r=-r;
      0001BD 89               [ 2]  304 	pushw	x
      0001BE 90 89            [ 2]  305 	pushw	y
      0001C0 4B 00            [ 1]  306 	push	#0x00
      0001C2 4B 00            [ 1]  307 	push	#0x00
      0001C4 4B 00            [ 1]  308 	push	#0x00
      0001C6 4B 00            [ 1]  309 	push	#0x00
      0001C8 7B 1D            [ 1]  310 	ld	a, (0x1d, sp)
      0001CA 88               [ 1]  311 	push	a
      0001CB 7B 1D            [ 1]  312 	ld	a, (0x1d, sp)
      0001CD 88               [ 1]  313 	push	a
      0001CE 7B 1D            [ 1]  314 	ld	a, (0x1d, sp)
      0001D0 88               [ 1]  315 	push	a
      0001D1 7B 1D            [ 1]  316 	ld	a, (0x1d, sp)
      0001D3 88               [ 1]  317 	push	a
      0001D4 8Ds00r00r00      [ 5]  318 	callf	___fslt
      0001D8 5B 08            [ 2]  319 	addw	sp, #8
      0001DA 90 85            [ 2]  320 	popw	y
      0001DC 85               [ 2]  321 	popw	x
      0001DD 4D               [ 1]  322 	tnz	a
      0001DE 27 05            [ 1]  323 	jreq	00111$
      0001E0 90 58            [ 2]  324 	sllw	y
      0001E2 8C               [ 1]  325 	ccf
      0001E3 90 56            [ 2]  326 	rrcw	y
      0001E5                        327 00111$:
                                    328 ;	../atanf.c: 84: return r;
                                    329 ;	../atanf.c: 85: }
      0001E5 5B 0E            [ 2]  330 	addw	sp, #14
      0001E7 87               [ 5]  331 	retf
                                    332 	.area CODE
                                    333 	.area CONST
      000000                        334 _atanf_a_65536_26:
      000000 00 00 00 00            335 	.byte #0x00, #0x00, #0x00, #0x00	;  0.000000e+00
      000004 3F 06 0A 92            336 	.byte #0x3f, #0x06, #0x0a, #0x92	;  5.235988e-01
      000008 3F C9 0F DB            337 	.byte #0x3f, #0xc9, #0x0f, #0xdb	;  1.570796e+00
      00000C 3F 86 0A 92            338 	.byte #0x3f, #0x86, #0x0a, #0x92	;  1.047198e+00
                                    339 	.area INITIALIZER
                                    340 	.area CABS (ABS)
