                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.9.3 #11345 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _fsdiv
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl ___fsdiv
                                     12 ;--------------------------------------------------------
                                     13 ; ram data
                                     14 ;--------------------------------------------------------
                                     15 	.area DATA
                                     16 ;--------------------------------------------------------
                                     17 ; ram data
                                     18 ;--------------------------------------------------------
                                     19 	.area INITIALIZED
                                     20 ;--------------------------------------------------------
                                     21 ; absolute external ram data
                                     22 ;--------------------------------------------------------
                                     23 	.area DABS (ABS)
                                     24 
                                     25 ; default segment ordering for linker
                                     26 	.area HOME
                                     27 	.area GSINIT
                                     28 	.area GSFINAL
                                     29 	.area CONST
                                     30 	.area INITIALIZER
                                     31 	.area CODE
                                     32 
                                     33 ;--------------------------------------------------------
                                     34 ; global & static initialisations
                                     35 ;--------------------------------------------------------
                                     36 	.area HOME
                                     37 	.area GSINIT
                                     38 	.area GSFINAL
                                     39 	.area GSINIT
                                     40 ;--------------------------------------------------------
                                     41 ; Home
                                     42 ;--------------------------------------------------------
                                     43 	.area HOME
                                     44 	.area HOME
                                     45 ;--------------------------------------------------------
                                     46 ; code
                                     47 ;--------------------------------------------------------
                                     48 	.area CODE
                                     49 ;	../_fsdiv.c: 274: static float __fsdiv_org (float a1, float a2)
                                     50 ;	-----------------------------------------
                                     51 ;	 function __fsdiv_org
                                     52 ;	-----------------------------------------
      000000                         53 ___fsdiv_org:
      000000 52 22            [ 2]   54 	sub	sp, #34
                                     55 ;	../_fsdiv.c: 283: fl1.f = a1;
      000002 16 28            [ 2]   56 	ldw	y, (0x28, sp)
      000004 17 03            [ 2]   57 	ldw	(0x03, sp), y
      000006 16 26            [ 2]   58 	ldw	y, (0x26, sp)
      000008 17 01            [ 2]   59 	ldw	(0x01, sp), y
                                     60 ;	../_fsdiv.c: 284: fl2.f = a2;
      00000A 16 2C            [ 2]   61 	ldw	y, (0x2c, sp)
      00000C 17 07            [ 2]   62 	ldw	(0x07, sp), y
      00000E 16 2A            [ 2]   63 	ldw	y, (0x2a, sp)
      000010 17 05            [ 2]   64 	ldw	(0x05, sp), y
                                     65 ;	../_fsdiv.c: 287: exp = EXP (fl1.l) ;
      000012 1E 01            [ 2]   66 	ldw	x, (0x01, sp)
      000014 A6 80            [ 1]   67 	ld	a, #0x80
      000016 62               [ 2]   68 	div	x, a
      000017 4F               [ 1]   69 	clr	a
      000018 95               [ 1]   70 	ld	xh, a
      000019 1F 0D            [ 2]   71 	ldw	(0x0d, sp), x
                                     72 ;	../_fsdiv.c: 288: exp -= EXP (fl2.l);
      00001B 1E 05            [ 2]   73 	ldw	x, (0x05, sp)
      00001D A6 80            [ 1]   74 	ld	a, #0x80
      00001F 62               [ 2]   75 	div	x, a
      000020 9F               [ 1]   76 	ld	a, xl
      000021 6B 16            [ 1]   77 	ld	(0x16, sp), a
      000023 0F 15            [ 1]   78 	clr	(0x15, sp)
      000025 1E 0D            [ 2]   79 	ldw	x, (0x0d, sp)
      000027 72 F0 15         [ 2]   80 	subw	x, (0x15, sp)
                                     81 ;	../_fsdiv.c: 289: exp += EXCESS;
      00002A 1F 0D            [ 2]   82 	ldw	(0x0d, sp), x
      00002C 1C 00 7E         [ 2]   83 	addw	x, #0x007e
      00002F 1F 15            [ 2]   84 	ldw	(0x15, sp), x
      000031 1F 0D            [ 2]   85 	ldw	(0x0d, sp), x
                                     86 ;	../_fsdiv.c: 292: sign = SIGN (fl1.l) ^ SIGN (fl2.l);
      000033 1E 01            [ 2]   87 	ldw	x, (0x01, sp)
      000035 58               [ 2]   88 	sllw	x
      000036 4F               [ 1]   89 	clr	a
      000037 49               [ 1]   90 	rlc	a
      000038 6B 16            [ 1]   91 	ld	(0x16, sp), a
      00003A 1E 05            [ 2]   92 	ldw	x, (0x05, sp)
      00003C 58               [ 2]   93 	sllw	x
      00003D 4F               [ 1]   94 	clr	a
      00003E 49               [ 1]   95 	rlc	a
      00003F 18 16            [ 1]   96 	xor	a, (0x16, sp)
      000041 6B 12            [ 1]   97 	ld	(0x12, sp), a
                                     98 ;	../_fsdiv.c: 295: if (!fl2.l)
      000043 16 07            [ 2]   99 	ldw	y, (0x07, sp)
      000045 17 15            [ 2]  100 	ldw	(0x15, sp), y
      000047 16 05            [ 2]  101 	ldw	y, (0x05, sp)
      000049 17 13            [ 2]  102 	ldw	(0x13, sp), y
      00004B 1E 15            [ 2]  103 	ldw	x, (0x15, sp)
      00004D 26 13            [ 1]  104 	jrne	00102$
                                    105 ;	../_fsdiv.c: 297: fl2.l = 0x7FC00000;
      00004F 1E 13            [ 2]  106 	ldw	x, (0x13, sp)
      000051 26 0F            [ 1]  107 	jrne	00102$
      000053 1F 07            [ 2]  108 	ldw	(0x07, sp), x
      000055 AE 7F C0         [ 2]  109 	ldw	x, #0x7fc0
      000058 1F 05            [ 2]  110 	ldw	(0x05, sp), x
                                    111 ;	../_fsdiv.c: 298: return (fl2.f);
      00005A 1E 07            [ 2]  112 	ldw	x, (0x07, sp)
      00005C 16 05            [ 2]  113 	ldw	y, (0x05, sp)
      00005E ACs00r01rD8      [ 2]  114 	jpf	00118$
      000062                        115 00102$:
                                    116 ;	../_fsdiv.c: 302: if (!fl1.l)
      000062 1E 03            [ 2]  117 	ldw	x, (0x03, sp)
      000064 16 01            [ 2]  118 	ldw	y, (0x01, sp)
      000066 5D               [ 2]  119 	tnzw	x
      000067 26 0B            [ 1]  120 	jrne	00104$
      000069 90 5D            [ 2]  121 	tnzw	y
      00006B 26 07            [ 1]  122 	jrne	00104$
                                    123 ;	../_fsdiv.c: 303: return (0);
      00006D 5F               [ 1]  124 	clrw	x
      00006E 90 5F            [ 1]  125 	clrw	y
      000070 ACs00r01rD8      [ 2]  126 	jpf	00118$
      000074                        127 00104$:
                                    128 ;	../_fsdiv.c: 306: mant1 = MANT (fl1.l);
      000074 16 03            [ 2]  129 	ldw	y, (0x03, sp)
      000076 1E 01            [ 2]  130 	ldw	x, (0x01, sp)
      000078 9F               [ 1]  131 	ld	a, xl
      000079 A4 7F            [ 1]  132 	and	a, #0x7f
      00007B 97               [ 1]  133 	ld	xl, a
      00007C 4F               [ 1]  134 	clr	a
      00007D 01               [ 1]  135 	rrwa	x
      00007E AA 80            [ 1]  136 	or	a, #0x80
      000080 97               [ 1]  137 	ld	xl, a
      000081 17 21            [ 2]  138 	ldw	(0x21, sp), y
      000083 1F 1F            [ 2]  139 	ldw	(0x1f, sp), x
                                    140 ;	../_fsdiv.c: 307: mant2 = MANT (fl2.l);
      000085 16 07            [ 2]  141 	ldw	y, (0x07, sp)
      000087 1E 05            [ 2]  142 	ldw	x, (0x05, sp)
      000089 9F               [ 1]  143 	ld	a, xl
      00008A A4 7F            [ 1]  144 	and	a, #0x7f
      00008C 97               [ 1]  145 	ld	xl, a
      00008D 4F               [ 1]  146 	clr	a
      00008E 01               [ 1]  147 	rrwa	x
      00008F AA 80            [ 1]  148 	or	a, #0x80
      000091 97               [ 1]  149 	ld	xl, a
      000092 17 0B            [ 2]  150 	ldw	(0x0b, sp), y
      000094 1F 09            [ 2]  151 	ldw	(0x09, sp), x
                                    152 ;	../_fsdiv.c: 310: if (mant1 < mant2)
      000096 1E 21            [ 2]  153 	ldw	x, (0x21, sp)
      000098 13 0B            [ 2]  154 	cpw	x, (0x0b, sp)
      00009A 7B 20            [ 1]  155 	ld	a, (0x20, sp)
      00009C 12 0A            [ 1]  156 	sbc	a, (0x0a, sp)
      00009E 7B 1F            [ 1]  157 	ld	a, (0x1f, sp)
      0000A0 12 09            [ 1]  158 	sbc	a, (0x09, sp)
      0000A2 2E 0D            [ 1]  159 	jrsge	00106$
                                    160 ;	../_fsdiv.c: 312: mant1 <<= 1;
      0000A4 08 22            [ 1]  161 	sll	(0x22, sp)
      0000A6 09 21            [ 1]  162 	rlc	(0x21, sp)
      0000A8 09 20            [ 1]  163 	rlc	(0x20, sp)
      0000AA 09 1F            [ 1]  164 	rlc	(0x1f, sp)
                                    165 ;	../_fsdiv.c: 313: exp--;
      0000AC 1E 0D            [ 2]  166 	ldw	x, (0x0d, sp)
      0000AE 5A               [ 2]  167 	decw	x
      0000AF 1F 0D            [ 2]  168 	ldw	(0x0d, sp), x
      0000B1                        169 00106$:
                                    170 ;	../_fsdiv.c: 317: mask = 0x1000000;
      0000B1 5F               [ 1]  171 	clrw	x
      0000B2 1F 1D            [ 2]  172 	ldw	(0x1d, sp), x
      0000B4 AE 01 00         [ 2]  173 	ldw	x, #0x0100
      0000B7 1F 1B            [ 2]  174 	ldw	(0x1b, sp), x
                                    175 ;	../_fsdiv.c: 318: result = 0;
      0000B9 5F               [ 1]  176 	clrw	x
      0000BA 1F 19            [ 2]  177 	ldw	(0x19, sp), x
      0000BC 1F 17            [ 2]  178 	ldw	(0x17, sp), x
                                    179 ;	../_fsdiv.c: 319: while (mask)
      0000BE                        180 00109$:
      0000BE 1E 1D            [ 2]  181 	ldw	x, (0x1d, sp)
      0000C0 26 04            [ 1]  182 	jrne	00179$
      0000C2 1E 1B            [ 2]  183 	ldw	x, (0x1b, sp)
      0000C4 27 4C            [ 1]  184 	jreq	00111$
      0000C6                        185 00179$:
                                    186 ;	../_fsdiv.c: 321: if (mant1 >= mant2)
      0000C6 1E 21            [ 2]  187 	ldw	x, (0x21, sp)
      0000C8 13 0B            [ 2]  188 	cpw	x, (0x0b, sp)
      0000CA 7B 20            [ 1]  189 	ld	a, (0x20, sp)
      0000CC 12 0A            [ 1]  190 	sbc	a, (0x0a, sp)
      0000CE 7B 1F            [ 1]  191 	ld	a, (0x1f, sp)
      0000D0 12 09            [ 1]  192 	sbc	a, (0x09, sp)
      0000D2 2F 2C            [ 1]  193 	jrslt	00108$
                                    194 ;	../_fsdiv.c: 323: result |= mask;
      0000D4 1E 19            [ 2]  195 	ldw	x, (0x19, sp)
      0000D6 16 17            [ 2]  196 	ldw	y, (0x17, sp)
      0000D8 9F               [ 1]  197 	ld	a, xl
      0000D9 1A 1E            [ 1]  198 	or	a, (0x1e, sp)
      0000DB 02               [ 1]  199 	rlwa	x
      0000DC 1A 1D            [ 1]  200 	or	a, (0x1d, sp)
      0000DE 95               [ 1]  201 	ld	xh, a
      0000DF 90 9F            [ 1]  202 	ld	a, yl
      0000E1 1A 1C            [ 1]  203 	or	a, (0x1c, sp)
      0000E3 90 02            [ 1]  204 	rlwa	y
      0000E5 1A 1B            [ 1]  205 	or	a, (0x1b, sp)
      0000E7 90 95            [ 1]  206 	ld	yh, a
      0000E9 1F 19            [ 2]  207 	ldw	(0x19, sp), x
      0000EB 17 17            [ 2]  208 	ldw	(0x17, sp), y
                                    209 ;	../_fsdiv.c: 324: mant1 -= mant2;
      0000ED 16 21            [ 2]  210 	ldw	y, (0x21, sp)
      0000EF 72 F2 0B         [ 2]  211 	subw	y, (0x0b, sp)
      0000F2 7B 20            [ 1]  212 	ld	a, (0x20, sp)
      0000F4 12 0A            [ 1]  213 	sbc	a, (0x0a, sp)
      0000F6 97               [ 1]  214 	ld	xl, a
      0000F7 7B 1F            [ 1]  215 	ld	a, (0x1f, sp)
      0000F9 12 09            [ 1]  216 	sbc	a, (0x09, sp)
      0000FB 95               [ 1]  217 	ld	xh, a
      0000FC 17 21            [ 2]  218 	ldw	(0x21, sp), y
      0000FE 1F 1F            [ 2]  219 	ldw	(0x1f, sp), x
      000100                        220 00108$:
                                    221 ;	../_fsdiv.c: 326: mant1 <<= 1;
      000100 08 22            [ 1]  222 	sll	(0x22, sp)
      000102 09 21            [ 1]  223 	rlc	(0x21, sp)
      000104 09 20            [ 1]  224 	rlc	(0x20, sp)
      000106 09 1F            [ 1]  225 	rlc	(0x1f, sp)
                                    226 ;	../_fsdiv.c: 327: mask >>= 1;
      000108 04 1B            [ 1]  227 	srl	(0x1b, sp)
      00010A 06 1C            [ 1]  228 	rrc	(0x1c, sp)
      00010C 06 1D            [ 1]  229 	rrc	(0x1d, sp)
      00010E 06 1E            [ 1]  230 	rrc	(0x1e, sp)
      000110 20 AC            [ 2]  231 	jra	00109$
      000112                        232 00111$:
                                    233 ;	../_fsdiv.c: 331: result += 1;
      000112 1E 19            [ 2]  234 	ldw	x, (0x19, sp)
      000114 1C 00 01         [ 2]  235 	addw	x, #0x0001
      000117 16 17            [ 2]  236 	ldw	y, (0x17, sp)
      000119 24 02            [ 1]  237 	jrnc	00181$
      00011B 90 5C            [ 1]  238 	incw	y
      00011D                        239 00181$:
      00011D 1F 19            [ 2]  240 	ldw	(0x19, sp), x
      00011F 17 17            [ 2]  241 	ldw	(0x17, sp), y
                                    242 ;	../_fsdiv.c: 334: exp++;
      000121 1E 0D            [ 2]  243 	ldw	x, (0x0d, sp)
      000123 5C               [ 1]  244 	incw	x
      000124 1F 0D            [ 2]  245 	ldw	(0x0d, sp), x
                                    246 ;	../_fsdiv.c: 335: result >>= 1;
      000126 07 17            [ 1]  247 	sra	(0x17, sp)
      000128 06 18            [ 1]  248 	rrc	(0x18, sp)
      00012A 06 19            [ 1]  249 	rrc	(0x19, sp)
      00012C 06 1A            [ 1]  250 	rrc	(0x1a, sp)
                                    251 ;	../_fsdiv.c: 337: result &= ~HIDDEN;
      00012E 16 19            [ 2]  252 	ldw	y, (0x19, sp)
      000130 7B 18            [ 1]  253 	ld	a, (0x18, sp)
      000132 A4 7F            [ 1]  254 	and	a, #0x7f
      000134 97               [ 1]  255 	ld	xl, a
      000135 7B 17            [ 1]  256 	ld	a, (0x17, sp)
      000137 95               [ 1]  257 	ld	xh, a
      000138 17 19            [ 2]  258 	ldw	(0x19, sp), y
      00013A 1F 17            [ 2]  259 	ldw	(0x17, sp), x
                                    260 ;	../_fsdiv.c: 340: if (exp >= 0x100)
      00013C 1E 0D            [ 2]  261 	ldw	x, (0x0d, sp)
      00013E A3 01 00         [ 2]  262 	cpw	x, #0x0100
      000141 2F 29            [ 1]  263 	jrslt	00116$
                                    264 ;	../_fsdiv.c: 341: fl1.l = (sign ? SIGNBIT : 0) | __INFINITY;
      000143 0D 12            [ 1]  265 	tnz	(0x12, sp)
      000145 27 09            [ 1]  266 	jreq	00120$
      000147 5F               [ 1]  267 	clrw	x
      000148 1F 15            [ 2]  268 	ldw	(0x15, sp), x
      00014A 0F 14            [ 1]  269 	clr	(0x14, sp)
      00014C A6 80            [ 1]  270 	ld	a, #0x80
      00014E 20 06            [ 2]  271 	jra	00121$
      000150                        272 00120$:
      000150 5F               [ 1]  273 	clrw	x
      000151 1F 15            [ 2]  274 	ldw	(0x15, sp), x
      000153 0F 14            [ 1]  275 	clr	(0x14, sp)
      000155 4F               [ 1]  276 	clr	a
      000156                        277 00121$:
      000156 AA 7F            [ 1]  278 	or	a, #0x7f
      000158 90 95            [ 1]  279 	ld	yh, a
      00015A 7B 16            [ 1]  280 	ld	a, (0x16, sp)
      00015C 97               [ 1]  281 	ld	xl, a
      00015D 7B 15            [ 1]  282 	ld	a, (0x15, sp)
      00015F 95               [ 1]  283 	ld	xh, a
      000160 7B 14            [ 1]  284 	ld	a, (0x14, sp)
      000162 AA 80            [ 1]  285 	or	a, #0x80
      000164 90 97            [ 1]  286 	ld	yl, a
      000166 1F 03            [ 2]  287 	ldw	(0x03, sp), x
      000168 17 01            [ 2]  288 	ldw	(0x01, sp), y
      00016A 20 68            [ 2]  289 	jra	00117$
      00016C                        290 00116$:
                                    291 ;	../_fsdiv.c: 342: else if (exp < 0)
      00016C 0D 0D            [ 1]  292 	tnz	(0x0d, sp)
      00016E 2A 07            [ 1]  293 	jrpl	00113$
                                    294 ;	../_fsdiv.c: 343: fl1.l = 0;
      000170 5F               [ 1]  295 	clrw	x
      000171 1F 03            [ 2]  296 	ldw	(0x03, sp), x
      000173 1F 01            [ 2]  297 	ldw	(0x01, sp), x
      000175 20 5D            [ 2]  298 	jra	00117$
      000177                        299 00113$:
                                    300 ;	../_fsdiv.c: 345: fl1.l = PACK (sign ? SIGNBIT : 0 , exp, result);
      000177 0D 12            [ 1]  301 	tnz	(0x12, sp)
      000179 27 0A            [ 1]  302 	jreq	00122$
      00017B 5F               [ 1]  303 	clrw	x
      00017C 1F 15            [ 2]  304 	ldw	(0x15, sp), x
      00017E AE 80 00         [ 2]  305 	ldw	x, #0x8000
      000181 1F 13            [ 2]  306 	ldw	(0x13, sp), x
      000183 20 05            [ 2]  307 	jra	00123$
      000185                        308 00122$:
      000185 5F               [ 1]  309 	clrw	x
      000186 1F 15            [ 2]  310 	ldw	(0x15, sp), x
      000188 1F 13            [ 2]  311 	ldw	(0x13, sp), x
      00018A                        312 00123$:
      00018A 16 0D            [ 2]  313 	ldw	y, (0x0d, sp)
      00018C 5F               [ 1]  314 	clrw	x
      00018D 90 5D            [ 2]  315 	tnzw	y
      00018F 2A 01            [ 1]  316 	jrpl	00186$
      000191 5A               [ 2]  317 	decw	x
      000192                        318 00186$:
      000192 5F               [ 1]  319 	clrw	x
      000193 A6 07            [ 1]  320 	ld	a, #0x07
      000195                        321 00187$:
      000195 90 58            [ 2]  322 	sllw	y
      000197 4A               [ 1]  323 	dec	a
      000198 26 FB            [ 1]  324 	jrne	00187$
      00019A 9F               [ 1]  325 	ld	a, xl
      00019B 1A 16            [ 1]  326 	or	a, (0x16, sp)
      00019D 6B 12            [ 1]  327 	ld	(0x12, sp), a
      00019F 9E               [ 1]  328 	ld	a, xh
      0001A0 1A 15            [ 1]  329 	or	a, (0x15, sp)
      0001A2 6B 11            [ 1]  330 	ld	(0x11, sp), a
      0001A4 90 9F            [ 1]  331 	ld	a, yl
      0001A6 1A 14            [ 1]  332 	or	a, (0x14, sp)
      0001A8 6B 10            [ 1]  333 	ld	(0x10, sp), a
      0001AA 90 9E            [ 1]  334 	ld	a, yh
      0001AC 1A 13            [ 1]  335 	or	a, (0x13, sp)
      0001AE 16 19            [ 2]  336 	ldw	y, (0x19, sp)
      0001B0 17 15            [ 2]  337 	ldw	(0x15, sp), y
      0001B2 16 17            [ 2]  338 	ldw	y, (0x17, sp)
      0001B4 90 89            [ 2]  339 	pushw	y
      0001B6 1A 01            [ 1]  340 	or	a, (1, sp)
      0001B8 90 85            [ 2]  341 	popw	y
      0001BA 90 95            [ 1]  342 	ld	yh, a
      0001BC 7B 12            [ 1]  343 	ld	a, (0x12, sp)
      0001BE 1A 16            [ 1]  344 	or	a, (0x16, sp)
      0001C0 97               [ 1]  345 	ld	xl, a
      0001C1 7B 11            [ 1]  346 	ld	a, (0x11, sp)
      0001C3 1A 15            [ 1]  347 	or	a, (0x15, sp)
      0001C5 95               [ 1]  348 	ld	xh, a
      0001C6 90 89            [ 2]  349 	pushw	y
      0001C8 7B 12            [ 1]  350 	ld	a, (0x12, sp)
      0001CA 1A 02            [ 1]  351 	or	a, (2, sp)
      0001CC 90 85            [ 2]  352 	popw	y
      0001CE 90 97            [ 1]  353 	ld	yl, a
      0001D0 1F 03            [ 2]  354 	ldw	(0x03, sp), x
      0001D2 17 01            [ 2]  355 	ldw	(0x01, sp), y
      0001D4                        356 00117$:
                                    357 ;	../_fsdiv.c: 346: return (fl1.f);
      0001D4 1E 03            [ 2]  358 	ldw	x, (0x03, sp)
      0001D6 16 01            [ 2]  359 	ldw	y, (0x01, sp)
      0001D8                        360 00118$:
                                    361 ;	../_fsdiv.c: 347: }
      0001D8 5B 22            [ 2]  362 	addw	sp, #34
      0001DA 87               [ 5]  363 	retf
                                    364 ;	../_fsdiv.c: 349: float __fsdiv (float a1, float a2)
                                    365 ;	-----------------------------------------
                                    366 ;	 function __fsdiv
                                    367 ;	-----------------------------------------
      0001DB                        368 ___fsdiv:
      0001DB 52 06            [ 2]  369 	sub	sp, #6
                                    370 ;	../_fsdiv.c: 352: unsigned long *p = (unsigned long *) &f;
      0001DD 96               [ 1]  371 	ldw	x, sp
      0001DE 5C               [ 1]  372 	incw	x
      0001DF 1F 05            [ 2]  373 	ldw	(0x05, sp), x
                                    374 ;	../_fsdiv.c: 354: if (a2 == 0.0f && a1 > 0.0f)
      0001E1 1E 10            [ 2]  375 	ldw	x, (0x10, sp)
      0001E3 26 25            [ 1]  376 	jrne	00110$
      0001E5 1E 0E            [ 2]  377 	ldw	x, (0x0e, sp)
      0001E7 58               [ 2]  378 	sllw	x
      0001E8 26 20            [ 1]  379 	jrne	00110$
      0001EA 1E 0C            [ 2]  380 	ldw	x, (0x0c, sp)
      0001EC 89               [ 2]  381 	pushw	x
      0001ED 1E 0C            [ 2]  382 	ldw	x, (0x0c, sp)
      0001EF 89               [ 2]  383 	pushw	x
      0001F0 5F               [ 1]  384 	clrw	x
      0001F1 89               [ 2]  385 	pushw	x
      0001F2 5F               [ 1]  386 	clrw	x
      0001F3 89               [ 2]  387 	pushw	x
      0001F4 8Ds00r00r00      [ 5]  388 	callf	___fslt
      0001F8 5B 08            [ 2]  389 	addw	sp, #8
      0001FA 4D               [ 1]  390 	tnz	a
      0001FB 27 0D            [ 1]  391 	jreq	00110$
                                    392 ;	../_fsdiv.c: 355: *p = 0x7f800000; // inf
      0001FD 1E 05            [ 2]  393 	ldw	x, (0x05, sp)
      0001FF 6F 03            [ 1]  394 	clr	(0x3, x)
      000201 6F 02            [ 1]  395 	clr	(0x2, x)
      000203 90 AE 7F 80      [ 2]  396 	ldw	y, #0x7f80
      000207 FF               [ 2]  397 	ldw	(x), y
      000208 20 5E            [ 2]  398 	jra	00111$
      00020A                        399 00110$:
                                    400 ;	../_fsdiv.c: 356: else if (a2 == 0.0f && a1 < 0.0f)
      00020A 1E 10            [ 2]  401 	ldw	x, (0x10, sp)
      00020C 26 25            [ 1]  402 	jrne	00106$
      00020E 1E 0E            [ 2]  403 	ldw	x, (0x0e, sp)
      000210 58               [ 2]  404 	sllw	x
      000211 26 20            [ 1]  405 	jrne	00106$
      000213 5F               [ 1]  406 	clrw	x
      000214 89               [ 2]  407 	pushw	x
      000215 5F               [ 1]  408 	clrw	x
      000216 89               [ 2]  409 	pushw	x
      000217 1E 10            [ 2]  410 	ldw	x, (0x10, sp)
      000219 89               [ 2]  411 	pushw	x
      00021A 1E 10            [ 2]  412 	ldw	x, (0x10, sp)
      00021C 89               [ 2]  413 	pushw	x
      00021D 8Ds00r00r00      [ 5]  414 	callf	___fslt
      000221 5B 08            [ 2]  415 	addw	sp, #8
      000223 4D               [ 1]  416 	tnz	a
      000224 27 0D            [ 1]  417 	jreq	00106$
                                    418 ;	../_fsdiv.c: 357: *p = 0xff800000; // -inf
      000226 1E 05            [ 2]  419 	ldw	x, (0x05, sp)
      000228 6F 03            [ 1]  420 	clr	(0x3, x)
      00022A 6F 02            [ 1]  421 	clr	(0x2, x)
      00022C 90 AE FF 80      [ 2]  422 	ldw	y, #0xff80
      000230 FF               [ 2]  423 	ldw	(x), y
      000231 20 35            [ 2]  424 	jra	00111$
      000233                        425 00106$:
                                    426 ;	../_fsdiv.c: 358: else if (a2 == 0.0f && a1 == 0.0f)
      000233 1E 10            [ 2]  427 	ldw	x, (0x10, sp)
      000235 26 1B            [ 1]  428 	jrne	00102$
      000237 1E 0E            [ 2]  429 	ldw	x, (0x0e, sp)
      000239 58               [ 2]  430 	sllw	x
      00023A 26 16            [ 1]  431 	jrne	00102$
      00023C 1E 0C            [ 2]  432 	ldw	x, (0x0c, sp)
      00023E 26 12            [ 1]  433 	jrne	00102$
      000240 1E 0A            [ 2]  434 	ldw	x, (0x0a, sp)
      000242 58               [ 2]  435 	sllw	x
      000243 26 0D            [ 1]  436 	jrne	00102$
                                    437 ;	../_fsdiv.c: 359: *p = 0xffc00000; // nan
      000245 1E 05            [ 2]  438 	ldw	x, (0x05, sp)
      000247 6F 03            [ 1]  439 	clr	(0x3, x)
      000249 6F 02            [ 1]  440 	clr	(0x2, x)
      00024B 90 AE FF C0      [ 2]  441 	ldw	y, #0xffc0
      00024F FF               [ 2]  442 	ldw	(x), y
      000250 20 16            [ 2]  443 	jra	00111$
      000252                        444 00102$:
                                    445 ;	../_fsdiv.c: 361: f = __fsdiv_org (a1, a2);
      000252 1E 10            [ 2]  446 	ldw	x, (0x10, sp)
      000254 89               [ 2]  447 	pushw	x
      000255 1E 10            [ 2]  448 	ldw	x, (0x10, sp)
      000257 89               [ 2]  449 	pushw	x
      000258 1E 10            [ 2]  450 	ldw	x, (0x10, sp)
      00025A 89               [ 2]  451 	pushw	x
      00025B 1E 10            [ 2]  452 	ldw	x, (0x10, sp)
      00025D 89               [ 2]  453 	pushw	x
      00025E 8Ds00r00r00      [ 5]  454 	callf	___fsdiv_org
      000262 5B 08            [ 2]  455 	addw	sp, #8
      000264 1F 03            [ 2]  456 	ldw	(0x03, sp), x
      000266 17 01            [ 2]  457 	ldw	(0x01, sp), y
      000268                        458 00111$:
                                    459 ;	../_fsdiv.c: 363: return f; 
      000268 1E 03            [ 2]  460 	ldw	x, (0x03, sp)
      00026A 16 01            [ 2]  461 	ldw	y, (0x01, sp)
                                    462 ;	../_fsdiv.c: 364: }
      00026C 5B 06            [ 2]  463 	addw	sp, #6
      00026E 87               [ 5]  464 	retf
                                    465 	.area CODE
                                    466 	.area CONST
                                    467 	.area INITIALIZER
                                    468 	.area CABS (ABS)
