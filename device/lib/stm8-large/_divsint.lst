                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.9.3 #11345 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _divsint
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl __divsint
                                     12 ;--------------------------------------------------------
                                     13 ; ram data
                                     14 ;--------------------------------------------------------
                                     15 	.area DATA
                                     16 ;--------------------------------------------------------
                                     17 ; ram data
                                     18 ;--------------------------------------------------------
                                     19 	.area INITIALIZED
                                     20 ;--------------------------------------------------------
                                     21 ; absolute external ram data
                                     22 ;--------------------------------------------------------
                                     23 	.area DABS (ABS)
                                     24 
                                     25 ; default segment ordering for linker
                                     26 	.area HOME
                                     27 	.area GSINIT
                                     28 	.area GSFINAL
                                     29 	.area CONST
                                     30 	.area INITIALIZER
                                     31 	.area CODE
                                     32 
                                     33 ;--------------------------------------------------------
                                     34 ; global & static initialisations
                                     35 ;--------------------------------------------------------
                                     36 	.area HOME
                                     37 	.area GSINIT
                                     38 	.area GSFINAL
                                     39 	.area GSINIT
                                     40 ;--------------------------------------------------------
                                     41 ; Home
                                     42 ;--------------------------------------------------------
                                     43 	.area HOME
                                     44 	.area HOME
                                     45 ;--------------------------------------------------------
                                     46 ; code
                                     47 ;--------------------------------------------------------
                                     48 	.area CODE
                                     49 ;	../_divsint.c: 207: _divsint (int x, int y)
                                     50 ;	-----------------------------------------
                                     51 ;	 function _divsint
                                     52 ;	-----------------------------------------
      000000                         53 __divsint:
      000000 52 06            [ 2]   54 	sub	sp, #6
                                     55 ;	../_divsint.c: 211: r = (unsigned int)(x < 0 ? -x : x) / (unsigned int)(y < 0 ? -y : y);
      000002 0D 0A            [ 1]   56 	tnz	(0x0a, sp)
      000004 2B 04            [ 1]   57 	jrmi	00125$
      000006 0F 01            [ 1]   58 	clr	(0x01, sp)
      000008 20 04            [ 2]   59 	jra	00126$
      00000A                         60 00125$:
      00000A A6 01            [ 1]   61 	ld	a, #0x01
      00000C 6B 01            [ 1]   62 	ld	(0x01, sp), a
      00000E                         63 00126$:
      00000E 0D 01            [ 1]   64 	tnz	(0x01, sp)
      000010 27 04            [ 1]   65 	jreq	00106$
      000012 1E 0A            [ 2]   66 	ldw	x, (0x0a, sp)
      000014 50               [ 2]   67 	negw	x
      000015 C5                      68 	.byte 0xc5
      000016                         69 00106$:
      000016 1E 0A            [ 2]   70 	ldw	x, (0x0a, sp)
      000018                         71 00107$:
      000018 1F 02            [ 2]   72 	ldw	(0x02, sp), x
      00001A 0D 0C            [ 1]   73 	tnz	(0x0c, sp)
      00001C 2B 04            [ 1]   74 	jrmi	00128$
      00001E 0F 04            [ 1]   75 	clr	(0x04, sp)
      000020 20 04            [ 2]   76 	jra	00129$
      000022                         77 00128$:
      000022 A6 01            [ 1]   78 	ld	a, #0x01
      000024 6B 04            [ 1]   79 	ld	(0x04, sp), a
      000026                         80 00129$:
      000026 0D 04            [ 1]   81 	tnz	(0x04, sp)
      000028 27 0C            [ 1]   82 	jreq	00108$
      00002A 7B 0D            [ 1]   83 	ld	a, (0x0d, sp)
      00002C 40               [ 1]   84 	neg	a
      00002D 6B 06            [ 1]   85 	ld	(0x06, sp), a
      00002F 4F               [ 1]   86 	clr	a
      000030 12 0C            [ 1]   87 	sbc	a, (0x0c, sp)
      000032 6B 05            [ 1]   88 	ld	(0x05, sp), a
      000034 20 04            [ 2]   89 	jra	00109$
      000036                         90 00108$:
      000036 16 0C            [ 2]   91 	ldw	y, (0x0c, sp)
      000038 17 05            [ 2]   92 	ldw	(0x05, sp), y
      00003A                         93 00109$:
      00003A 16 05            [ 2]   94 	ldw	y, (0x05, sp)
      00003C 1E 02            [ 2]   95 	ldw	x, (0x02, sp)
      00003E 65               [ 2]   96 	divw	x, y
                                     97 ;	../_divsint.c: 212: if ((x < 0) ^ (y < 0))
      00003F 7B 01            [ 1]   98 	ld	a, (0x01, sp)
      000041 18 04            [ 1]   99 	xor	a, (0x04, sp)
      000043 27 01            [ 1]  100 	jreq	00102$
                                    101 ;	../_divsint.c: 213: return -r;
      000045 50               [ 2]  102 	negw	x
                                    103 ;	../_divsint.c: 215: return r;
      000046                        104 00102$:
                                    105 ;	../_divsint.c: 216: }
      000046 5B 06            [ 2]  106 	addw	sp, #6
      000048 87               [ 5]  107 	retf
                                    108 	.area CODE
                                    109 	.area CONST
                                    110 	.area INITIALIZER
                                    111 	.area CABS (ABS)
