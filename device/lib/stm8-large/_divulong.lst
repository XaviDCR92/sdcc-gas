                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.9.3 #11345 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _divulong
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl __divulong
                                     12 ;--------------------------------------------------------
                                     13 ; ram data
                                     14 ;--------------------------------------------------------
                                     15 	.area DATA
                                     16 ;--------------------------------------------------------
                                     17 ; ram data
                                     18 ;--------------------------------------------------------
                                     19 	.area INITIALIZED
                                     20 ;--------------------------------------------------------
                                     21 ; absolute external ram data
                                     22 ;--------------------------------------------------------
                                     23 	.area DABS (ABS)
                                     24 
                                     25 ; default segment ordering for linker
                                     26 	.area HOME
                                     27 	.area GSINIT
                                     28 	.area GSFINAL
                                     29 	.area CONST
                                     30 	.area INITIALIZER
                                     31 	.area CODE
                                     32 
                                     33 ;--------------------------------------------------------
                                     34 ; global & static initialisations
                                     35 ;--------------------------------------------------------
                                     36 	.area HOME
                                     37 	.area GSINIT
                                     38 	.area GSFINAL
                                     39 	.area GSINIT
                                     40 ;--------------------------------------------------------
                                     41 ; Home
                                     42 ;--------------------------------------------------------
                                     43 	.area HOME
                                     44 	.area HOME
                                     45 ;--------------------------------------------------------
                                     46 ; code
                                     47 ;--------------------------------------------------------
                                     48 	.area CODE
                                     49 ;	../_divulong.c: 331: _divulong (unsigned long x, unsigned long y)
                                     50 ;	-----------------------------------------
                                     51 ;	 function _divulong
                                     52 ;	-----------------------------------------
      000000                         53 __divulong:
      000000 52 08            [ 2]   54 	sub	sp, #8
                                     55 ;	../_divulong.c: 333: unsigned long reste = 0L;
      000002 5F               [ 1]   56 	clrw	x
      000003 1F 07            [ 2]   57 	ldw	(0x07, sp), x
      000005 90 5F            [ 1]   58 	clrw	y
                                     59 ;	../_divulong.c: 334: unsigned char count = 32;
      000007 A6 20            [ 1]   60 	ld	a, #0x20
                                     61 ;	../_divulong.c: 337: do
      000009                         62 00105$:
                                     63 ;	../_divulong.c: 340: c = MSB_SET(x);
      000009 88               [ 1]   64 	push	a
      00000A 7B 0D            [ 1]   65 	ld	a, (0x0d, sp)
      00000C 48               [ 1]   66 	sll	a
      00000D 4F               [ 1]   67 	clr	a
      00000E 49               [ 1]   68 	rlc	a
      00000F 6B 05            [ 1]   69 	ld	(0x05, sp), a
      000011 84               [ 1]   70 	pop	a
                                     71 ;	../_divulong.c: 341: x <<= 1;
      000012 08 0F            [ 1]   72 	sll	(0x0f, sp)
      000014 09 0E            [ 1]   73 	rlc	(0x0e, sp)
      000016 09 0D            [ 1]   74 	rlc	(0x0d, sp)
      000018 09 0C            [ 1]   75 	rlc	(0x0c, sp)
                                     76 ;	../_divulong.c: 342: reste <<= 1;
      00001A 08 08            [ 1]   77 	sll	(0x08, sp)
      00001C 09 07            [ 1]   78 	rlc	(0x07, sp)
      00001E 90 59            [ 2]   79 	rlcw	y
                                     80 ;	../_divulong.c: 343: if (c)
      000020 0D 04            [ 1]   81 	tnz	(0x04, sp)
      000022 27 09            [ 1]   82 	jreq	00102$
                                     83 ;	../_divulong.c: 344: reste |= 1L;
      000024 88               [ 1]   84 	push	a
      000025 1E 08            [ 2]   85 	ldw	x, (0x08, sp)
      000027 54               [ 2]   86 	srlw	x
      000028 99               [ 1]   87 	scf
      000029 59               [ 2]   88 	rlcw	x
      00002A 84               [ 1]   89 	pop	a
      00002B 1F 07            [ 2]   90 	ldw	(0x07, sp), x
      00002D                         91 00102$:
                                     92 ;	../_divulong.c: 346: if (reste >= y)
      00002D 1E 07            [ 2]   93 	ldw	x, (0x07, sp)
      00002F 13 12            [ 2]   94 	cpw	x, (0x12, sp)
      000031 88               [ 1]   95 	push	a
      000032 90 9F            [ 1]   96 	ld	a, yl
      000034 12 12            [ 1]   97 	sbc	a, (0x12, sp)
      000036 90 9E            [ 1]   98 	ld	a, yh
      000038 12 11            [ 1]   99 	sbc	a, (0x11, sp)
      00003A 84               [ 1]  100 	pop	a
      00003B 25 2F            [ 1]  101 	jrc	00106$
                                    102 ;	../_divulong.c: 348: reste -= y;
      00003D 1E 07            [ 2]  103 	ldw	x, (0x07, sp)
      00003F 72 F0 12         [ 2]  104 	subw	x, (0x12, sp)
      000042 88               [ 1]  105 	push	a
      000043 90 9F            [ 1]  106 	ld	a, yl
      000045 12 12            [ 1]  107 	sbc	a, (0x12, sp)
      000047 90 02            [ 1]  108 	rlwa	y
      000049 12 11            [ 1]  109 	sbc	a, (0x11, sp)
      00004B 90 95            [ 1]  110 	ld	yh, a
      00004D 84               [ 1]  111 	pop	a
      00004E 1F 07            [ 2]  112 	ldw	(0x07, sp), x
                                    113 ;	../_divulong.c: 350: x |= 1L;
      000050 88               [ 1]  114 	push	a
      000051 7B 10            [ 1]  115 	ld	a, (0x10, sp)
      000053 AA 01            [ 1]  116 	or	a, #0x01
      000055 6B 05            [ 1]  117 	ld	(0x05, sp), a
      000057 7B 0F            [ 1]  118 	ld	a, (0x0f, sp)
      000059 6B 04            [ 1]  119 	ld	(0x04, sp), a
      00005B 7B 0E            [ 1]  120 	ld	a, (0x0e, sp)
      00005D 6B 03            [ 1]  121 	ld	(0x03, sp), a
      00005F 7B 0D            [ 1]  122 	ld	a, (0x0d, sp)
      000061 6B 02            [ 1]  123 	ld	(0x02, sp), a
      000063 84               [ 1]  124 	pop	a
      000064 1E 03            [ 2]  125 	ldw	x, (0x03, sp)
      000066 1F 0E            [ 2]  126 	ldw	(0x0e, sp), x
      000068 1E 01            [ 2]  127 	ldw	x, (0x01, sp)
      00006A 1F 0C            [ 2]  128 	ldw	(0x0c, sp), x
      00006C                        129 00106$:
                                    130 ;	../_divulong.c: 353: while (--count);
      00006C 4A               [ 1]  131 	dec	a
      00006D 97               [ 1]  132 	ld	xl, a
      00006E 4D               [ 1]  133 	tnz	a
      00006F 41               [ 1]  134 	exg	a, xl
      000070 26 97            [ 1]  135 	jrne	00105$
                                    136 ;	../_divulong.c: 354: return x;
      000072 1E 0E            [ 2]  137 	ldw	x, (0x0e, sp)
      000074 16 0C            [ 2]  138 	ldw	y, (0x0c, sp)
                                    139 ;	../_divulong.c: 355: }
      000076 5B 08            [ 2]  140 	addw	sp, #8
      000078 87               [ 5]  141 	retf
                                    142 	.area CODE
                                    143 	.area CONST
                                    144 	.area INITIALIZER
                                    145 	.area CABS (ABS)
