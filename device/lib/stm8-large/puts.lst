                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.9.3 #11345 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module puts
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _putchar
                                     12 	.globl _puts
                                     13 ;--------------------------------------------------------
                                     14 ; ram data
                                     15 ;--------------------------------------------------------
                                     16 	.area DATA
                                     17 ;--------------------------------------------------------
                                     18 ; ram data
                                     19 ;--------------------------------------------------------
                                     20 	.area INITIALIZED
                                     21 ;--------------------------------------------------------
                                     22 ; absolute external ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area DABS (ABS)
                                     25 
                                     26 ; default segment ordering for linker
                                     27 	.area HOME
                                     28 	.area GSINIT
                                     29 	.area GSFINAL
                                     30 	.area CONST
                                     31 	.area INITIALIZER
                                     32 	.area CODE
                                     33 
                                     34 ;--------------------------------------------------------
                                     35 ; global & static initialisations
                                     36 ;--------------------------------------------------------
                                     37 	.area HOME
                                     38 	.area GSINIT
                                     39 	.area GSFINAL
                                     40 	.area GSINIT
                                     41 ;--------------------------------------------------------
                                     42 ; Home
                                     43 ;--------------------------------------------------------
                                     44 	.area HOME
                                     45 	.area HOME
                                     46 ;--------------------------------------------------------
                                     47 ; code
                                     48 ;--------------------------------------------------------
                                     49 	.area CODE
                                     50 ;	../puts.c: 31: int puts (const char *s)
                                     51 ;	-----------------------------------------
                                     52 ;	 function puts
                                     53 ;	-----------------------------------------
      000000                         54 _puts:
                                     55 ;	../puts.c: 33: while (*s)
      000000 16 04            [ 2]   56 	ldw	y, (0x04, sp)
      000002                         57 00103$:
      000002 90 F6            [ 1]   58 	ld	a, (y)
      000004 27 16            [ 1]   59 	jreq	00105$
                                     60 ;	../puts.c: 34: if (putchar(*s++) == EOF)
      000006 90 5C            [ 1]   61 	incw	y
      000008 5F               [ 1]   62 	clrw	x
      000009 97               [ 1]   63 	ld	xl, a
      00000A 90 89            [ 2]   64 	pushw	y
      00000C 89               [ 2]   65 	pushw	x
      00000D 8Ds00r00r00      [ 5]   66 	callf	_putchar
      000011 5B 02            [ 2]   67 	addw	sp, #2
      000013 90 85            [ 2]   68 	popw	y
      000015 5C               [ 1]   69 	incw	x
      000016 26 EA            [ 1]   70 	jrne	00103$
                                     71 ;	../puts.c: 35: return EOF;
      000018 5F               [ 1]   72 	clrw	x
      000019 5A               [ 2]   73 	decw	x
      00001A 20 0A            [ 2]   74 	jra	00106$
      00001C                         75 00105$:
                                     76 ;	../puts.c: 36: return putchar('\n');
      00001C 4B 0A            [ 1]   77 	push	#0x0a
      00001E 4B 00            [ 1]   78 	push	#0x00
      000020 8Ds00r00r00      [ 5]   79 	callf	_putchar
      000024 5B 02            [ 2]   80 	addw	sp, #2
      000026                         81 00106$:
                                     82 ;	../puts.c: 37: }
      000026 87               [ 5]   83 	retf
                                     84 	.area CODE
                                     85 	.area CONST
                                     86 	.area INITIALIZER
                                     87 	.area CABS (ABS)
