                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.9.3 #11345 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _rrulonglong
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl __rrulonglong
                                     12 ;--------------------------------------------------------
                                     13 ; ram data
                                     14 ;--------------------------------------------------------
                                     15 	.area DATA
                                     16 ;--------------------------------------------------------
                                     17 ; ram data
                                     18 ;--------------------------------------------------------
                                     19 	.area INITIALIZED
                                     20 ;--------------------------------------------------------
                                     21 ; absolute external ram data
                                     22 ;--------------------------------------------------------
                                     23 	.area DABS (ABS)
                                     24 
                                     25 ; default segment ordering for linker
                                     26 	.area HOME
                                     27 	.area GSINIT
                                     28 	.area GSFINAL
                                     29 	.area CONST
                                     30 	.area INITIALIZER
                                     31 	.area CODE
                                     32 
                                     33 ;--------------------------------------------------------
                                     34 ; global & static initialisations
                                     35 ;--------------------------------------------------------
                                     36 	.area HOME
                                     37 	.area GSINIT
                                     38 	.area GSFINAL
                                     39 	.area GSINIT
                                     40 ;--------------------------------------------------------
                                     41 ; Home
                                     42 ;--------------------------------------------------------
                                     43 	.area HOME
                                     44 	.area HOME
                                     45 ;--------------------------------------------------------
                                     46 ; code
                                     47 ;--------------------------------------------------------
                                     48 	.area CODE
                                     49 ;	../_rrulonglong.c: 38: unsigned long long _rrulonglong(unsigned long long l, char s)
                                     50 ;	-----------------------------------------
                                     51 ;	 function _rrulonglong
                                     52 ;	-----------------------------------------
      000000                         53 __rrulonglong:
      000000 52 10            [ 2]   54 	sub	sp, #16
                                     55 ;	../_rrulonglong.c: 40: uint32_t *const top = (uint32_t *)((char *)(&l) + 0);
      000002 90 96            [ 1]   56 	ldw	y, sp
      000004 72 A9 00 14      [ 2]   57 	addw	y, #20
      000008 93               [ 1]   58 	ldw	x, y
      000009 1F 05            [ 2]   59 	ldw	(0x05, sp), x
                                     60 ;	../_rrulonglong.c: 41: uint32_t *const middle = (uint16_t *)((char *)(&l) + 2);
      00000B 93               [ 1]   61 	ldw	x, y
      00000C 5C               [ 1]   62 	incw	x
      00000D 5C               [ 1]   63 	incw	x
      00000E 1F 07            [ 2]   64 	ldw	(0x07, sp), x
                                     65 ;	../_rrulonglong.c: 42: uint32_t *const bottom = (uint32_t *)((char *)(&l) + 4);
      000010 93               [ 1]   66 	ldw	x, y
      000011 1C 00 04         [ 2]   67 	addw	x, #0x0004
      000014 1F 09            [ 2]   68 	ldw	(0x09, sp), x
                                     69 ;	../_rrulonglong.c: 43: uint16_t *const b = (uint16_t *)(&l);
      000016 17 0B            [ 2]   70 	ldw	(0x0b, sp), y
                                     71 ;	../_rrulonglong.c: 53: (*bottom) >>= s;
      000018                         72 00103$:
                                     73 ;	../_rrulonglong.c: 45: for(;s >= 16; s -= 16)
      000018 7B 1E            [ 1]   74 	ld	a, (0x1e, sp)
      00001A A1 10            [ 1]   75 	cp	a, #0x10
      00001C 25 2F            [ 1]   76 	jrc	00101$
                                     77 ;	../_rrulonglong.c: 47: b[3] = b[2];
      00001E 1E 0B            [ 2]   78 	ldw	x, (0x0b, sp)
      000020 1C 00 06         [ 2]   79 	addw	x, #0x0006
      000023 16 0B            [ 2]   80 	ldw	y, (0x0b, sp)
      000025 72 A9 00 04      [ 2]   81 	addw	y, #0x0004
      000029 17 0D            [ 2]   82 	ldw	(0x0d, sp), y
      00002B 90 FE            [ 2]   83 	ldw	y, (y)
      00002D FF               [ 2]   84 	ldw	(x), y
                                     85 ;	../_rrulonglong.c: 48: b[2] = b[1];
      00002E 1E 0B            [ 2]   86 	ldw	x, (0x0b, sp)
      000030 5C               [ 1]   87 	incw	x
      000031 5C               [ 1]   88 	incw	x
      000032 1F 0F            [ 2]   89 	ldw	(0x0f, sp), x
      000034 FE               [ 2]   90 	ldw	x, (x)
      000035 16 0D            [ 2]   91 	ldw	y, (0x0d, sp)
      000037 90 FF            [ 2]   92 	ldw	(y), x
                                     93 ;	../_rrulonglong.c: 49: b[1] = b[0];
      000039 1E 0B            [ 2]   94 	ldw	x, (0x0b, sp)
      00003B FE               [ 2]   95 	ldw	x, (x)
      00003C 16 0F            [ 2]   96 	ldw	y, (0x0f, sp)
      00003E 90 FF            [ 2]   97 	ldw	(y), x
                                     98 ;	../_rrulonglong.c: 50: b[0] = 0x000000;
      000040 1E 0B            [ 2]   99 	ldw	x, (0x0b, sp)
      000042 6F 01            [ 1]  100 	clr	(0x1, x)
      000044 7F               [ 1]  101 	clr	(x)
                                    102 ;	../_rrulonglong.c: 45: for(;s >= 16; s -= 16)
      000045 7B 1E            [ 1]  103 	ld	a, (0x1e, sp)
      000047 A0 10            [ 1]  104 	sub	a, #0x10
      000049 6B 1E            [ 1]  105 	ld	(0x1e, sp), a
      00004B 20 CB            [ 2]  106 	jra	00103$
      00004D                        107 00101$:
                                    108 ;	../_rrulonglong.c: 53: (*bottom) >>= s;
      00004D 1E 09            [ 2]  109 	ldw	x, (0x09, sp)
      00004F 90 93            [ 1]  110 	ldw	y, x
      000051 90 EE 02         [ 2]  111 	ldw	y, (0x2, y)
      000054 FE               [ 2]  112 	ldw	x, (x)
      000055 7B 1E            [ 1]  113 	ld	a, (0x1e, sp)
      000057 27 06            [ 1]  114 	jreq	00119$
      000059                        115 00118$:
      000059 54               [ 2]  116 	srlw	x
      00005A 90 56            [ 2]  117 	rrcw	y
      00005C 4A               [ 1]  118 	dec	a
      00005D 26 FA            [ 1]  119 	jrne	00118$
      00005F                        120 00119$:
      00005F 17 0F            [ 2]  121 	ldw	(0x0f, sp), y
      000061 1F 0D            [ 2]  122 	ldw	(0x0d, sp), x
      000063 1E 09            [ 2]  123 	ldw	x, (0x09, sp)
      000065 16 0F            [ 2]  124 	ldw	y, (0x0f, sp)
      000067 EF 02            [ 2]  125 	ldw	(0x2, x), y
      000069 16 0D            [ 2]  126 	ldw	y, (0x0d, sp)
      00006B FF               [ 2]  127 	ldw	(x), y
                                    128 ;	../_rrulonglong.c: 54: (*middle) |= (((*middle & 0xffff0000ul) >> s) & 0x0000fffful);
      00006C 1E 07            [ 2]  129 	ldw	x, (0x07, sp)
      00006E 90 93            [ 1]  130 	ldw	y, x
      000070 90 EE 02         [ 2]  131 	ldw	y, (0x2, y)
      000073 17 03            [ 2]  132 	ldw	(0x03, sp), y
      000075 FE               [ 2]  133 	ldw	x, (x)
      000076 1F 01            [ 2]  134 	ldw	(0x01, sp), x
      000078 5F               [ 1]  135 	clrw	x
      000079 16 01            [ 2]  136 	ldw	y, (0x01, sp)
      00007B 7B 1E            [ 1]  137 	ld	a, (0x1e, sp)
      00007D 27 06            [ 1]  138 	jreq	00121$
      00007F                        139 00120$:
      00007F 90 54            [ 2]  140 	srlw	y
      000081 56               [ 2]  141 	rrcw	x
      000082 4A               [ 1]  142 	dec	a
      000083 26 FA            [ 1]  143 	jrne	00120$
      000085                        144 00121$:
      000085 1F 0B            [ 2]  145 	ldw	(0x0b, sp), x
      000087 0F 0A            [ 1]  146 	clr	(0x0a, sp)
      000089 0F 09            [ 1]  147 	clr	(0x09, sp)
      00008B 7B 04            [ 1]  148 	ld	a, (0x04, sp)
      00008D 1A 0C            [ 1]  149 	or	a, (0x0c, sp)
      00008F 6B 10            [ 1]  150 	ld	(0x10, sp), a
      000091 7B 03            [ 1]  151 	ld	a, (0x03, sp)
      000093 1A 0B            [ 1]  152 	or	a, (0x0b, sp)
      000095 6B 0F            [ 1]  153 	ld	(0x0f, sp), a
      000097 7B 02            [ 1]  154 	ld	a, (0x02, sp)
      000099 1A 0A            [ 1]  155 	or	a, (0x0a, sp)
      00009B 6B 0E            [ 1]  156 	ld	(0x0e, sp), a
      00009D 7B 01            [ 1]  157 	ld	a, (0x01, sp)
      00009F 1A 09            [ 1]  158 	or	a, (0x09, sp)
      0000A1 6B 0D            [ 1]  159 	ld	(0x0d, sp), a
      0000A3 1E 07            [ 2]  160 	ldw	x, (0x07, sp)
      0000A5 16 0F            [ 2]  161 	ldw	y, (0x0f, sp)
      0000A7 EF 02            [ 2]  162 	ldw	(0x2, x), y
      0000A9 16 0D            [ 2]  163 	ldw	y, (0x0d, sp)
      0000AB FF               [ 2]  164 	ldw	(x), y
                                    165 ;	../_rrulonglong.c: 55: (*top) >>= s;
      0000AC 1E 05            [ 2]  166 	ldw	x, (0x05, sp)
      0000AE 90 93            [ 1]  167 	ldw	y, x
      0000B0 90 EE 02         [ 2]  168 	ldw	y, (0x2, y)
      0000B3 FE               [ 2]  169 	ldw	x, (x)
      0000B4 7B 1E            [ 1]  170 	ld	a, (0x1e, sp)
      0000B6 27 06            [ 1]  171 	jreq	00123$
      0000B8                        172 00122$:
      0000B8 54               [ 2]  173 	srlw	x
      0000B9 90 56            [ 2]  174 	rrcw	y
      0000BB 4A               [ 1]  175 	dec	a
      0000BC 26 FA            [ 1]  176 	jrne	00122$
      0000BE                        177 00123$:
      0000BE 17 0F            [ 2]  178 	ldw	(0x0f, sp), y
      0000C0 1F 0D            [ 2]  179 	ldw	(0x0d, sp), x
      0000C2 1E 05            [ 2]  180 	ldw	x, (0x05, sp)
      0000C4 16 0F            [ 2]  181 	ldw	y, (0x0f, sp)
      0000C6 EF 02            [ 2]  182 	ldw	(0x2, x), y
      0000C8 16 0D            [ 2]  183 	ldw	y, (0x0d, sp)
      0000CA FF               [ 2]  184 	ldw	(x), y
                                    185 ;	../_rrulonglong.c: 57: return(l);
      0000CB 1E 14            [ 2]  186 	ldw	x, (0x14, sp)
      0000CD 16 1C            [ 2]  187 	ldw	y, (0x1c, sp)
      0000CF EF 06            [ 2]  188 	ldw	(#6, x), y
      0000D1 16 1A            [ 2]  189 	ldw	y, (0x1a, sp)
      0000D3 EF 04            [ 2]  190 	ldw	(#4, x), y
      0000D5 16 18            [ 2]  191 	ldw	y, (0x18, sp)
      0000D7 EF 02            [ 2]  192 	ldw	(#2, x), y
      0000D9 16 16            [ 2]  193 	ldw	y, (0x16, sp)
      0000DB FF               [ 2]  194 	ldw	(x), y
                                    195 ;	../_rrulonglong.c: 58: }
      0000DC 5B 10            [ 2]  196 	addw	sp, #16
      0000DE 87               [ 5]  197 	retf
                                    198 	.area CODE
                                    199 	.area CONST
                                    200 	.area INITIALIZER
                                    201 	.area CABS (ABS)
