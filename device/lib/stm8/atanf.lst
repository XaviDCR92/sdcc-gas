                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.9.3 #11345 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module atanf
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _fabsf
                                     12 	.globl _atanf
                                     13 ;--------------------------------------------------------
                                     14 ; ram data
                                     15 ;--------------------------------------------------------
                                     16 	.area DATA
                                     17 ;--------------------------------------------------------
                                     18 ; ram data
                                     19 ;--------------------------------------------------------
                                     20 	.area INITIALIZED
                                     21 ;--------------------------------------------------------
                                     22 ; absolute external ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area DABS (ABS)
                                     25 
                                     26 ; default segment ordering for linker
                                     27 	.area HOME
                                     28 	.area GSINIT
                                     29 	.area GSFINAL
                                     30 	.area CONST
                                     31 	.area INITIALIZER
                                     32 	.area CODE
                                     33 
                                     34 ;--------------------------------------------------------
                                     35 ; global & static initialisations
                                     36 ;--------------------------------------------------------
                                     37 	.area HOME
                                     38 	.area GSINIT
                                     39 	.area GSFINAL
                                     40 	.area GSINIT
                                     41 ;--------------------------------------------------------
                                     42 ; Home
                                     43 ;--------------------------------------------------------
                                     44 	.area HOME
                                     45 	.area HOME
                                     46 ;--------------------------------------------------------
                                     47 ; code
                                     48 ;--------------------------------------------------------
                                     49 	.area CODE
                                     50 ;	../atanf.c: 55: float atanf(float x) _FLOAT_FUNC_REENTRANT
                                     51 ;	-----------------------------------------
                                     52 ;	 function atanf
                                     53 ;	-----------------------------------------
      000000                         54 _atanf:
      000000 52 0E            [ 2]   55 	sub	sp, #14
                                     56 ;	../atanf.c: 58: int n=0;
      000002 5F               [ 1]   57 	clrw	x
      000003 1F 01            [ 2]   58 	ldw	(0x01, sp), x
                                     59 ;	../atanf.c: 61: f=fabsf(x);
      000005 1E 13            [ 2]   60 	ldw	x, (0x13, sp)
      000007 89               [ 2]   61 	pushw	x
      000008 1E 13            [ 2]   62 	ldw	x, (0x13, sp)
      00000A 89               [ 2]   63 	pushw	x
      00000B CDr00r00         [ 4]   64 	call	_fabsf
      00000E 5B 04            [ 2]   65 	addw	sp, #4
      000010 1F 05            [ 2]   66 	ldw	(0x05, sp), x
      000012 17 03            [ 2]   67 	ldw	(0x03, sp), y
                                     68 ;	../atanf.c: 62: if(f>1.0)
      000014 1E 05            [ 2]   69 	ldw	x, (0x05, sp)
      000016 89               [ 2]   70 	pushw	x
      000017 1E 05            [ 2]   71 	ldw	x, (0x05, sp)
      000019 89               [ 2]   72 	pushw	x
      00001A 5F               [ 1]   73 	clrw	x
      00001B 89               [ 2]   74 	pushw	x
      00001C 4B 80            [ 1]   75 	push	#0x80
      00001E 4B 3F            [ 1]   76 	push	#0x3f
      000020 CDr00r00         [ 4]   77 	call	___fslt
      000023 5B 08            [ 2]   78 	addw	sp, #8
      000025 4D               [ 1]   79 	tnz	a
      000026 27 1A            [ 1]   80 	jreq	00102$
                                     81 ;	../atanf.c: 64: f=1.0/f;
      000028 1E 05            [ 2]   82 	ldw	x, (0x05, sp)
      00002A 89               [ 2]   83 	pushw	x
      00002B 1E 05            [ 2]   84 	ldw	x, (0x05, sp)
      00002D 89               [ 2]   85 	pushw	x
      00002E 5F               [ 1]   86 	clrw	x
      00002F 89               [ 2]   87 	pushw	x
      000030 4B 80            [ 1]   88 	push	#0x80
      000032 4B 3F            [ 1]   89 	push	#0x3f
      000034 CDr00r00         [ 4]   90 	call	___fsdiv
      000037 5B 08            [ 2]   91 	addw	sp, #8
      000039 1F 05            [ 2]   92 	ldw	(0x05, sp), x
      00003B 17 03            [ 2]   93 	ldw	(0x03, sp), y
                                     94 ;	../atanf.c: 65: n=2;
      00003D AE 00 02         [ 2]   95 	ldw	x, #0x0002
      000040 1F 01            [ 2]   96 	ldw	(0x01, sp), x
      000042                         97 00102$:
                                     98 ;	../atanf.c: 67: if(f>K1)
      000042 1E 05            [ 2]   99 	ldw	x, (0x05, sp)
      000044 89               [ 2]  100 	pushw	x
      000045 1E 05            [ 2]  101 	ldw	x, (0x05, sp)
      000047 89               [ 2]  102 	pushw	x
      000048 4B A3            [ 1]  103 	push	#0xa3
      00004A 4B 30            [ 1]  104 	push	#0x30
      00004C 4B 89            [ 1]  105 	push	#0x89
      00004E 4B 3E            [ 1]  106 	push	#0x3e
      000050 CDr00r00         [ 4]  107 	call	___fslt
      000053 5B 08            [ 2]  108 	addw	sp, #8
      000055 4D               [ 1]  109 	tnz	a
      000056 27 63            [ 1]  110 	jreq	00104$
                                    111 ;	../atanf.c: 69: f=((K2*f-1.0)+f)/(K3+f);
      000058 1E 05            [ 2]  112 	ldw	x, (0x05, sp)
      00005A 89               [ 2]  113 	pushw	x
      00005B 1E 05            [ 2]  114 	ldw	x, (0x05, sp)
      00005D 89               [ 2]  115 	pushw	x
      00005E 4B AF            [ 1]  116 	push	#0xaf
      000060 4B 67            [ 1]  117 	push	#0x67
      000062 4B 3B            [ 1]  118 	push	#0x3b
      000064 4B 3F            [ 1]  119 	push	#0x3f
      000066 CDr00r00         [ 4]  120 	call	___fsmul
      000069 5B 08            [ 2]  121 	addw	sp, #8
      00006B 4B 00            [ 1]  122 	push	#0x00
      00006D 4B 00            [ 1]  123 	push	#0x00
      00006F 4B 80            [ 1]  124 	push	#0x80
      000071 4B 3F            [ 1]  125 	push	#0x3f
      000073 89               [ 2]  126 	pushw	x
      000074 90 89            [ 2]  127 	pushw	y
      000076 CDr00r00         [ 4]  128 	call	___fssub
      000079 5B 08            [ 2]  129 	addw	sp, #8
      00007B 1F 0D            [ 2]  130 	ldw	(0x0d, sp), x
      00007D 1E 05            [ 2]  131 	ldw	x, (0x05, sp)
      00007F 89               [ 2]  132 	pushw	x
      000080 1E 05            [ 2]  133 	ldw	x, (0x05, sp)
      000082 89               [ 2]  134 	pushw	x
      000083 1E 11            [ 2]  135 	ldw	x, (0x11, sp)
      000085 89               [ 2]  136 	pushw	x
      000086 90 89            [ 2]  137 	pushw	y
      000088 CDr00r00         [ 4]  138 	call	___fsadd
      00008B 5B 08            [ 2]  139 	addw	sp, #8
      00008D 1F 0D            [ 2]  140 	ldw	(0x0d, sp), x
      00008F 17 0B            [ 2]  141 	ldw	(0x0b, sp), y
      000091 4B D7            [ 1]  142 	push	#0xd7
      000093 4B B3            [ 1]  143 	push	#0xb3
      000095 4B DD            [ 1]  144 	push	#0xdd
      000097 4B 3F            [ 1]  145 	push	#0x3f
      000099 1E 09            [ 2]  146 	ldw	x, (0x09, sp)
      00009B 89               [ 2]  147 	pushw	x
      00009C 1E 09            [ 2]  148 	ldw	x, (0x09, sp)
      00009E 89               [ 2]  149 	pushw	x
      00009F CDr00r00         [ 4]  150 	call	___fsadd
      0000A2 5B 08            [ 2]  151 	addw	sp, #8
      0000A4 89               [ 2]  152 	pushw	x
      0000A5 90 89            [ 2]  153 	pushw	y
      0000A7 1E 11            [ 2]  154 	ldw	x, (0x11, sp)
      0000A9 89               [ 2]  155 	pushw	x
      0000AA 1E 11            [ 2]  156 	ldw	x, (0x11, sp)
      0000AC 89               [ 2]  157 	pushw	x
      0000AD CDr00r00         [ 4]  158 	call	___fsdiv
      0000B0 5B 08            [ 2]  159 	addw	sp, #8
      0000B2 1F 05            [ 2]  160 	ldw	(0x05, sp), x
      0000B4 17 03            [ 2]  161 	ldw	(0x03, sp), y
                                    162 ;	../atanf.c: 73: n++;
      0000B6 1E 01            [ 2]  163 	ldw	x, (0x01, sp)
      0000B8 5C               [ 1]  164 	incw	x
      0000B9 1F 01            [ 2]  165 	ldw	(0x01, sp), x
      0000BB                        166 00104$:
                                    167 ;	../atanf.c: 75: if(fabsf(f)<EPS) r=f;
      0000BB 1E 05            [ 2]  168 	ldw	x, (0x05, sp)
      0000BD 89               [ 2]  169 	pushw	x
      0000BE 1E 05            [ 2]  170 	ldw	x, (0x05, sp)
      0000C0 89               [ 2]  171 	pushw	x
      0000C1 CDr00r00         [ 4]  172 	call	_fabsf
      0000C4 5B 04            [ 2]  173 	addw	sp, #4
      0000C6 4B 00            [ 1]  174 	push	#0x00
      0000C8 4B 00            [ 1]  175 	push	#0x00
      0000CA 4B 80            [ 1]  176 	push	#0x80
      0000CC 4B 39            [ 1]  177 	push	#0x39
      0000CE 89               [ 2]  178 	pushw	x
      0000CF 90 89            [ 2]  179 	pushw	y
      0000D1 CDr00r00         [ 4]  180 	call	___fslt
      0000D4 5B 08            [ 2]  181 	addw	sp, #8
      0000D6 6B 0E            [ 1]  182 	ld	(0x0e, sp), a
      0000D8 27 0B            [ 1]  183 	jreq	00106$
      0000DA 16 05            [ 2]  184 	ldw	y, (0x05, sp)
      0000DC 17 0D            [ 2]  185 	ldw	(0x0d, sp), y
      0000DE 16 03            [ 2]  186 	ldw	y, (0x03, sp)
      0000E0 17 0B            [ 2]  187 	ldw	(0x0b, sp), y
      0000E2 CCr01r78         [ 2]  188 	jp	00107$
      0000E5                        189 00106$:
                                    190 ;	../atanf.c: 78: g=f*f;
      0000E5 1E 05            [ 2]  191 	ldw	x, (0x05, sp)
      0000E7 89               [ 2]  192 	pushw	x
      0000E8 1E 05            [ 2]  193 	ldw	x, (0x05, sp)
      0000EA 89               [ 2]  194 	pushw	x
      0000EB 1E 09            [ 2]  195 	ldw	x, (0x09, sp)
      0000ED 89               [ 2]  196 	pushw	x
      0000EE 1E 09            [ 2]  197 	ldw	x, (0x09, sp)
      0000F0 89               [ 2]  198 	pushw	x
      0000F1 CDr00r00         [ 4]  199 	call	___fsmul
      0000F4 5B 08            [ 2]  200 	addw	sp, #8
      0000F6 1F 09            [ 2]  201 	ldw	(0x09, sp), x
      0000F8 17 07            [ 2]  202 	ldw	(0x07, sp), y
                                    203 ;	../atanf.c: 79: r=f+P(g,f)/Q(g);
      0000FA 1E 09            [ 2]  204 	ldw	x, (0x09, sp)
      0000FC 89               [ 2]  205 	pushw	x
      0000FD 1E 09            [ 2]  206 	ldw	x, (0x09, sp)
      0000FF 89               [ 2]  207 	pushw	x
      000100 4B 91            [ 1]  208 	push	#0x91
      000102 4B 86            [ 1]  209 	push	#0x86
      000104 4B 50            [ 1]  210 	push	#0x50
      000106 4B BD            [ 1]  211 	push	#0xbd
      000108 CDr00r00         [ 4]  212 	call	___fsmul
      00010B 5B 08            [ 2]  213 	addw	sp, #8
      00010D 4B F6            [ 1]  214 	push	#0xf6
      00010F 4B 10            [ 1]  215 	push	#0x10
      000111 4B F1            [ 1]  216 	push	#0xf1
      000113 4B BE            [ 1]  217 	push	#0xbe
      000115 89               [ 2]  218 	pushw	x
      000116 90 89            [ 2]  219 	pushw	y
      000118 CDr00r00         [ 4]  220 	call	___fsadd
      00011B 5B 08            [ 2]  221 	addw	sp, #8
      00011D 1F 0D            [ 2]  222 	ldw	(0x0d, sp), x
      00011F 1E 09            [ 2]  223 	ldw	x, (0x09, sp)
      000121 89               [ 2]  224 	pushw	x
      000122 1E 09            [ 2]  225 	ldw	x, (0x09, sp)
      000124 89               [ 2]  226 	pushw	x
      000125 1E 11            [ 2]  227 	ldw	x, (0x11, sp)
      000127 89               [ 2]  228 	pushw	x
      000128 90 89            [ 2]  229 	pushw	y
      00012A CDr00r00         [ 4]  230 	call	___fsmul
      00012D 5B 08            [ 2]  231 	addw	sp, #8
      00012F 1F 0D            [ 2]  232 	ldw	(0x0d, sp), x
      000131 1E 05            [ 2]  233 	ldw	x, (0x05, sp)
      000133 89               [ 2]  234 	pushw	x
      000134 1E 05            [ 2]  235 	ldw	x, (0x05, sp)
      000136 89               [ 2]  236 	pushw	x
      000137 1E 11            [ 2]  237 	ldw	x, (0x11, sp)
      000139 89               [ 2]  238 	pushw	x
      00013A 90 89            [ 2]  239 	pushw	y
      00013C CDr00r00         [ 4]  240 	call	___fsmul
      00013F 5B 08            [ 2]  241 	addw	sp, #8
      000141 1F 0D            [ 2]  242 	ldw	(0x0d, sp), x
      000143 17 0B            [ 2]  243 	ldw	(0x0b, sp), y
      000145 4B D3            [ 1]  244 	push	#0xd3
      000147 4B CC            [ 1]  245 	push	#0xcc
      000149 4B B4            [ 1]  246 	push	#0xb4
      00014B 4B 3F            [ 1]  247 	push	#0x3f
      00014D 1E 0D            [ 2]  248 	ldw	x, (0x0d, sp)
      00014F 89               [ 2]  249 	pushw	x
      000150 1E 0D            [ 2]  250 	ldw	x, (0x0d, sp)
      000152 89               [ 2]  251 	pushw	x
      000153 CDr00r00         [ 4]  252 	call	___fsadd
      000156 5B 08            [ 2]  253 	addw	sp, #8
      000158 89               [ 2]  254 	pushw	x
      000159 90 89            [ 2]  255 	pushw	y
      00015B 1E 11            [ 2]  256 	ldw	x, (0x11, sp)
      00015D 89               [ 2]  257 	pushw	x
      00015E 1E 11            [ 2]  258 	ldw	x, (0x11, sp)
      000160 89               [ 2]  259 	pushw	x
      000161 CDr00r00         [ 4]  260 	call	___fsdiv
      000164 5B 08            [ 2]  261 	addw	sp, #8
      000166 89               [ 2]  262 	pushw	x
      000167 90 89            [ 2]  263 	pushw	y
      000169 1E 09            [ 2]  264 	ldw	x, (0x09, sp)
      00016B 89               [ 2]  265 	pushw	x
      00016C 1E 09            [ 2]  266 	ldw	x, (0x09, sp)
      00016E 89               [ 2]  267 	pushw	x
      00016F CDr00r00         [ 4]  268 	call	___fsadd
      000172 5B 08            [ 2]  269 	addw	sp, #8
      000174 1F 0D            [ 2]  270 	ldw	(0x0d, sp), x
      000176 17 0B            [ 2]  271 	ldw	(0x0b, sp), y
      000178                        272 00107$:
                                    273 ;	../atanf.c: 81: if(n>1) r=-r;
      000178 1E 01            [ 2]  274 	ldw	x, (0x01, sp)
      00017A A3 00 01         [ 2]  275 	cpw	x, #0x0001
      00017D 2D 0B            [ 1]  276 	jrsle	00109$
      00017F 16 0D            [ 2]  277 	ldw	y, (0x0d, sp)
      000181 1E 0B            [ 2]  278 	ldw	x, (0x0b, sp)
      000183 58               [ 2]  279 	sllw	x
      000184 8C               [ 1]  280 	ccf
      000185 56               [ 2]  281 	rrcw	x
      000186 17 0D            [ 2]  282 	ldw	(0x0d, sp), y
      000188 1F 0B            [ 2]  283 	ldw	(0x0b, sp), x
      00018A                        284 00109$:
                                    285 ;	../atanf.c: 82: r+=a[n];
      00018A 1E 01            [ 2]  286 	ldw	x, (0x01, sp)
      00018C 58               [ 2]  287 	sllw	x
      00018D 58               [ 2]  288 	sllw	x
      00018E 1Cr00r00         [ 2]  289 	addw	x, #(_atanf_a_65536_26 + 0)
      000191 90 93            [ 1]  290 	ldw	y, x
      000193 90 EE 02         [ 2]  291 	ldw	y, (0x2, y)
      000196 FE               [ 2]  292 	ldw	x, (x)
      000197 90 89            [ 2]  293 	pushw	y
      000199 89               [ 2]  294 	pushw	x
      00019A 1E 11            [ 2]  295 	ldw	x, (0x11, sp)
      00019C 89               [ 2]  296 	pushw	x
      00019D 1E 11            [ 2]  297 	ldw	x, (0x11, sp)
      00019F 89               [ 2]  298 	pushw	x
      0001A0 CDr00r00         [ 4]  299 	call	___fsadd
      0001A3 5B 08            [ 2]  300 	addw	sp, #8
                                    301 ;	../atanf.c: 83: if(x<0.0) r=-r;
      0001A5 89               [ 2]  302 	pushw	x
      0001A6 90 89            [ 2]  303 	pushw	y
      0001A8 4B 00            [ 1]  304 	push	#0x00
      0001AA 4B 00            [ 1]  305 	push	#0x00
      0001AC 4B 00            [ 1]  306 	push	#0x00
      0001AE 4B 00            [ 1]  307 	push	#0x00
      0001B0 7B 1C            [ 1]  308 	ld	a, (0x1c, sp)
      0001B2 88               [ 1]  309 	push	a
      0001B3 7B 1C            [ 1]  310 	ld	a, (0x1c, sp)
      0001B5 88               [ 1]  311 	push	a
      0001B6 7B 1C            [ 1]  312 	ld	a, (0x1c, sp)
      0001B8 88               [ 1]  313 	push	a
      0001B9 7B 1C            [ 1]  314 	ld	a, (0x1c, sp)
      0001BB 88               [ 1]  315 	push	a
      0001BC CDr00r00         [ 4]  316 	call	___fslt
      0001BF 5B 08            [ 2]  317 	addw	sp, #8
      0001C1 90 85            [ 2]  318 	popw	y
      0001C3 85               [ 2]  319 	popw	x
      0001C4 4D               [ 1]  320 	tnz	a
      0001C5 27 05            [ 1]  321 	jreq	00111$
      0001C7 90 58            [ 2]  322 	sllw	y
      0001C9 8C               [ 1]  323 	ccf
      0001CA 90 56            [ 2]  324 	rrcw	y
      0001CC                        325 00111$:
                                    326 ;	../atanf.c: 84: return r;
                                    327 ;	../atanf.c: 85: }
      0001CC 5B 0E            [ 2]  328 	addw	sp, #14
      0001CE 81               [ 4]  329 	ret
                                    330 	.area CODE
                                    331 	.area CONST
      000000                        332 _atanf_a_65536_26:
      000000 00 00 00 00            333 	.byte #0x00, #0x00, #0x00, #0x00	;  0.000000e+00
      000004 3F 06 0A 92            334 	.byte #0x3f, #0x06, #0x0a, #0x92	;  5.235988e-01
      000008 3F C9 0F DB            335 	.byte #0x3f, #0xc9, #0x0f, #0xdb	;  1.570796e+00
      00000C 3F 86 0A 92            336 	.byte #0x3f, #0x86, #0x0a, #0x92	;  1.047198e+00
                                    337 	.area INITIALIZER
                                    338 	.area CABS (ABS)
