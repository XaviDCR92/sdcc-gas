                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.9.3 #11345 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module mbstowcs
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _mbtowc
                                     12 	.globl _mbstowcs
                                     13 ;--------------------------------------------------------
                                     14 ; ram data
                                     15 ;--------------------------------------------------------
                                     16 	.area DATA
                                     17 ;--------------------------------------------------------
                                     18 ; ram data
                                     19 ;--------------------------------------------------------
                                     20 	.area INITIALIZED
                                     21 ;--------------------------------------------------------
                                     22 ; absolute external ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area DABS (ABS)
                                     25 
                                     26 ; default segment ordering for linker
                                     27 	.area HOME
                                     28 	.area GSINIT
                                     29 	.area GSFINAL
                                     30 	.area CONST
                                     31 	.area INITIALIZER
                                     32 	.area CODE
                                     33 
                                     34 ;--------------------------------------------------------
                                     35 ; global & static initialisations
                                     36 ;--------------------------------------------------------
                                     37 	.area HOME
                                     38 	.area GSINIT
                                     39 	.area GSFINAL
                                     40 	.area GSINIT
                                     41 ;--------------------------------------------------------
                                     42 ; Home
                                     43 ;--------------------------------------------------------
                                     44 	.area HOME
                                     45 	.area HOME
                                     46 ;--------------------------------------------------------
                                     47 ; code
                                     48 ;--------------------------------------------------------
                                     49 	.area CODE
                                     50 ;	../mbstowcs.c: 33: size_t mbstowcs(wchar_t *restrict pwcs, const char *restrict s, size_t n)
                                     51 ;	-----------------------------------------
                                     52 ;	 function mbstowcs
                                     53 ;	-----------------------------------------
      000000                         54 _mbstowcs:
      000000 52 08            [ 2]   55 	sub	sp, #8
                                     56 ;	../mbstowcs.c: 35: size_t m = 0;
      000002 5F               [ 1]   57 	clrw	x
      000003 1F 01            [ 2]   58 	ldw	(0x01, sp), x
                                     59 ;	../mbstowcs.c: 36: while(n--)
      000005 16 0B            [ 2]   60 	ldw	y, (0x0b, sp)
      000007 17 03            [ 2]   61 	ldw	(0x03, sp), y
      000009 5F               [ 1]   62 	clrw	x
      00000A 1F 05            [ 2]   63 	ldw	(0x05, sp), x
      00000C 16 0F            [ 2]   64 	ldw	y, (0x0f, sp)
      00000E 17 07            [ 2]   65 	ldw	(0x07, sp), y
      000010                         66 00105$:
      000010 1E 07            [ 2]   67 	ldw	x, (0x07, sp)
      000012 16 07            [ 2]   68 	ldw	y, (0x07, sp)
      000014 90 5A            [ 2]   69 	decw	y
      000016 17 07            [ 2]   70 	ldw	(0x07, sp), y
      000018 5D               [ 2]   71 	tnzw	x
      000019 27 2F            [ 1]   72 	jreq	00107$
                                     73 ;	../mbstowcs.c: 38: int b = mbtowc(pwcs++, s, MB_LEN_MAX);
      00001B 16 03            [ 2]   74 	ldw	y, (0x03, sp)
      00001D 1E 03            [ 2]   75 	ldw	x, (0x03, sp)
      00001F 1C 00 04         [ 2]   76 	addw	x, #0x0004
      000022 1F 03            [ 2]   77 	ldw	(0x03, sp), x
      000024 4B 04            [ 1]   78 	push	#0x04
      000026 4B 00            [ 1]   79 	push	#0x00
      000028 1E 0F            [ 2]   80 	ldw	x, (0x0f, sp)
      00002A 89               [ 2]   81 	pushw	x
      00002B 90 89            [ 2]   82 	pushw	y
      00002D CDr00r00         [ 4]   83 	call	_mbtowc
      000030 5B 06            [ 2]   84 	addw	sp, #6
                                     85 ;	../mbstowcs.c: 39: if(!b)
      000032 5D               [ 2]   86 	tnzw	x
      000033 27 15            [ 1]   87 	jreq	00107$
                                     88 ;	../mbstowcs.c: 41: if(b < 0)
      000035 5D               [ 2]   89 	tnzw	x
      000036 2A 04            [ 1]   90 	jrpl	00104$
                                     91 ;	../mbstowcs.c: 42: return(-1);
      000038 5F               [ 1]   92 	clrw	x
      000039 5A               [ 2]   93 	decw	x
      00003A 20 10            [ 2]   94 	jra	00108$
      00003C                         95 00104$:
                                     96 ;	../mbstowcs.c: 43: s += b;
      00003C 72 FB 0D         [ 2]   97 	addw	x, (0x0d, sp)
      00003F 1F 0D            [ 2]   98 	ldw	(0x0d, sp), x
                                     99 ;	../mbstowcs.c: 44: m++;
      000041 1E 05            [ 2]  100 	ldw	x, (0x05, sp)
      000043 5C               [ 1]  101 	incw	x
      000044 1F 05            [ 2]  102 	ldw	(0x05, sp), x
      000046 1F 01            [ 2]  103 	ldw	(0x01, sp), x
      000048 20 C6            [ 2]  104 	jra	00105$
      00004A                        105 00107$:
                                    106 ;	../mbstowcs.c: 47: return(m);
      00004A 1E 01            [ 2]  107 	ldw	x, (0x01, sp)
      00004C                        108 00108$:
                                    109 ;	../mbstowcs.c: 48: }
      00004C 5B 08            [ 2]  110 	addw	sp, #8
      00004E 81               [ 4]  111 	ret
                                    112 	.area CODE
                                    113 	.area CONST
                                    114 	.area INITIALIZER
                                    115 	.area CABS (ABS)
