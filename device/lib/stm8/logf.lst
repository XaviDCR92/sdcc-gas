                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.9.3 #11345 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module logf
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _frexpf
                                     12 	.globl _logf
                                     13 ;--------------------------------------------------------
                                     14 ; ram data
                                     15 ;--------------------------------------------------------
                                     16 	.area DATA
                                     17 ;--------------------------------------------------------
                                     18 ; ram data
                                     19 ;--------------------------------------------------------
                                     20 	.area INITIALIZED
                                     21 ;--------------------------------------------------------
                                     22 ; absolute external ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area DABS (ABS)
                                     25 
                                     26 ; default segment ordering for linker
                                     27 	.area HOME
                                     28 	.area GSINIT
                                     29 	.area GSFINAL
                                     30 	.area CONST
                                     31 	.area INITIALIZER
                                     32 	.area CODE
                                     33 
                                     34 ;--------------------------------------------------------
                                     35 ; global & static initialisations
                                     36 ;--------------------------------------------------------
                                     37 	.area HOME
                                     38 	.area GSINIT
                                     39 	.area GSFINAL
                                     40 	.area GSINIT
                                     41 ;--------------------------------------------------------
                                     42 ; Home
                                     43 ;--------------------------------------------------------
                                     44 	.area HOME
                                     45 	.area HOME
                                     46 ;--------------------------------------------------------
                                     47 ; code
                                     48 ;--------------------------------------------------------
                                     49 	.area CODE
                                     50 ;	../logf.c: 216: float logf(float x) _FLOAT_FUNC_REENTRANT
                                     51 ;	-----------------------------------------
                                     52 ;	 function logf
                                     53 ;	-----------------------------------------
      000000                         54 _logf:
      000000 52 0E            [ 2]   55 	sub	sp, #14
                                     56 ;	../logf.c: 226: if (x<=0.0)
      000002 1E 13            [ 2]   57 	ldw	x, (0x13, sp)
      000004 89               [ 2]   58 	pushw	x
      000005 1E 13            [ 2]   59 	ldw	x, (0x13, sp)
      000007 89               [ 2]   60 	pushw	x
      000008 5F               [ 1]   61 	clrw	x
      000009 89               [ 2]   62 	pushw	x
      00000A 5F               [ 1]   63 	clrw	x
      00000B 89               [ 2]   64 	pushw	x
      00000C CDr00r00         [ 4]   65 	call	___fslt
      00000F 5B 08            [ 2]   66 	addw	sp, #8
      000011 6B 0E            [ 1]   67 	ld	(0x0e, sp), a
      000013 26 0C            [ 1]   68 	jrne	00102$
                                     69 ;	../logf.c: 228: errno=EDOM;
      000015 AE 00 21         [ 2]   70 	ldw	x, #0x0021
      000018 CFu00u00         [ 2]   71 	ldw	_errno+0, x
                                     72 ;	../logf.c: 229: return 0.0;
      00001B 5F               [ 1]   73 	clrw	x
      00001C 90 5F            [ 1]   74 	clrw	y
      00001E CCr01rDC         [ 2]   75 	jp	00106$
      000021                         76 00102$:
                                     77 ;	../logf.c: 231: f=frexpf(x, &n);
      000021 96               [ 1]   78 	ldw	x, sp
      000022 5C               [ 1]   79 	incw	x
      000023 89               [ 2]   80 	pushw	x
      000024 1E 15            [ 2]   81 	ldw	x, (0x15, sp)
      000026 89               [ 2]   82 	pushw	x
      000027 1E 15            [ 2]   83 	ldw	x, (0x15, sp)
      000029 89               [ 2]   84 	pushw	x
      00002A CDr00r00         [ 4]   85 	call	_frexpf
      00002D 5B 06            [ 2]   86 	addw	sp, #6
      00002F 1F 05            [ 2]   87 	ldw	(0x05, sp), x
      000031 17 03            [ 2]   88 	ldw	(0x03, sp), y
                                     89 ;	../logf.c: 232: znum=f-0.5;
      000033 5F               [ 1]   90 	clrw	x
      000034 89               [ 2]   91 	pushw	x
      000035 4B 00            [ 1]   92 	push	#0x00
      000037 4B 3F            [ 1]   93 	push	#0x3f
      000039 1E 09            [ 2]   94 	ldw	x, (0x09, sp)
      00003B 89               [ 2]   95 	pushw	x
      00003C 1E 09            [ 2]   96 	ldw	x, (0x09, sp)
      00003E 89               [ 2]   97 	pushw	x
      00003F CDr00r00         [ 4]   98 	call	___fssub
      000042 5B 08            [ 2]   99 	addw	sp, #8
      000044 1F 09            [ 2]  100 	ldw	(0x09, sp), x
      000046 17 07            [ 2]  101 	ldw	(0x07, sp), y
                                    102 ;	../logf.c: 233: if (f>C0)
      000048 1E 05            [ 2]  103 	ldw	x, (0x05, sp)
      00004A 89               [ 2]  104 	pushw	x
      00004B 1E 05            [ 2]  105 	ldw	x, (0x05, sp)
      00004D 89               [ 2]  106 	pushw	x
      00004E 4B F3            [ 1]  107 	push	#0xf3
      000050 4B 04            [ 1]  108 	push	#0x04
      000052 4B 35            [ 1]  109 	push	#0x35
      000054 4B 3F            [ 1]  110 	push	#0x3f
      000056 CDr00r00         [ 4]  111 	call	___fslt
      000059 5B 08            [ 2]  112 	addw	sp, #8
      00005B 6B 0E            [ 1]  113 	ld	(0x0e, sp), a
      00005D 27 3C            [ 1]  114 	jreq	00104$
                                    115 ;	../logf.c: 235: znum-=0.5;
      00005F 5F               [ 1]  116 	clrw	x
      000060 89               [ 2]  117 	pushw	x
      000061 4B 00            [ 1]  118 	push	#0x00
      000063 4B 3F            [ 1]  119 	push	#0x3f
      000065 1E 0D            [ 2]  120 	ldw	x, (0x0d, sp)
      000067 89               [ 2]  121 	pushw	x
      000068 1E 0D            [ 2]  122 	ldw	x, (0x0d, sp)
      00006A 89               [ 2]  123 	pushw	x
      00006B CDr00r00         [ 4]  124 	call	___fssub
      00006E 5B 08            [ 2]  125 	addw	sp, #8
      000070 1F 09            [ 2]  126 	ldw	(0x09, sp), x
      000072 17 07            [ 2]  127 	ldw	(0x07, sp), y
                                    128 ;	../logf.c: 236: zden=(f*0.5)+0.5;
      000074 1E 05            [ 2]  129 	ldw	x, (0x05, sp)
      000076 89               [ 2]  130 	pushw	x
      000077 1E 05            [ 2]  131 	ldw	x, (0x05, sp)
      000079 89               [ 2]  132 	pushw	x
      00007A 5F               [ 1]  133 	clrw	x
      00007B 89               [ 2]  134 	pushw	x
      00007C 4B 00            [ 1]  135 	push	#0x00
      00007E 4B 3F            [ 1]  136 	push	#0x3f
      000080 CDr00r00         [ 4]  137 	call	___fsmul
      000083 5B 08            [ 2]  138 	addw	sp, #8
      000085 4B 00            [ 1]  139 	push	#0x00
      000087 4B 00            [ 1]  140 	push	#0x00
      000089 4B 00            [ 1]  141 	push	#0x00
      00008B 4B 3F            [ 1]  142 	push	#0x3f
      00008D 89               [ 2]  143 	pushw	x
      00008E 90 89            [ 2]  144 	pushw	y
      000090 CDr00r00         [ 4]  145 	call	___fsadd
      000093 5B 08            [ 2]  146 	addw	sp, #8
      000095 1F 0D            [ 2]  147 	ldw	(0x0d, sp), x
      000097 17 0B            [ 2]  148 	ldw	(0x0b, sp), y
      000099 20 2A            [ 2]  149 	jra	00105$
      00009B                        150 00104$:
                                    151 ;	../logf.c: 240: n--;
      00009B 1E 01            [ 2]  152 	ldw	x, (0x01, sp)
      00009D 5A               [ 2]  153 	decw	x
      00009E 1F 01            [ 2]  154 	ldw	(0x01, sp), x
                                    155 ;	../logf.c: 241: zden=znum*0.5+0.5;
      0000A0 1E 09            [ 2]  156 	ldw	x, (0x09, sp)
      0000A2 89               [ 2]  157 	pushw	x
      0000A3 1E 09            [ 2]  158 	ldw	x, (0x09, sp)
      0000A5 89               [ 2]  159 	pushw	x
      0000A6 5F               [ 1]  160 	clrw	x
      0000A7 89               [ 2]  161 	pushw	x
      0000A8 4B 00            [ 1]  162 	push	#0x00
      0000AA 4B 3F            [ 1]  163 	push	#0x3f
      0000AC CDr00r00         [ 4]  164 	call	___fsmul
      0000AF 5B 08            [ 2]  165 	addw	sp, #8
      0000B1 4B 00            [ 1]  166 	push	#0x00
      0000B3 4B 00            [ 1]  167 	push	#0x00
      0000B5 4B 00            [ 1]  168 	push	#0x00
      0000B7 4B 3F            [ 1]  169 	push	#0x3f
      0000B9 89               [ 2]  170 	pushw	x
      0000BA 90 89            [ 2]  171 	pushw	y
      0000BC CDr00r00         [ 4]  172 	call	___fsadd
      0000BF 5B 08            [ 2]  173 	addw	sp, #8
      0000C1 1F 0D            [ 2]  174 	ldw	(0x0d, sp), x
      0000C3 17 0B            [ 2]  175 	ldw	(0x0b, sp), y
      0000C5                        176 00105$:
                                    177 ;	../logf.c: 243: z=znum/zden;
      0000C5 1E 0D            [ 2]  178 	ldw	x, (0x0d, sp)
      0000C7 89               [ 2]  179 	pushw	x
      0000C8 1E 0D            [ 2]  180 	ldw	x, (0x0d, sp)
      0000CA 89               [ 2]  181 	pushw	x
      0000CB 1E 0D            [ 2]  182 	ldw	x, (0x0d, sp)
      0000CD 89               [ 2]  183 	pushw	x
      0000CE 1E 0D            [ 2]  184 	ldw	x, (0x0d, sp)
      0000D0 89               [ 2]  185 	pushw	x
      0000D1 CDr00r00         [ 4]  186 	call	___fsdiv
      0000D4 5B 08            [ 2]  187 	addw	sp, #8
      0000D6 1F 0D            [ 2]  188 	ldw	(0x0d, sp), x
      0000D8 17 0B            [ 2]  189 	ldw	(0x0b, sp), y
      0000DA 16 0D            [ 2]  190 	ldw	y, (0x0d, sp)
      0000DC 17 05            [ 2]  191 	ldw	(0x05, sp), y
      0000DE 16 0B            [ 2]  192 	ldw	y, (0x0b, sp)
      0000E0 17 03            [ 2]  193 	ldw	(0x03, sp), y
                                    194 ;	../logf.c: 244: w=z*z;
      0000E2 1E 05            [ 2]  195 	ldw	x, (0x05, sp)
      0000E4 89               [ 2]  196 	pushw	x
      0000E5 1E 05            [ 2]  197 	ldw	x, (0x05, sp)
      0000E7 89               [ 2]  198 	pushw	x
      0000E8 1E 09            [ 2]  199 	ldw	x, (0x09, sp)
      0000EA 89               [ 2]  200 	pushw	x
      0000EB 1E 09            [ 2]  201 	ldw	x, (0x09, sp)
      0000ED 89               [ 2]  202 	pushw	x
      0000EE CDr00r00         [ 4]  203 	call	___fsmul
      0000F1 5B 08            [ 2]  204 	addw	sp, #8
      0000F3 1F 0D            [ 2]  205 	ldw	(0x0d, sp), x
      0000F5 17 0B            [ 2]  206 	ldw	(0x0b, sp), y
                                    207 ;	../logf.c: 246: Rz=z+z*(w*A(w)/B(w));
      0000F7 1E 0D            [ 2]  208 	ldw	x, (0x0d, sp)
      0000F9 89               [ 2]  209 	pushw	x
      0000FA 1E 0D            [ 2]  210 	ldw	x, (0x0d, sp)
      0000FC 89               [ 2]  211 	pushw	x
      0000FD 4B 3D            [ 1]  212 	push	#0x3d
      0000FF 4B 7E            [ 1]  213 	push	#0x7e
      000101 4B 0D            [ 1]  214 	push	#0x0d
      000103 4B BF            [ 1]  215 	push	#0xbf
      000105 CDr00r00         [ 4]  216 	call	___fsmul
      000108 5B 08            [ 2]  217 	addw	sp, #8
      00010A 1F 09            [ 2]  218 	ldw	(0x09, sp), x
      00010C 17 07            [ 2]  219 	ldw	(0x07, sp), y
      00010E 4B 3A            [ 1]  220 	push	#0x3a
      000110 4B 3F            [ 1]  221 	push	#0x3f
      000112 4B D4            [ 1]  222 	push	#0xd4
      000114 4B C0            [ 1]  223 	push	#0xc0
      000116 1E 11            [ 2]  224 	ldw	x, (0x11, sp)
      000118 89               [ 2]  225 	pushw	x
      000119 1E 11            [ 2]  226 	ldw	x, (0x11, sp)
      00011B 89               [ 2]  227 	pushw	x
      00011C CDr00r00         [ 4]  228 	call	___fsadd
      00011F 5B 08            [ 2]  229 	addw	sp, #8
      000121 1F 0D            [ 2]  230 	ldw	(0x0d, sp), x
      000123 17 0B            [ 2]  231 	ldw	(0x0b, sp), y
      000125 1E 0D            [ 2]  232 	ldw	x, (0x0d, sp)
      000127 89               [ 2]  233 	pushw	x
      000128 1E 0D            [ 2]  234 	ldw	x, (0x0d, sp)
      00012A 89               [ 2]  235 	pushw	x
      00012B 1E 0D            [ 2]  236 	ldw	x, (0x0d, sp)
      00012D 89               [ 2]  237 	pushw	x
      00012E 1E 0D            [ 2]  238 	ldw	x, (0x0d, sp)
      000130 89               [ 2]  239 	pushw	x
      000131 CDr00r00         [ 4]  240 	call	___fsdiv
      000134 5B 08            [ 2]  241 	addw	sp, #8
      000136 1F 0D            [ 2]  242 	ldw	(0x0d, sp), x
      000138 17 0B            [ 2]  243 	ldw	(0x0b, sp), y
      00013A 1E 0D            [ 2]  244 	ldw	x, (0x0d, sp)
      00013C 89               [ 2]  245 	pushw	x
      00013D 1E 0D            [ 2]  246 	ldw	x, (0x0d, sp)
      00013F 89               [ 2]  247 	pushw	x
      000140 1E 09            [ 2]  248 	ldw	x, (0x09, sp)
      000142 89               [ 2]  249 	pushw	x
      000143 1E 09            [ 2]  250 	ldw	x, (0x09, sp)
      000145 89               [ 2]  251 	pushw	x
      000146 CDr00r00         [ 4]  252 	call	___fsmul
      000149 5B 08            [ 2]  253 	addw	sp, #8
      00014B 1F 0D            [ 2]  254 	ldw	(0x0d, sp), x
      00014D 17 0B            [ 2]  255 	ldw	(0x0b, sp), y
      00014F 1E 0D            [ 2]  256 	ldw	x, (0x0d, sp)
      000151 89               [ 2]  257 	pushw	x
      000152 1E 0D            [ 2]  258 	ldw	x, (0x0d, sp)
      000154 89               [ 2]  259 	pushw	x
      000155 1E 09            [ 2]  260 	ldw	x, (0x09, sp)
      000157 89               [ 2]  261 	pushw	x
      000158 1E 09            [ 2]  262 	ldw	x, (0x09, sp)
      00015A 89               [ 2]  263 	pushw	x
      00015B CDr00r00         [ 4]  264 	call	___fsadd
      00015E 5B 08            [ 2]  265 	addw	sp, #8
      000160 1F 0D            [ 2]  266 	ldw	(0x0d, sp), x
      000162 17 0B            [ 2]  267 	ldw	(0x0b, sp), y
      000164 16 0D            [ 2]  268 	ldw	y, (0x0d, sp)
      000166 17 05            [ 2]  269 	ldw	(0x05, sp), y
      000168 16 0B            [ 2]  270 	ldw	y, (0x0b, sp)
      00016A 17 03            [ 2]  271 	ldw	(0x03, sp), y
                                    272 ;	../logf.c: 247: xn=n;
      00016C 1E 01            [ 2]  273 	ldw	x, (0x01, sp)
      00016E 89               [ 2]  274 	pushw	x
      00016F CDr00r00         [ 4]  275 	call	___sint2fs
      000172 5B 02            [ 2]  276 	addw	sp, #2
      000174 1F 0D            [ 2]  277 	ldw	(0x0d, sp), x
      000176 17 0B            [ 2]  278 	ldw	(0x0b, sp), y
      000178 16 0D            [ 2]  279 	ldw	y, (0x0d, sp)
      00017A 17 09            [ 2]  280 	ldw	(0x09, sp), y
      00017C 16 0B            [ 2]  281 	ldw	y, (0x0b, sp)
      00017E 17 07            [ 2]  282 	ldw	(0x07, sp), y
                                    283 ;	../logf.c: 248: return ((xn*C2+Rz)+xn*C1);
      000180 1E 09            [ 2]  284 	ldw	x, (0x09, sp)
      000182 89               [ 2]  285 	pushw	x
      000183 1E 09            [ 2]  286 	ldw	x, (0x09, sp)
      000185 89               [ 2]  287 	pushw	x
      000186 4B 83            [ 1]  288 	push	#0x83
      000188 4B 80            [ 1]  289 	push	#0x80
      00018A 4B 5E            [ 1]  290 	push	#0x5e
      00018C 4B B9            [ 1]  291 	push	#0xb9
      00018E CDr00r00         [ 4]  292 	call	___fsmul
      000191 5B 08            [ 2]  293 	addw	sp, #8
      000193 1F 0D            [ 2]  294 	ldw	(0x0d, sp), x
      000195 17 0B            [ 2]  295 	ldw	(0x0b, sp), y
      000197 1E 05            [ 2]  296 	ldw	x, (0x05, sp)
      000199 89               [ 2]  297 	pushw	x
      00019A 1E 05            [ 2]  298 	ldw	x, (0x05, sp)
      00019C 89               [ 2]  299 	pushw	x
      00019D 1E 11            [ 2]  300 	ldw	x, (0x11, sp)
      00019F 89               [ 2]  301 	pushw	x
      0001A0 1E 11            [ 2]  302 	ldw	x, (0x11, sp)
      0001A2 89               [ 2]  303 	pushw	x
      0001A3 CDr00r00         [ 4]  304 	call	___fsadd
      0001A6 5B 08            [ 2]  305 	addw	sp, #8
      0001A8 1F 0D            [ 2]  306 	ldw	(0x0d, sp), x
      0001AA 17 0B            [ 2]  307 	ldw	(0x0b, sp), y
      0001AC 1E 09            [ 2]  308 	ldw	x, (0x09, sp)
      0001AE 89               [ 2]  309 	pushw	x
      0001AF 1E 09            [ 2]  310 	ldw	x, (0x09, sp)
      0001B1 89               [ 2]  311 	pushw	x
      0001B2 4B 00            [ 1]  312 	push	#0x00
      0001B4 4B 80            [ 1]  313 	push	#0x80
      0001B6 4B 31            [ 1]  314 	push	#0x31
      0001B8 4B 3F            [ 1]  315 	push	#0x3f
      0001BA CDr00r00         [ 4]  316 	call	___fsmul
      0001BD 5B 08            [ 2]  317 	addw	sp, #8
      0001BF 1F 09            [ 2]  318 	ldw	(0x09, sp), x
      0001C1 17 07            [ 2]  319 	ldw	(0x07, sp), y
      0001C3 1E 09            [ 2]  320 	ldw	x, (0x09, sp)
      0001C5 89               [ 2]  321 	pushw	x
      0001C6 1E 09            [ 2]  322 	ldw	x, (0x09, sp)
      0001C8 89               [ 2]  323 	pushw	x
      0001C9 1E 11            [ 2]  324 	ldw	x, (0x11, sp)
      0001CB 89               [ 2]  325 	pushw	x
      0001CC 1E 11            [ 2]  326 	ldw	x, (0x11, sp)
      0001CE 89               [ 2]  327 	pushw	x
      0001CF CDr00r00         [ 4]  328 	call	___fsadd
      0001D2 5B 08            [ 2]  329 	addw	sp, #8
      0001D4 1F 0D            [ 2]  330 	ldw	(0x0d, sp), x
      0001D6 17 0B            [ 2]  331 	ldw	(0x0b, sp), y
      0001D8 1E 0D            [ 2]  332 	ldw	x, (0x0d, sp)
      0001DA 16 0B            [ 2]  333 	ldw	y, (0x0b, sp)
      0001DC                        334 00106$:
                                    335 ;	../logf.c: 249: }
      0001DC 5B 0E            [ 2]  336 	addw	sp, #14
      0001DE 81               [ 4]  337 	ret
                                    338 	.area CODE
                                    339 	.area CONST
                                    340 	.area INITIALIZER
                                    341 	.area CABS (ABS)
