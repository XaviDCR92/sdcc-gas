                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.9.3 #11345 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module calloc
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _memset
                                     12 	.globl _malloc
                                     13 	.globl _calloc
                                     14 ;--------------------------------------------------------
                                     15 ; ram data
                                     16 ;--------------------------------------------------------
                                     17 	.area DATA
                                     18 ;--------------------------------------------------------
                                     19 ; ram data
                                     20 ;--------------------------------------------------------
                                     21 	.area INITIALIZED
                                     22 ;--------------------------------------------------------
                                     23 ; absolute external ram data
                                     24 ;--------------------------------------------------------
                                     25 	.area DABS (ABS)
                                     26 
                                     27 ; default segment ordering for linker
                                     28 	.area HOME
                                     29 	.area GSINIT
                                     30 	.area GSFINAL
                                     31 	.area CONST
                                     32 	.area INITIALIZER
                                     33 	.area CODE
                                     34 
                                     35 ;--------------------------------------------------------
                                     36 ; global & static initialisations
                                     37 ;--------------------------------------------------------
                                     38 	.area HOME
                                     39 	.area GSINIT
                                     40 	.area GSFINAL
                                     41 	.area GSINIT
                                     42 ;--------------------------------------------------------
                                     43 ; Home
                                     44 ;--------------------------------------------------------
                                     45 	.area HOME
                                     46 	.area HOME
                                     47 ;--------------------------------------------------------
                                     48 ; code
                                     49 ;--------------------------------------------------------
                                     50 	.area CODE
                                     51 ;	../calloc.c: 44: void *calloc (size_t nmemb, size_t size)
                                     52 ;	-----------------------------------------
                                     53 ;	 function calloc
                                     54 ;	-----------------------------------------
      000000                         55 _calloc:
      000000 52 06            [ 2]   56 	sub	sp, #6
                                     57 ;	../calloc.c: 49: unsigned long msize = (unsigned long)nmemb * (unsigned long)size;
      000002 1E 09            [ 2]   58 	ldw	x, (0x09, sp)
      000004 16 0B            [ 2]   59 	ldw	y, (0x0b, sp)
      000006 90 89            [ 2]   60 	pushw	y
      000008 89               [ 2]   61 	pushw	x
      000009 CDr00r00         [ 4]   62 	call	___muluint2ulong
      00000C 5B 04            [ 2]   63 	addw	sp, #4
      00000E 1F 05            [ 2]   64 	ldw	(0x05, sp), x
                                     65 ;	../calloc.c: 54: if (msize > SIZE_MAX)
      000010 17 03            [ 2]   66 	ldw	(0x03, sp), y
      000012 93               [ 1]   67 	ldw	x, y
      000013 27 03            [ 1]   68 	jreq	00102$
                                     69 ;	../calloc.c: 55: return(0);
      000015 5F               [ 1]   70 	clrw	x
      000016 20 22            [ 2]   71 	jra	00105$
      000018                         72 00102$:
                                     73 ;	../calloc.c: 57: if (ptr = malloc(msize))
      000018 16 05            [ 2]   74 	ldw	y, (0x05, sp)
      00001A 17 01            [ 2]   75 	ldw	(0x01, sp), y
      00001C 93               [ 1]   76 	ldw	x, y
      00001D 89               [ 2]   77 	pushw	x
      00001E CDr00r00         [ 4]   78 	call	_malloc
      000021 5B 02            [ 2]   79 	addw	sp, #2
      000023 1F 03            [ 2]   80 	ldw	(0x03, sp), x
      000025 1F 05            [ 2]   81 	ldw	(0x05, sp), x
      000027 1E 03            [ 2]   82 	ldw	x, (0x03, sp)
      000029 27 0D            [ 1]   83 	jreq	00104$
                                     84 ;	../calloc.c: 58: memset(ptr, 0, msize);
      00002B 1E 01            [ 2]   85 	ldw	x, (0x01, sp)
      00002D 89               [ 2]   86 	pushw	x
      00002E 5F               [ 1]   87 	clrw	x
      00002F 89               [ 2]   88 	pushw	x
      000030 1E 09            [ 2]   89 	ldw	x, (0x09, sp)
      000032 89               [ 2]   90 	pushw	x
      000033 CDr00r00         [ 4]   91 	call	_memset
      000036 5B 06            [ 2]   92 	addw	sp, #6
      000038                         93 00104$:
                                     94 ;	../calloc.c: 60: return(ptr);
      000038 1E 05            [ 2]   95 	ldw	x, (0x05, sp)
      00003A                         96 00105$:
                                     97 ;	../calloc.c: 61: }
      00003A 5B 06            [ 2]   98 	addw	sp, #6
      00003C 81               [ 4]   99 	ret
                                    100 	.area CODE
                                    101 	.area CONST
                                    102 	.area INITIALIZER
                                    103 	.area CABS (ABS)
