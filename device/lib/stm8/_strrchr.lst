                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.9.3 #11345 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _strrchr
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _strrchr
                                     12 ;--------------------------------------------------------
                                     13 ; ram data
                                     14 ;--------------------------------------------------------
                                     15 	.area DATA
                                     16 ;--------------------------------------------------------
                                     17 ; ram data
                                     18 ;--------------------------------------------------------
                                     19 	.area INITIALIZED
                                     20 ;--------------------------------------------------------
                                     21 ; absolute external ram data
                                     22 ;--------------------------------------------------------
                                     23 	.area DABS (ABS)
                                     24 
                                     25 ; default segment ordering for linker
                                     26 	.area HOME
                                     27 	.area GSINIT
                                     28 	.area GSFINAL
                                     29 	.area CONST
                                     30 	.area INITIALIZER
                                     31 	.area CODE
                                     32 
                                     33 ;--------------------------------------------------------
                                     34 ; global & static initialisations
                                     35 ;--------------------------------------------------------
                                     36 	.area HOME
                                     37 	.area GSINIT
                                     38 	.area GSFINAL
                                     39 	.area GSINIT
                                     40 ;--------------------------------------------------------
                                     41 ; Home
                                     42 ;--------------------------------------------------------
                                     43 	.area HOME
                                     44 	.area HOME
                                     45 ;--------------------------------------------------------
                                     46 ; code
                                     47 ;--------------------------------------------------------
                                     48 	.area CODE
                                     49 ;	../_strrchr.c: 34: char * strrchr ( const char * string, int ch )
                                     50 ;	-----------------------------------------
                                     51 ;	 function strrchr
                                     52 ;	-----------------------------------------
      000000                         53 _strrchr:
      000000 52 02            [ 2]   54 	sub	sp, #2
                                     55 ;	../_strrchr.c: 37: const char * start = string;
      000002 16 05            [ 2]   56 	ldw	y, (0x05, sp)
                                     57 ;	../_strrchr.c: 39: while (*string++)                       /* find end of string */
      000004 93               [ 1]   58 	ldw	x, y
      000005                         59 00101$:
      000005 F6               [ 1]   60 	ld	a, (x)
      000006 5C               [ 1]   61 	incw	x
      000007 4D               [ 1]   62 	tnz	a
      000008 26 FB            [ 1]   63 	jrne	00101$
                                     64 ;	../_strrchr.c: 42: while (--string != start && *string != ch)
      00000A 1F 01            [ 2]   65 	ldw	(0x01, sp), x
      00000C                         66 00105$:
      00000C 1E 01            [ 2]   67 	ldw	x, (0x01, sp)
      00000E 5A               [ 2]   68 	decw	x
      00000F 1F 01            [ 2]   69 	ldw	(0x01, sp), x
      000011 F6               [ 1]   70 	ld	a, (x)
      000012 5F               [ 1]   71 	clrw	x
      000013 97               [ 1]   72 	ld	xl, a
      000014 13 07            [ 2]   73 	cpw	x, (0x07, sp)
      000016 26 03            [ 1]   74 	jrne	00140$
      000018 A6 01            [ 1]   75 	ld	a, #0x01
      00001A 21                      76 	.byte 0x21
      00001B                         77 00140$:
      00001B 4F               [ 1]   78 	clr	a
      00001C                         79 00141$:
      00001C 93               [ 1]   80 	ldw	x, y
      00001D 13 01            [ 2]   81 	cpw	x, (0x01, sp)
      00001F 27 03            [ 1]   82 	jreq	00107$
      000021 4D               [ 1]   83 	tnz	a
      000022 27 E8            [ 1]   84 	jreq	00105$
      000024                         85 00107$:
                                     86 ;	../_strrchr.c: 45: if (*string == ch)                      /* char found ? */
      000024 4D               [ 1]   87 	tnz	a
      000025 27 03            [ 1]   88 	jreq	00109$
                                     89 ;	../_strrchr.c: 46: return( (char *)string );
      000027 1E 01            [ 2]   90 	ldw	x, (0x01, sp)
                                     91 ;	../_strrchr.c: 48: return (NULL) ;
      000029 21                      92 	.byte 0x21
      00002A                         93 00109$:
      00002A 5F               [ 1]   94 	clrw	x
      00002B                         95 00110$:
                                     96 ;	../_strrchr.c: 49: }
      00002B 5B 02            [ 2]   97 	addw	sp, #2
      00002D 81               [ 4]   98 	ret
                                     99 	.area CODE
                                    100 	.area CONST
                                    101 	.area INITIALIZER
                                    102 	.area CABS (ABS)
