                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.9.3 #11345 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module atan2f
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _fabsf
                                     12 	.globl _atanf
                                     13 	.globl _atan2f
                                     14 ;--------------------------------------------------------
                                     15 ; ram data
                                     16 ;--------------------------------------------------------
                                     17 	.area DATA
                                     18 ;--------------------------------------------------------
                                     19 ; ram data
                                     20 ;--------------------------------------------------------
                                     21 	.area INITIALIZED
                                     22 ;--------------------------------------------------------
                                     23 ; absolute external ram data
                                     24 ;--------------------------------------------------------
                                     25 	.area DABS (ABS)
                                     26 
                                     27 ; default segment ordering for linker
                                     28 	.area HOME
                                     29 	.area GSINIT
                                     30 	.area GSFINAL
                                     31 	.area CONST
                                     32 	.area INITIALIZER
                                     33 	.area CODE
                                     34 
                                     35 ;--------------------------------------------------------
                                     36 ; global & static initialisations
                                     37 ;--------------------------------------------------------
                                     38 	.area HOME
                                     39 	.area GSINIT
                                     40 	.area GSFINAL
                                     41 	.area GSINIT
                                     42 ;--------------------------------------------------------
                                     43 ; Home
                                     44 ;--------------------------------------------------------
                                     45 	.area HOME
                                     46 	.area HOME
                                     47 ;--------------------------------------------------------
                                     48 ; code
                                     49 ;--------------------------------------------------------
                                     50 	.area CODE
                                     51 ;	../atan2f.c: 34: float atan2f(float x, float y)
                                     52 ;	-----------------------------------------
                                     53 ;	 function atan2f
                                     54 ;	-----------------------------------------
      000000                         55 _atan2f:
      000000 52 0A            [ 2]   56 	sub	sp, #10
                                     57 ;	../atan2f.c: 38: if ((x==0.0) && (y==0.0))
      000002 1E 0F            [ 2]   58 	ldw	x, (0x0f, sp)
      000004 26 1A            [ 1]   59 	jrne	00102$
      000006 1E 0D            [ 2]   60 	ldw	x, (0x0d, sp)
      000008 58               [ 2]   61 	sllw	x
      000009 26 15            [ 1]   62 	jrne	00102$
      00000B 1E 13            [ 2]   63 	ldw	x, (0x13, sp)
      00000D 26 11            [ 1]   64 	jrne	00102$
      00000F 1E 11            [ 2]   65 	ldw	x, (0x11, sp)
      000011 58               [ 2]   66 	sllw	x
      000012 26 0C            [ 1]   67 	jrne	00102$
                                     68 ;	../atan2f.c: 40: errno=EDOM;
      000014 AE 00 21         [ 2]   69 	ldw	x, #0x0021
      000017 CFu00u00         [ 2]   70 	ldw	_errno+0, x
                                     71 ;	../atan2f.c: 41: return 0.0;
      00001A 5F               [ 1]   72 	clrw	x
      00001B 90 5F            [ 1]   73 	clrw	y
      00001D CCr01r1E         [ 2]   74 	jp	00109$
      000020                         75 00102$:
                                     76 ;	../atan2f.c: 44: if(fabsf(y)>=fabsf(x))
      000020 1E 13            [ 2]   77 	ldw	x, (0x13, sp)
      000022 89               [ 2]   78 	pushw	x
      000023 1E 13            [ 2]   79 	ldw	x, (0x13, sp)
      000025 89               [ 2]   80 	pushw	x
      000026 CDr00r00         [ 4]   81 	call	_fabsf
      000029 5B 04            [ 2]   82 	addw	sp, #4
      00002B 1F 04            [ 2]   83 	ldw	(0x04, sp), x
      00002D 17 02            [ 2]   84 	ldw	(0x02, sp), y
      00002F 1E 0F            [ 2]   85 	ldw	x, (0x0f, sp)
      000031 89               [ 2]   86 	pushw	x
      000032 1E 0F            [ 2]   87 	ldw	x, (0x0f, sp)
      000034 89               [ 2]   88 	pushw	x
      000035 CDr00r00         [ 4]   89 	call	_fabsf
      000038 5B 04            [ 2]   90 	addw	sp, #4
      00003A 1F 08            [ 2]   91 	ldw	(0x08, sp), x
      00003C 17 06            [ 2]   92 	ldw	(0x06, sp), y
                                     93 ;	../atan2f.c: 47: if(y<0.0) r+=(x>=0?PI:-PI);
      00003E 5F               [ 1]   94 	clrw	x
      00003F 89               [ 2]   95 	pushw	x
      000040 5F               [ 1]   96 	clrw	x
      000041 89               [ 2]   97 	pushw	x
      000042 1E 13            [ 2]   98 	ldw	x, (0x13, sp)
      000044 89               [ 2]   99 	pushw	x
      000045 1E 13            [ 2]  100 	ldw	x, (0x13, sp)
      000047 89               [ 2]  101 	pushw	x
                                    102 ;	../atan2f.c: 44: if(fabsf(y)>=fabsf(x))
      000048 CDr00r00         [ 4]  103 	call	___fslt
      00004B 5B 08            [ 2]  104 	addw	sp, #8
      00004D 6B 0A            [ 1]  105 	ld	(0x0a, sp), a
      00004F 1E 08            [ 2]  106 	ldw	x, (0x08, sp)
      000051 89               [ 2]  107 	pushw	x
      000052 1E 08            [ 2]  108 	ldw	x, (0x08, sp)
      000054 89               [ 2]  109 	pushw	x
      000055 1E 08            [ 2]  110 	ldw	x, (0x08, sp)
      000057 89               [ 2]  111 	pushw	x
      000058 1E 08            [ 2]  112 	ldw	x, (0x08, sp)
      00005A 89               [ 2]  113 	pushw	x
      00005B CDr00r00         [ 4]  114 	call	___fslt
      00005E 5B 08            [ 2]  115 	addw	sp, #8
      000060 6B 09            [ 1]  116 	ld	(0x09, sp), a
      000062 26 63            [ 1]  117 	jrne	00107$
                                    118 ;	../atan2f.c: 46: r=atanf(x/y);
      000064 1E 13            [ 2]  119 	ldw	x, (0x13, sp)
      000066 89               [ 2]  120 	pushw	x
      000067 1E 13            [ 2]  121 	ldw	x, (0x13, sp)
      000069 89               [ 2]  122 	pushw	x
      00006A 1E 13            [ 2]  123 	ldw	x, (0x13, sp)
      00006C 89               [ 2]  124 	pushw	x
      00006D 1E 13            [ 2]  125 	ldw	x, (0x13, sp)
      00006F 89               [ 2]  126 	pushw	x
      000070 CDr00r00         [ 4]  127 	call	___fsdiv
      000073 5B 08            [ 2]  128 	addw	sp, #8
      000075 89               [ 2]  129 	pushw	x
      000076 90 89            [ 2]  130 	pushw	y
      000078 CDr00r00         [ 4]  131 	call	_atanf
      00007B 5B 04            [ 2]  132 	addw	sp, #4
      00007D 1F 08            [ 2]  133 	ldw	(0x08, sp), x
      00007F 17 06            [ 2]  134 	ldw	(0x06, sp), y
                                    135 ;	../atan2f.c: 47: if(y<0.0) r+=(x>=0?PI:-PI);
      000081 5F               [ 1]  136 	clrw	x
      000082 89               [ 2]  137 	pushw	x
      000083 5F               [ 1]  138 	clrw	x
      000084 89               [ 2]  139 	pushw	x
      000085 1E 17            [ 2]  140 	ldw	x, (0x17, sp)
      000087 89               [ 2]  141 	pushw	x
      000088 1E 17            [ 2]  142 	ldw	x, (0x17, sp)
      00008A 89               [ 2]  143 	pushw	x
      00008B CDr00r00         [ 4]  144 	call	___fslt
      00008E 5B 08            [ 2]  145 	addw	sp, #8
      000090 4D               [ 1]  146 	tnz	a
      000091 26 03            [ 1]  147 	jrne	00150$
      000093 CCr01r1A         [ 2]  148 	jp	00108$
      000096                        149 00150$:
      000096 0D 0A            [ 1]  150 	tnz	(0x0a, sp)
      000098 26 0C            [ 1]  151 	jrne	00111$
      00009A AE 0F DB         [ 2]  152 	ldw	x, #0x0fdb
      00009D 1F 04            [ 2]  153 	ldw	(0x04, sp), x
      00009F AE 40 49         [ 2]  154 	ldw	x, #0x4049
      0000A2 1F 02            [ 2]  155 	ldw	(0x02, sp), x
      0000A4 20 0A            [ 2]  156 	jra	00112$
      0000A6                        157 00111$:
      0000A6 AE 0F DB         [ 2]  158 	ldw	x, #0x0fdb
      0000A9 1F 04            [ 2]  159 	ldw	(0x04, sp), x
      0000AB AE C0 49         [ 2]  160 	ldw	x, #0xc049
      0000AE 1F 02            [ 2]  161 	ldw	(0x02, sp), x
      0000B0                        162 00112$:
      0000B0 1E 04            [ 2]  163 	ldw	x, (0x04, sp)
      0000B2 89               [ 2]  164 	pushw	x
      0000B3 1E 04            [ 2]  165 	ldw	x, (0x04, sp)
      0000B5 89               [ 2]  166 	pushw	x
      0000B6 1E 0C            [ 2]  167 	ldw	x, (0x0c, sp)
      0000B8 89               [ 2]  168 	pushw	x
      0000B9 1E 0C            [ 2]  169 	ldw	x, (0x0c, sp)
      0000BB 89               [ 2]  170 	pushw	x
      0000BC CDr00r00         [ 4]  171 	call	___fsadd
      0000BF 5B 08            [ 2]  172 	addw	sp, #8
      0000C1 1F 08            [ 2]  173 	ldw	(0x08, sp), x
      0000C3 17 06            [ 2]  174 	ldw	(0x06, sp), y
      0000C5 20 53            [ 2]  175 	jra	00108$
      0000C7                        176 00107$:
                                    177 ;	../atan2f.c: 51: r=-atanf(y/x);
      0000C7 1E 0F            [ 2]  178 	ldw	x, (0x0f, sp)
      0000C9 89               [ 2]  179 	pushw	x
      0000CA 1E 0F            [ 2]  180 	ldw	x, (0x0f, sp)
      0000CC 89               [ 2]  181 	pushw	x
      0000CD 1E 17            [ 2]  182 	ldw	x, (0x17, sp)
      0000CF 89               [ 2]  183 	pushw	x
      0000D0 1E 17            [ 2]  184 	ldw	x, (0x17, sp)
      0000D2 89               [ 2]  185 	pushw	x
      0000D3 CDr00r00         [ 4]  186 	call	___fsdiv
      0000D6 5B 08            [ 2]  187 	addw	sp, #8
      0000D8 89               [ 2]  188 	pushw	x
      0000D9 90 89            [ 2]  189 	pushw	y
      0000DB CDr00r00         [ 4]  190 	call	_atanf
      0000DE 5B 04            [ 2]  191 	addw	sp, #4
      0000E0 51               [ 1]  192 	exgw	x, y
      0000E1 58               [ 2]  193 	sllw	x
      0000E2 8C               [ 1]  194 	ccf
      0000E3 56               [ 2]  195 	rrcw	x
      0000E4 17 08            [ 2]  196 	ldw	(0x08, sp), y
      0000E6 1F 06            [ 2]  197 	ldw	(0x06, sp), x
                                    198 ;	../atan2f.c: 52: r+=(x<0.0?-HALF_PI:HALF_PI);
      0000E8 7B 0A            [ 1]  199 	ld	a, (0x0a, sp)
      0000EA 27 0A            [ 1]  200 	jreq	00113$
      0000EC AE 0F DB         [ 2]  201 	ldw	x, #0x0fdb
      0000EF 1F 04            [ 2]  202 	ldw	(0x04, sp), x
      0000F1 AE BF C9         [ 2]  203 	ldw	x, #0xbfc9
      0000F4 20 08            [ 2]  204 	jra	00114$
      0000F6                        205 00113$:
      0000F6 AE 0F DB         [ 2]  206 	ldw	x, #0x0fdb
      0000F9 1F 04            [ 2]  207 	ldw	(0x04, sp), x
      0000FB AE 3F C9         [ 2]  208 	ldw	x, #0x3fc9
      0000FE                        209 00114$:
      0000FE 16 04            [ 2]  210 	ldw	y, (0x04, sp)
      000100 90 89            [ 2]  211 	pushw	y
      000102 89               [ 2]  212 	pushw	x
      000103 1E 0C            [ 2]  213 	ldw	x, (0x0c, sp)
      000105 89               [ 2]  214 	pushw	x
      000106 1E 0C            [ 2]  215 	ldw	x, (0x0c, sp)
      000108 89               [ 2]  216 	pushw	x
      000109 CDr00r00         [ 4]  217 	call	___fsadd
      00010C 5B 08            [ 2]  218 	addw	sp, #8
      00010E 1F 03            [ 2]  219 	ldw	(0x03, sp), x
      000110 17 01            [ 2]  220 	ldw	(0x01, sp), y
      000112 16 03            [ 2]  221 	ldw	y, (0x03, sp)
      000114 17 08            [ 2]  222 	ldw	(0x08, sp), y
      000116 16 01            [ 2]  223 	ldw	y, (0x01, sp)
      000118 17 06            [ 2]  224 	ldw	(0x06, sp), y
      00011A                        225 00108$:
                                    226 ;	../atan2f.c: 54: return r;
      00011A 1E 08            [ 2]  227 	ldw	x, (0x08, sp)
      00011C 16 06            [ 2]  228 	ldw	y, (0x06, sp)
      00011E                        229 00109$:
                                    230 ;	../atan2f.c: 55: }
      00011E 5B 0A            [ 2]  231 	addw	sp, #10
      000120 81               [ 4]  232 	ret
                                    233 	.area CODE
                                    234 	.area CONST
                                    235 	.area INITIALIZER
                                    236 	.area CABS (ABS)
