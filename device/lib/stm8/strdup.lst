                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.9.3 #11345 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module strdup
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _malloc
                                     12 	.globl _strlen
                                     13 	.globl _strcpy
                                     14 	.globl _strdup
                                     15 ;--------------------------------------------------------
                                     16 ; ram data
                                     17 ;--------------------------------------------------------
                                     18 	.area DATA
                                     19 ;--------------------------------------------------------
                                     20 ; ram data
                                     21 ;--------------------------------------------------------
                                     22 	.area INITIALIZED
                                     23 ;--------------------------------------------------------
                                     24 ; absolute external ram data
                                     25 ;--------------------------------------------------------
                                     26 	.area DABS (ABS)
                                     27 
                                     28 ; default segment ordering for linker
                                     29 	.area HOME
                                     30 	.area GSINIT
                                     31 	.area GSFINAL
                                     32 	.area CONST
                                     33 	.area INITIALIZER
                                     34 	.area CODE
                                     35 
                                     36 ;--------------------------------------------------------
                                     37 ; global & static initialisations
                                     38 ;--------------------------------------------------------
                                     39 	.area HOME
                                     40 	.area GSINIT
                                     41 	.area GSFINAL
                                     42 	.area GSINIT
                                     43 ;--------------------------------------------------------
                                     44 ; Home
                                     45 ;--------------------------------------------------------
                                     46 	.area HOME
                                     47 	.area HOME
                                     48 ;--------------------------------------------------------
                                     49 ; code
                                     50 ;--------------------------------------------------------
                                     51 	.area CODE
                                     52 ;	../strdup.c: 33: char *strdup (const char *s)
                                     53 ;	-----------------------------------------
                                     54 ;	 function strdup
                                     55 ;	-----------------------------------------
      000000                         56 _strdup:
                                     57 ;	../strdup.c: 35: char *r = malloc(strlen(s) + 1);
      000000 1E 03            [ 2]   58 	ldw	x, (0x03, sp)
      000002 89               [ 2]   59 	pushw	x
      000003 CDr00r00         [ 4]   60 	call	_strlen
      000006 5B 02            [ 2]   61 	addw	sp, #2
      000008 5C               [ 1]   62 	incw	x
      000009 89               [ 2]   63 	pushw	x
      00000A CDr00r00         [ 4]   64 	call	_malloc
      00000D 5B 02            [ 2]   65 	addw	sp, #2
                                     66 ;	../strdup.c: 36: if (r)
      00000F 5D               [ 2]   67 	tnzw	x
      000010 26 01            [ 1]   68 	jrne	00110$
      000012 81               [ 4]   69 	ret
      000013                         70 00110$:
                                     71 ;	../strdup.c: 37: strcpy(r, s);
      000013 89               [ 2]   72 	pushw	x
      000014 16 05            [ 2]   73 	ldw	y, (0x05, sp)
      000016 90 89            [ 2]   74 	pushw	y
      000018 89               [ 2]   75 	pushw	x
      000019 CDr00r00         [ 4]   76 	call	_strcpy
      00001C 5B 04            [ 2]   77 	addw	sp, #4
      00001E 85               [ 2]   78 	popw	x
                                     79 ;	../strdup.c: 38: return (r);
                                     80 ;	../strdup.c: 39: }
      00001F 81               [ 4]   81 	ret
                                     82 	.area CODE
                                     83 	.area CONST
                                     84 	.area INITIALIZER
                                     85 	.area CABS (ABS)
