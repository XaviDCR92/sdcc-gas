                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.9.3 #11345 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module ceilf
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _ceilf
                                     12 ;--------------------------------------------------------
                                     13 ; ram data
                                     14 ;--------------------------------------------------------
                                     15 	.area DATA
                                     16 ;--------------------------------------------------------
                                     17 ; ram data
                                     18 ;--------------------------------------------------------
                                     19 	.area INITIALIZED
                                     20 ;--------------------------------------------------------
                                     21 ; absolute external ram data
                                     22 ;--------------------------------------------------------
                                     23 	.area DABS (ABS)
                                     24 
                                     25 ; default segment ordering for linker
                                     26 	.area HOME
                                     27 	.area GSINIT
                                     28 	.area GSFINAL
                                     29 	.area CONST
                                     30 	.area INITIALIZER
                                     31 	.area CODE
                                     32 
                                     33 ;--------------------------------------------------------
                                     34 ; global & static initialisations
                                     35 ;--------------------------------------------------------
                                     36 	.area HOME
                                     37 	.area GSINIT
                                     38 	.area GSFINAL
                                     39 	.area GSINIT
                                     40 ;--------------------------------------------------------
                                     41 ; Home
                                     42 ;--------------------------------------------------------
                                     43 	.area HOME
                                     44 	.area HOME
                                     45 ;--------------------------------------------------------
                                     46 ; code
                                     47 ;--------------------------------------------------------
                                     48 	.area CODE
                                     49 ;	../ceilf.c: 33: float ceilf(float x) _FLOAT_FUNC_REENTRANT
                                     50 ;	-----------------------------------------
                                     51 ;	 function ceilf
                                     52 ;	-----------------------------------------
      000000                         53 _ceilf:
      000000 52 08            [ 2]   54 	sub	sp, #8
                                     55 ;	../ceilf.c: 36: r=x;
      000002 1E 0D            [ 2]   56 	ldw	x, (0x0d, sp)
      000004 89               [ 2]   57 	pushw	x
      000005 1E 0D            [ 2]   58 	ldw	x, (0x0d, sp)
      000007 89               [ 2]   59 	pushw	x
      000008 CDr00r00         [ 4]   60 	call	___fs2slong
      00000B 5B 04            [ 2]   61 	addw	sp, #4
      00000D 1F 03            [ 2]   62 	ldw	(0x03, sp), x
      00000F 17 01            [ 2]   63 	ldw	(0x01, sp), y
                                     64 ;	../ceilf.c: 38: return r;
      000011 1E 03            [ 2]   65 	ldw	x, (0x03, sp)
      000013 89               [ 2]   66 	pushw	x
      000014 1E 03            [ 2]   67 	ldw	x, (0x03, sp)
      000016 89               [ 2]   68 	pushw	x
      000017 CDr00r00         [ 4]   69 	call	___slong2fs
      00001A 5B 04            [ 2]   70 	addw	sp, #4
      00001C 1F 07            [ 2]   71 	ldw	(0x07, sp), x
      00001E 17 05            [ 2]   72 	ldw	(0x05, sp), y
                                     73 ;	../ceilf.c: 37: if (r<0)
      000020 0D 01            [ 1]   74 	tnz	(0x01, sp)
      000022 2A 06            [ 1]   75 	jrpl	00102$
                                     76 ;	../ceilf.c: 38: return r;
      000024 1E 07            [ 2]   77 	ldw	x, (0x07, sp)
      000026 16 05            [ 2]   78 	ldw	y, (0x05, sp)
      000028 20 39            [ 2]   79 	jra	00104$
      00002A                         80 00102$:
                                     81 ;	../ceilf.c: 40: return (r+((r<x)?1:0));
      00002A 1E 0D            [ 2]   82 	ldw	x, (0x0d, sp)
      00002C 89               [ 2]   83 	pushw	x
      00002D 1E 0D            [ 2]   84 	ldw	x, (0x0d, sp)
      00002F 89               [ 2]   85 	pushw	x
      000030 1E 0B            [ 2]   86 	ldw	x, (0x0b, sp)
      000032 89               [ 2]   87 	pushw	x
      000033 1E 0B            [ 2]   88 	ldw	x, (0x0b, sp)
      000035 89               [ 2]   89 	pushw	x
      000036 CDr00r00         [ 4]   90 	call	___fslt
      000039 5B 08            [ 2]   91 	addw	sp, #8
      00003B 4D               [ 1]   92 	tnz	a
      00003C 27 03            [ 1]   93 	jreq	00106$
      00003E 5F               [ 1]   94 	clrw	x
      00003F 5C               [ 1]   95 	incw	x
      000040 21                      96 	.byte 0x21
      000041                         97 00106$:
      000041 5F               [ 1]   98 	clrw	x
      000042                         99 00107$:
      000042 51               [ 1]  100 	exgw	x, y
      000043 5F               [ 1]  101 	clrw	x
      000044 90 5D            [ 2]  102 	tnzw	y
      000046 2A 01            [ 1]  103 	jrpl	00120$
      000048 5A               [ 2]  104 	decw	x
      000049                        105 00120$:
      000049 72 F9 03         [ 2]  106 	addw	y, (0x03, sp)
      00004C 9F               [ 1]  107 	ld	a, xl
      00004D 19 02            [ 1]  108 	adc	a, (0x02, sp)
      00004F 02               [ 1]  109 	rlwa	x
      000050 19 01            [ 1]  110 	adc	a, (0x01, sp)
      000052 95               [ 1]  111 	ld	xh, a
      000053 90 89            [ 2]  112 	pushw	y
      000055 89               [ 2]  113 	pushw	x
      000056 CDr00r00         [ 4]  114 	call	___slong2fs
      000059 5B 04            [ 2]  115 	addw	sp, #4
      00005B 1F 07            [ 2]  116 	ldw	(0x07, sp), x
      00005D 17 05            [ 2]  117 	ldw	(0x05, sp), y
      00005F 1E 07            [ 2]  118 	ldw	x, (0x07, sp)
      000061 16 05            [ 2]  119 	ldw	y, (0x05, sp)
      000063                        120 00104$:
                                    121 ;	../ceilf.c: 41: }
      000063 5B 08            [ 2]  122 	addw	sp, #8
      000065 81               [ 4]  123 	ret
                                    124 	.area CODE
                                    125 	.area CONST
                                    126 	.area INITIALIZER
                                    127 	.area CABS (ABS)
