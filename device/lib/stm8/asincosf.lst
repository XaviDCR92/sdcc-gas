                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.9.3 #11345 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module asincosf
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _asincosf
                                     12 	.globl _ldexpf
                                     13 	.globl _fabsf
                                     14 	.globl _sqrtf
                                     15 ;--------------------------------------------------------
                                     16 ; ram data
                                     17 ;--------------------------------------------------------
                                     18 	.area DATA
                                     19 ;--------------------------------------------------------
                                     20 ; ram data
                                     21 ;--------------------------------------------------------
                                     22 	.area INITIALIZED
                                     23 ;--------------------------------------------------------
                                     24 ; absolute external ram data
                                     25 ;--------------------------------------------------------
                                     26 	.area DABS (ABS)
                                     27 
                                     28 ; default segment ordering for linker
                                     29 	.area HOME
                                     30 	.area GSINIT
                                     31 	.area GSFINAL
                                     32 	.area CONST
                                     33 	.area INITIALIZER
                                     34 	.area CODE
                                     35 
                                     36 ;--------------------------------------------------------
                                     37 ; global & static initialisations
                                     38 ;--------------------------------------------------------
                                     39 	.area HOME
                                     40 	.area GSINIT
                                     41 	.area GSFINAL
                                     42 	.area GSINIT
                                     43 ;--------------------------------------------------------
                                     44 ; Home
                                     45 ;--------------------------------------------------------
                                     46 	.area HOME
                                     47 	.area HOME
                                     48 ;--------------------------------------------------------
                                     49 ; code
                                     50 ;--------------------------------------------------------
                                     51 	.area CODE
                                     52 ;	../asincosf.c: 47: float asincosf(float x, bool isacos)
                                     53 ;	-----------------------------------------
                                     54 ;	 function asincosf
                                     55 ;	-----------------------------------------
      000000                         56 _asincosf:
      000000 52 11            [ 2]   57 	sub	sp, #17
                                     58 ;	../asincosf.c: 51: bool quartPI = isacos;
      000002 7B 18            [ 1]   59 	ld	a, (0x18, sp)
      000004 6B 11            [ 1]   60 	ld	(0x11, sp), a
                                     61 ;	../asincosf.c: 56: y = fabsf(x);
      000006 1E 16            [ 2]   62 	ldw	x, (0x16, sp)
      000008 89               [ 2]   63 	pushw	x
      000009 1E 16            [ 2]   64 	ldw	x, (0x16, sp)
      00000B 89               [ 2]   65 	pushw	x
      00000C CDr00r00         [ 4]   66 	call	_fabsf
      00000F 5B 04            [ 2]   67 	addw	sp, #4
      000011 1F 03            [ 2]   68 	ldw	(0x03, sp), x
      000013 17 01            [ 2]   69 	ldw	(0x01, sp), y
                                     70 ;	../asincosf.c: 57: if (y < EPS)
      000015 5F               [ 1]   71 	clrw	x
      000016 89               [ 2]   72 	pushw	x
      000017 4B 80            [ 1]   73 	push	#0x80
      000019 4B 39            [ 1]   74 	push	#0x39
      00001B 1E 07            [ 2]   75 	ldw	x, (0x07, sp)
      00001D 89               [ 2]   76 	pushw	x
      00001E 1E 07            [ 2]   77 	ldw	x, (0x07, sp)
      000020 89               [ 2]   78 	pushw	x
      000021 CDr00r00         [ 4]   79 	call	___fslt
      000024 5B 08            [ 2]   80 	addw	sp, #8
      000026 6B 10            [ 1]   81 	ld	(0x10, sp), a
      000028 27 0B            [ 1]   82 	jreq	00107$
                                     83 ;	../asincosf.c: 59: r = y;
      00002A 16 03            [ 2]   84 	ldw	y, (0x03, sp)
      00002C 17 0F            [ 2]   85 	ldw	(0x0f, sp), y
      00002E 16 01            [ 2]   86 	ldw	y, (0x01, sp)
      000030 17 0D            [ 2]   87 	ldw	(0x0d, sp), y
      000032 CCr01r64         [ 2]   88 	jp	00108$
      000035                         89 00107$:
                                     90 ;	../asincosf.c: 63: if (y > 0.5)
      000035 1E 03            [ 2]   91 	ldw	x, (0x03, sp)
      000037 89               [ 2]   92 	pushw	x
      000038 1E 03            [ 2]   93 	ldw	x, (0x03, sp)
      00003A 89               [ 2]   94 	pushw	x
      00003B 5F               [ 1]   95 	clrw	x
      00003C 89               [ 2]   96 	pushw	x
      00003D 4B 00            [ 1]   97 	push	#0x00
      00003F 4B 3F            [ 1]   98 	push	#0x3f
      000041 CDr00r00         [ 4]   99 	call	___fslt
      000044 5B 08            [ 2]  100 	addw	sp, #8
      000046 4D               [ 1]  101 	tnz	a
      000047 27 6A            [ 1]  102 	jreq	00104$
                                    103 ;	../asincosf.c: 65: quartPI = !isacos;
      000049 7B 11            [ 1]  104 	ld	a, (0x11, sp)
      00004B A0 01            [ 1]  105 	sub	a, #0x01
      00004D 4F               [ 1]  106 	clr	a
      00004E 49               [ 1]  107 	rlc	a
      00004F 6B 11            [ 1]  108 	ld	(0x11, sp), a
                                    109 ;	../asincosf.c: 66: if (y > 1.0)
      000051 1E 03            [ 2]  110 	ldw	x, (0x03, sp)
      000053 89               [ 2]  111 	pushw	x
      000054 1E 03            [ 2]  112 	ldw	x, (0x03, sp)
      000056 89               [ 2]  113 	pushw	x
      000057 5F               [ 1]  114 	clrw	x
      000058 89               [ 2]  115 	pushw	x
      000059 4B 80            [ 1]  116 	push	#0x80
      00005B 4B 3F            [ 1]  117 	push	#0x3f
      00005D CDr00r00         [ 4]  118 	call	___fslt
      000060 5B 08            [ 2]  119 	addw	sp, #8
      000062 4D               [ 1]  120 	tnz	a
      000063 27 0C            [ 1]  121 	jreq	00102$
                                    122 ;	../asincosf.c: 68: errno = EDOM;
      000065 AE 00 21         [ 2]  123 	ldw	x, #0x0021
      000068 CFu00u00         [ 2]  124 	ldw	_errno+0, x
                                    125 ;	../asincosf.c: 69: return 0.0;
      00006B 5F               [ 1]  126 	clrw	x
      00006C 90 5F            [ 1]  127 	clrw	y
      00006E CCr02r6B         [ 2]  128 	jp	00117$
      000071                        129 00102$:
                                    130 ;	../asincosf.c: 71: g = (0.5 - y) + 0.5;
      000071 1E 03            [ 2]  131 	ldw	x, (0x03, sp)
      000073 89               [ 2]  132 	pushw	x
      000074 1E 03            [ 2]  133 	ldw	x, (0x03, sp)
      000076 89               [ 2]  134 	pushw	x
      000077 5F               [ 1]  135 	clrw	x
      000078 89               [ 2]  136 	pushw	x
      000079 4B 80            [ 1]  137 	push	#0x80
      00007B 4B 3F            [ 1]  138 	push	#0x3f
      00007D CDr00r00         [ 4]  139 	call	___fssub
      000080 5B 08            [ 2]  140 	addw	sp, #8
                                    141 ;	../asincosf.c: 72: g = ldexpf(g, -1);
      000082 4B FF            [ 1]  142 	push	#0xff
      000084 4B FF            [ 1]  143 	push	#0xff
      000086 89               [ 2]  144 	pushw	x
      000087 90 89            [ 2]  145 	pushw	y
      000089 CDr00r00         [ 4]  146 	call	_ldexpf
      00008C 5B 06            [ 2]  147 	addw	sp, #6
      00008E 1F 07            [ 2]  148 	ldw	(0x07, sp), x
      000090 17 05            [ 2]  149 	ldw	(0x05, sp), y
                                    150 ;	../asincosf.c: 73: y = sqrtf(g);
      000092 1E 07            [ 2]  151 	ldw	x, (0x07, sp)
      000094 89               [ 2]  152 	pushw	x
      000095 1E 07            [ 2]  153 	ldw	x, (0x07, sp)
      000097 89               [ 2]  154 	pushw	x
      000098 CDr00r00         [ 4]  155 	call	_sqrtf
      00009B 5B 04            [ 2]  156 	addw	sp, #4
                                    157 ;	../asincosf.c: 74: y = -(y + y);
      00009D 89               [ 2]  158 	pushw	x
      00009E 90 89            [ 2]  159 	pushw	y
      0000A0 89               [ 2]  160 	pushw	x
      0000A1 90 89            [ 2]  161 	pushw	y
      0000A3 CDr00r00         [ 4]  162 	call	___fsadd
      0000A6 5B 08            [ 2]  163 	addw	sp, #8
      0000A8 90 58            [ 2]  164 	sllw	y
      0000AA 8C               [ 1]  165 	ccf
      0000AB 90 56            [ 2]  166 	rrcw	y
      0000AD 1F 03            [ 2]  167 	ldw	(0x03, sp), x
      0000AF 17 01            [ 2]  168 	ldw	(0x01, sp), y
      0000B1 20 15            [ 2]  169 	jra	00105$
      0000B3                        170 00104$:
                                    171 ;	../asincosf.c: 78: g = y * y;
      0000B3 1E 03            [ 2]  172 	ldw	x, (0x03, sp)
      0000B5 89               [ 2]  173 	pushw	x
      0000B6 1E 03            [ 2]  174 	ldw	x, (0x03, sp)
      0000B8 89               [ 2]  175 	pushw	x
      0000B9 1E 07            [ 2]  176 	ldw	x, (0x07, sp)
      0000BB 89               [ 2]  177 	pushw	x
      0000BC 1E 07            [ 2]  178 	ldw	x, (0x07, sp)
      0000BE 89               [ 2]  179 	pushw	x
      0000BF CDr00r00         [ 4]  180 	call	___fsmul
      0000C2 5B 08            [ 2]  181 	addw	sp, #8
      0000C4 1F 07            [ 2]  182 	ldw	(0x07, sp), x
      0000C6 17 05            [ 2]  183 	ldw	(0x05, sp), y
      0000C8                        184 00105$:
                                    185 ;	../asincosf.c: 80: r = y + y * ((P(g) * g) / Q(g));
      0000C8 1E 07            [ 2]  186 	ldw	x, (0x07, sp)
      0000CA 89               [ 2]  187 	pushw	x
      0000CB 1E 07            [ 2]  188 	ldw	x, (0x07, sp)
      0000CD 89               [ 2]  189 	pushw	x
      0000CE 4B 65            [ 1]  190 	push	#0x65
      0000D0 4B 20            [ 1]  191 	push	#0x20
      0000D2 4B 01            [ 1]  192 	push	#0x01
      0000D4 4B BF            [ 1]  193 	push	#0xbf
      0000D6 CDr00r00         [ 4]  194 	call	___fsmul
      0000D9 5B 08            [ 2]  195 	addw	sp, #8
      0000DB 4B 6B            [ 1]  196 	push	#0x6b
      0000DD 4B 16            [ 1]  197 	push	#0x16
      0000DF 4B 6F            [ 1]  198 	push	#0x6f
      0000E1 4B 3F            [ 1]  199 	push	#0x3f
      0000E3 89               [ 2]  200 	pushw	x
      0000E4 90 89            [ 2]  201 	pushw	y
      0000E6 CDr00r00         [ 4]  202 	call	___fsadd
      0000E9 5B 08            [ 2]  203 	addw	sp, #8
      0000EB 1F 0F            [ 2]  204 	ldw	(0x0f, sp), x
      0000ED 1E 07            [ 2]  205 	ldw	x, (0x07, sp)
      0000EF 89               [ 2]  206 	pushw	x
      0000F0 1E 07            [ 2]  207 	ldw	x, (0x07, sp)
      0000F2 89               [ 2]  208 	pushw	x
      0000F3 1E 13            [ 2]  209 	ldw	x, (0x13, sp)
      0000F5 89               [ 2]  210 	pushw	x
      0000F6 90 89            [ 2]  211 	pushw	y
      0000F8 CDr00r00         [ 4]  212 	call	___fsmul
      0000FB 5B 08            [ 2]  213 	addw	sp, #8
      0000FD 1F 0B            [ 2]  214 	ldw	(0x0b, sp), x
      0000FF 17 09            [ 2]  215 	ldw	(0x09, sp), y
      000101 4B 0B            [ 1]  216 	push	#0x0b
      000103 4B 8D            [ 1]  217 	push	#0x8d
      000105 4B B1            [ 1]  218 	push	#0xb1
      000107 4B C0            [ 1]  219 	push	#0xc0
      000109 1E 0B            [ 2]  220 	ldw	x, (0x0b, sp)
      00010B 89               [ 2]  221 	pushw	x
      00010C 1E 0B            [ 2]  222 	ldw	x, (0x0b, sp)
      00010E 89               [ 2]  223 	pushw	x
      00010F CDr00r00         [ 4]  224 	call	___fsadd
      000112 5B 08            [ 2]  225 	addw	sp, #8
      000114 1F 0F            [ 2]  226 	ldw	(0x0f, sp), x
      000116 1E 07            [ 2]  227 	ldw	x, (0x07, sp)
      000118 89               [ 2]  228 	pushw	x
      000119 1E 07            [ 2]  229 	ldw	x, (0x07, sp)
      00011B 89               [ 2]  230 	pushw	x
      00011C 1E 13            [ 2]  231 	ldw	x, (0x13, sp)
      00011E 89               [ 2]  232 	pushw	x
      00011F 90 89            [ 2]  233 	pushw	y
      000121 CDr00r00         [ 4]  234 	call	___fsmul
      000124 5B 08            [ 2]  235 	addw	sp, #8
      000126 4B F0            [ 1]  236 	push	#0xf0
      000128 4B 50            [ 1]  237 	push	#0x50
      00012A 4B B3            [ 1]  238 	push	#0xb3
      00012C 4B 40            [ 1]  239 	push	#0x40
      00012E 89               [ 2]  240 	pushw	x
      00012F 90 89            [ 2]  241 	pushw	y
      000131 CDr00r00         [ 4]  242 	call	___fsadd
      000134 5B 08            [ 2]  243 	addw	sp, #8
      000136 89               [ 2]  244 	pushw	x
      000137 90 89            [ 2]  245 	pushw	y
      000139 1E 0F            [ 2]  246 	ldw	x, (0x0f, sp)
      00013B 89               [ 2]  247 	pushw	x
      00013C 1E 0F            [ 2]  248 	ldw	x, (0x0f, sp)
      00013E 89               [ 2]  249 	pushw	x
      00013F CDr00r00         [ 4]  250 	call	___fsdiv
      000142 5B 08            [ 2]  251 	addw	sp, #8
      000144 89               [ 2]  252 	pushw	x
      000145 90 89            [ 2]  253 	pushw	y
      000147 1E 07            [ 2]  254 	ldw	x, (0x07, sp)
      000149 89               [ 2]  255 	pushw	x
      00014A 1E 07            [ 2]  256 	ldw	x, (0x07, sp)
      00014C 89               [ 2]  257 	pushw	x
      00014D CDr00r00         [ 4]  258 	call	___fsmul
      000150 5B 08            [ 2]  259 	addw	sp, #8
      000152 89               [ 2]  260 	pushw	x
      000153 90 89            [ 2]  261 	pushw	y
      000155 1E 07            [ 2]  262 	ldw	x, (0x07, sp)
      000157 89               [ 2]  263 	pushw	x
      000158 1E 07            [ 2]  264 	ldw	x, (0x07, sp)
      00015A 89               [ 2]  265 	pushw	x
      00015B CDr00r00         [ 4]  266 	call	___fsadd
      00015E 5B 08            [ 2]  267 	addw	sp, #8
      000160 1F 0F            [ 2]  268 	ldw	(0x0f, sp), x
      000162 17 0D            [ 2]  269 	ldw	(0x0d, sp), y
      000164                        270 00108$:
                                    271 ;	../asincosf.c: 82: i = quartPI;
      000164 7B 11            [ 1]  272 	ld	a, (0x11, sp)
                                    273 ;	../asincosf.c: 85: if (x < 0.0)
      000166 88               [ 1]  274 	push	a
      000167 5F               [ 1]  275 	clrw	x
      000168 89               [ 2]  276 	pushw	x
      000169 5F               [ 1]  277 	clrw	x
      00016A 89               [ 2]  278 	pushw	x
      00016B 1E 1B            [ 2]  279 	ldw	x, (0x1b, sp)
      00016D 89               [ 2]  280 	pushw	x
      00016E 1E 1B            [ 2]  281 	ldw	x, (0x1b, sp)
      000170 89               [ 2]  282 	pushw	x
                                    283 ;	../asincosf.c: 86: r = (b[i] + r) + b[i];
      000171 CDr00r00         [ 4]  284 	call	___fslt
      000174 5B 08            [ 2]  285 	addw	sp, #8
      000176 6B 12            [ 1]  286 	ld	(0x12, sp), a
      000178 84               [ 1]  287 	pop	a
      000179 41               [ 1]  288 	exg	a, xl
      00017A A6 04            [ 1]  289 	ld	a, #0x04
      00017C 41               [ 1]  290 	exg	a, xl
      00017D 42               [ 4]  291 	mul	x, a
      00017E 1F 0B            [ 2]  292 	ldw	(0x0b, sp), x
                                    293 ;	../asincosf.c: 83: if (isacos)
      000180 0D 18            [ 1]  294 	tnz	(0x18, sp)
      000182 26 03            [ 1]  295 	jrne	00152$
      000184 CCr02r0E         [ 2]  296 	jp	00115$
      000187                        297 00152$:
                                    298 ;	../asincosf.c: 85: if (x < 0.0)
      000187 0D 11            [ 1]  299 	tnz	(0x11, sp)
      000189 27 42            [ 1]  300 	jreq	00110$
                                    301 ;	../asincosf.c: 86: r = (b[i] + r) + b[i];
      00018B 1E 0B            [ 2]  302 	ldw	x, (0x0b, sp)
      00018D 1Cr00r08         [ 2]  303 	addw	x, #(_asincosf_b_65536_26 + 0)
      000190 90 93            [ 1]  304 	ldw	y, x
      000192 90 EE 02         [ 2]  305 	ldw	y, (0x2, y)
      000195 17 0B            [ 2]  306 	ldw	(0x0b, sp), y
      000197 FE               [ 2]  307 	ldw	x, (x)
      000198 1F 09            [ 2]  308 	ldw	(0x09, sp), x
      00019A 90 89            [ 2]  309 	pushw	y
      00019C 1E 11            [ 2]  310 	ldw	x, (0x11, sp)
      00019E 89               [ 2]  311 	pushw	x
      00019F 1E 11            [ 2]  312 	ldw	x, (0x11, sp)
      0001A1 89               [ 2]  313 	pushw	x
      0001A2 1E 11            [ 2]  314 	ldw	x, (0x11, sp)
      0001A4 89               [ 2]  315 	pushw	x
      0001A5 1E 11            [ 2]  316 	ldw	x, (0x11, sp)
      0001A7 89               [ 2]  317 	pushw	x
      0001A8 CDr00r00         [ 4]  318 	call	___fsadd
      0001AB 5B 08            [ 2]  319 	addw	sp, #8
      0001AD 1F 12            [ 2]  320 	ldw	(0x12, sp), x
      0001AF 17 10            [ 2]  321 	ldw	(0x10, sp), y
      0001B1 90 85            [ 2]  322 	popw	y
      0001B3 16 0B            [ 2]  323 	ldw	y, (0x0b, sp)
      0001B5 90 89            [ 2]  324 	pushw	y
      0001B7 16 0B            [ 2]  325 	ldw	y, (0x0b, sp)
      0001B9 90 89            [ 2]  326 	pushw	y
      0001BB 1E 14            [ 2]  327 	ldw	x, (0x14, sp)
      0001BD 89               [ 2]  328 	pushw	x
      0001BE 1E 14            [ 2]  329 	ldw	x, (0x14, sp)
      0001C0 89               [ 2]  330 	pushw	x
      0001C1 CDr00r00         [ 4]  331 	call	___fsadd
      0001C4 5B 08            [ 2]  332 	addw	sp, #8
      0001C6 1F 0F            [ 2]  333 	ldw	(0x0f, sp), x
      0001C8 17 0D            [ 2]  334 	ldw	(0x0d, sp), y
      0001CA CCr02r67         [ 2]  335 	jp	00116$
      0001CD                        336 00110$:
                                    337 ;	../asincosf.c: 88: r = (a[i] - r) + a[i];
      0001CD 1E 0B            [ 2]  338 	ldw	x, (0x0b, sp)
      0001CF 1Cr00r00         [ 2]  339 	addw	x, #(_asincosf_a_65536_26 + 0)
      0001D2 90 93            [ 1]  340 	ldw	y, x
      0001D4 90 EE 02         [ 2]  341 	ldw	y, (0x2, y)
      0001D7 17 0B            [ 2]  342 	ldw	(0x0b, sp), y
      0001D9 FE               [ 2]  343 	ldw	x, (x)
      0001DA 1F 09            [ 2]  344 	ldw	(0x09, sp), x
      0001DC 90 89            [ 2]  345 	pushw	y
      0001DE 1E 11            [ 2]  346 	ldw	x, (0x11, sp)
      0001E0 89               [ 2]  347 	pushw	x
      0001E1 1E 11            [ 2]  348 	ldw	x, (0x11, sp)
      0001E3 89               [ 2]  349 	pushw	x
      0001E4 1E 11            [ 2]  350 	ldw	x, (0x11, sp)
      0001E6 89               [ 2]  351 	pushw	x
      0001E7 1E 11            [ 2]  352 	ldw	x, (0x11, sp)
      0001E9 89               [ 2]  353 	pushw	x
      0001EA CDr00r00         [ 4]  354 	call	___fssub
      0001ED 5B 08            [ 2]  355 	addw	sp, #8
      0001EF 1F 12            [ 2]  356 	ldw	(0x12, sp), x
      0001F1 17 10            [ 2]  357 	ldw	(0x10, sp), y
      0001F3 90 85            [ 2]  358 	popw	y
      0001F5 16 0B            [ 2]  359 	ldw	y, (0x0b, sp)
      0001F7 90 89            [ 2]  360 	pushw	y
      0001F9 16 0B            [ 2]  361 	ldw	y, (0x0b, sp)
      0001FB 90 89            [ 2]  362 	pushw	y
      0001FD 1E 14            [ 2]  363 	ldw	x, (0x14, sp)
      0001FF 89               [ 2]  364 	pushw	x
      000200 1E 14            [ 2]  365 	ldw	x, (0x14, sp)
      000202 89               [ 2]  366 	pushw	x
      000203 CDr00r00         [ 4]  367 	call	___fsadd
      000206 5B 08            [ 2]  368 	addw	sp, #8
      000208 1F 0F            [ 2]  369 	ldw	(0x0f, sp), x
      00020A 17 0D            [ 2]  370 	ldw	(0x0d, sp), y
      00020C 20 59            [ 2]  371 	jra	00116$
      00020E                        372 00115$:
                                    373 ;	../asincosf.c: 92: r = (a[i] + r) + a[i];
      00020E 1E 0B            [ 2]  374 	ldw	x, (0x0b, sp)
      000210 1Cr00r00         [ 2]  375 	addw	x, #(_asincosf_a_65536_26 + 0)
      000213 90 93            [ 1]  376 	ldw	y, x
      000215 90 EE 02         [ 2]  377 	ldw	y, (0x2, y)
      000218 17 0B            [ 2]  378 	ldw	(0x0b, sp), y
      00021A FE               [ 2]  379 	ldw	x, (x)
      00021B 1F 09            [ 2]  380 	ldw	(0x09, sp), x
      00021D 90 89            [ 2]  381 	pushw	y
      00021F 1E 11            [ 2]  382 	ldw	x, (0x11, sp)
      000221 89               [ 2]  383 	pushw	x
      000222 1E 11            [ 2]  384 	ldw	x, (0x11, sp)
      000224 89               [ 2]  385 	pushw	x
      000225 1E 11            [ 2]  386 	ldw	x, (0x11, sp)
      000227 89               [ 2]  387 	pushw	x
      000228 1E 11            [ 2]  388 	ldw	x, (0x11, sp)
      00022A 89               [ 2]  389 	pushw	x
      00022B CDr00r00         [ 4]  390 	call	___fsadd
      00022E 5B 08            [ 2]  391 	addw	sp, #8
      000230 1F 11            [ 2]  392 	ldw	(0x11, sp), x
      000232 17 0F            [ 2]  393 	ldw	(0x0f, sp), y
      000234 90 85            [ 2]  394 	popw	y
      000236 16 0B            [ 2]  395 	ldw	y, (0x0b, sp)
      000238 90 89            [ 2]  396 	pushw	y
      00023A 16 0B            [ 2]  397 	ldw	y, (0x0b, sp)
      00023C 90 89            [ 2]  398 	pushw	y
      00023E 1E 13            [ 2]  399 	ldw	x, (0x13, sp)
      000240 89               [ 2]  400 	pushw	x
      000241 1E 13            [ 2]  401 	ldw	x, (0x13, sp)
      000243 89               [ 2]  402 	pushw	x
      000244 CDr00r00         [ 4]  403 	call	___fsadd
      000247 5B 08            [ 2]  404 	addw	sp, #8
      000249 1F 0F            [ 2]  405 	ldw	(0x0f, sp), x
      00024B 17 0D            [ 2]  406 	ldw	(0x0d, sp), y
                                    407 ;	../asincosf.c: 93: if (x < 0.0)
      00024D 0D 11            [ 1]  408 	tnz	(0x11, sp)
      00024F 27 16            [ 1]  409 	jreq	00116$
                                    410 ;	../asincosf.c: 94: r = -r;
      000251 16 0F            [ 2]  411 	ldw	y, (0x0f, sp)
      000253 17 0A            [ 2]  412 	ldw	(0x0a, sp), y
      000255 7B 0E            [ 1]  413 	ld	a, (0x0e, sp)
      000257 6B 09            [ 1]  414 	ld	(0x09, sp), a
      000259 7B 0D            [ 1]  415 	ld	a, (0x0d, sp)
      00025B A8 80            [ 1]  416 	xor	a, #0x80
      00025D 6B 0D            [ 1]  417 	ld	(0x0d, sp), a
      00025F 16 0A            [ 2]  418 	ldw	y, (0x0a, sp)
      000261 17 0F            [ 2]  419 	ldw	(0x0f, sp), y
      000263 7B 09            [ 1]  420 	ld	a, (0x09, sp)
      000265 6B 0E            [ 1]  421 	ld	(0x0e, sp), a
      000267                        422 00116$:
                                    423 ;	../asincosf.c: 96: return r;
      000267 1E 0F            [ 2]  424 	ldw	x, (0x0f, sp)
      000269 16 0D            [ 2]  425 	ldw	y, (0x0d, sp)
      00026B                        426 00117$:
                                    427 ;	../asincosf.c: 97: }
      00026B 5B 11            [ 2]  428 	addw	sp, #17
      00026D 81               [ 4]  429 	ret
                                    430 	.area CODE
                                    431 	.area CONST
      000000                        432 _asincosf_a_65536_26:
      000000 00 00 00 00            433 	.byte #0x00, #0x00, #0x00, #0x00	;  0.000000e+00
      000004 3F 49 0F DB            434 	.byte #0x3f, #0x49, #0x0f, #0xdb	;  7.853982e-01
      000008                        435 _asincosf_b_65536_26:
      000008 3F C9 0F DB            436 	.byte #0x3f, #0xc9, #0x0f, #0xdb	;  1.570796e+00
      00000C 3F 49 0F DB            437 	.byte #0x3f, #0x49, #0x0f, #0xdb	;  7.853982e-01
                                    438 	.area INITIALIZER
                                    439 	.area CABS (ABS)
