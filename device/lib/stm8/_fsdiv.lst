                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.9.3 #11345 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _fsdiv
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl ___fsdiv
                                     12 ;--------------------------------------------------------
                                     13 ; ram data
                                     14 ;--------------------------------------------------------
                                     15 	.area DATA
                                     16 ;--------------------------------------------------------
                                     17 ; ram data
                                     18 ;--------------------------------------------------------
                                     19 	.area INITIALIZED
                                     20 ;--------------------------------------------------------
                                     21 ; absolute external ram data
                                     22 ;--------------------------------------------------------
                                     23 	.area DABS (ABS)
                                     24 
                                     25 ; default segment ordering for linker
                                     26 	.area HOME
                                     27 	.area GSINIT
                                     28 	.area GSFINAL
                                     29 	.area CONST
                                     30 	.area INITIALIZER
                                     31 	.area CODE
                                     32 
                                     33 ;--------------------------------------------------------
                                     34 ; global & static initialisations
                                     35 ;--------------------------------------------------------
                                     36 	.area HOME
                                     37 	.area GSINIT
                                     38 	.area GSFINAL
                                     39 	.area GSINIT
                                     40 ;--------------------------------------------------------
                                     41 ; Home
                                     42 ;--------------------------------------------------------
                                     43 	.area HOME
                                     44 	.area HOME
                                     45 ;--------------------------------------------------------
                                     46 ; code
                                     47 ;--------------------------------------------------------
                                     48 	.area CODE
                                     49 ;	../_fsdiv.c: 274: static float __fsdiv_org (float a1, float a2)
                                     50 ;	-----------------------------------------
                                     51 ;	 function __fsdiv_org
                                     52 ;	-----------------------------------------
      000000                         53 ___fsdiv_org:
      000000 52 22            [ 2]   54 	sub	sp, #34
                                     55 ;	../_fsdiv.c: 283: fl1.f = a1;
      000002 16 27            [ 2]   56 	ldw	y, (0x27, sp)
      000004 17 03            [ 2]   57 	ldw	(0x03, sp), y
      000006 16 25            [ 2]   58 	ldw	y, (0x25, sp)
      000008 17 01            [ 2]   59 	ldw	(0x01, sp), y
                                     60 ;	../_fsdiv.c: 284: fl2.f = a2;
      00000A 16 2B            [ 2]   61 	ldw	y, (0x2b, sp)
      00000C 17 07            [ 2]   62 	ldw	(0x07, sp), y
      00000E 16 29            [ 2]   63 	ldw	y, (0x29, sp)
      000010 17 05            [ 2]   64 	ldw	(0x05, sp), y
                                     65 ;	../_fsdiv.c: 287: exp = EXP (fl1.l) ;
      000012 1E 01            [ 2]   66 	ldw	x, (0x01, sp)
      000014 A6 80            [ 1]   67 	ld	a, #0x80
      000016 62               [ 2]   68 	div	x, a
      000017 4F               [ 1]   69 	clr	a
      000018 95               [ 1]   70 	ld	xh, a
      000019 1F 0D            [ 2]   71 	ldw	(0x0d, sp), x
                                     72 ;	../_fsdiv.c: 288: exp -= EXP (fl2.l);
      00001B 1E 05            [ 2]   73 	ldw	x, (0x05, sp)
      00001D A6 80            [ 1]   74 	ld	a, #0x80
      00001F 62               [ 2]   75 	div	x, a
      000020 9F               [ 1]   76 	ld	a, xl
      000021 6B 16            [ 1]   77 	ld	(0x16, sp), a
      000023 0F 15            [ 1]   78 	clr	(0x15, sp)
      000025 1E 0D            [ 2]   79 	ldw	x, (0x0d, sp)
      000027 72 F0 15         [ 2]   80 	subw	x, (0x15, sp)
                                     81 ;	../_fsdiv.c: 289: exp += EXCESS;
      00002A 1F 0D            [ 2]   82 	ldw	(0x0d, sp), x
      00002C 1C 00 7E         [ 2]   83 	addw	x, #0x007e
      00002F 1F 0D            [ 2]   84 	ldw	(0x0d, sp), x
                                     85 ;	../_fsdiv.c: 292: sign = SIGN (fl1.l) ^ SIGN (fl2.l);
      000031 1E 01            [ 2]   86 	ldw	x, (0x01, sp)
      000033 58               [ 2]   87 	sllw	x
      000034 4F               [ 1]   88 	clr	a
      000035 49               [ 1]   89 	rlc	a
      000036 6B 16            [ 1]   90 	ld	(0x16, sp), a
      000038 1E 05            [ 2]   91 	ldw	x, (0x05, sp)
      00003A 58               [ 2]   92 	sllw	x
      00003B 4F               [ 1]   93 	clr	a
      00003C 49               [ 1]   94 	rlc	a
      00003D 18 16            [ 1]   95 	xor	a, (0x16, sp)
      00003F 6B 14            [ 1]   96 	ld	(0x14, sp), a
                                     97 ;	../_fsdiv.c: 295: if (!fl2.l)
      000041 16 07            [ 2]   98 	ldw	y, (0x07, sp)
      000043 17 12            [ 2]   99 	ldw	(0x12, sp), y
      000045 16 05            [ 2]  100 	ldw	y, (0x05, sp)
      000047 17 10            [ 2]  101 	ldw	(0x10, sp), y
      000049 1E 12            [ 2]  102 	ldw	x, (0x12, sp)
      00004B 26 12            [ 1]  103 	jrne	00102$
                                    104 ;	../_fsdiv.c: 297: fl2.l = 0x7FC00000;
      00004D 1E 10            [ 2]  105 	ldw	x, (0x10, sp)
      00004F 26 0E            [ 1]  106 	jrne	00102$
      000051 1F 07            [ 2]  107 	ldw	(0x07, sp), x
      000053 AE 7F C0         [ 2]  108 	ldw	x, #0x7fc0
      000056 1F 05            [ 2]  109 	ldw	(0x05, sp), x
                                    110 ;	../_fsdiv.c: 298: return (fl2.f);
      000058 1E 07            [ 2]  111 	ldw	x, (0x07, sp)
      00005A 16 05            [ 2]  112 	ldw	y, (0x05, sp)
      00005C CCr01rD6         [ 2]  113 	jp	00118$
      00005F                        114 00102$:
                                    115 ;	../_fsdiv.c: 302: if (!fl1.l)
      00005F 1E 03            [ 2]  116 	ldw	x, (0x03, sp)
      000061 16 01            [ 2]  117 	ldw	y, (0x01, sp)
      000063 5D               [ 2]  118 	tnzw	x
      000064 26 0A            [ 1]  119 	jrne	00104$
      000066 90 5D            [ 2]  120 	tnzw	y
      000068 26 06            [ 1]  121 	jrne	00104$
                                    122 ;	../_fsdiv.c: 303: return (0);
      00006A 5F               [ 1]  123 	clrw	x
      00006B 90 5F            [ 1]  124 	clrw	y
      00006D CCr01rD6         [ 2]  125 	jp	00118$
      000070                        126 00104$:
                                    127 ;	../_fsdiv.c: 306: mant1 = MANT (fl1.l);
      000070 16 03            [ 2]  128 	ldw	y, (0x03, sp)
      000072 1E 01            [ 2]  129 	ldw	x, (0x01, sp)
      000074 9F               [ 1]  130 	ld	a, xl
      000075 A4 7F            [ 1]  131 	and	a, #0x7f
      000077 97               [ 1]  132 	ld	xl, a
      000078 4F               [ 1]  133 	clr	a
      000079 01               [ 1]  134 	rrwa	x
      00007A AA 80            [ 1]  135 	or	a, #0x80
      00007C 97               [ 1]  136 	ld	xl, a
      00007D 17 21            [ 2]  137 	ldw	(0x21, sp), y
      00007F 1F 1F            [ 2]  138 	ldw	(0x1f, sp), x
                                    139 ;	../_fsdiv.c: 307: mant2 = MANT (fl2.l);
      000081 16 07            [ 2]  140 	ldw	y, (0x07, sp)
      000083 1E 05            [ 2]  141 	ldw	x, (0x05, sp)
      000085 9F               [ 1]  142 	ld	a, xl
      000086 A4 7F            [ 1]  143 	and	a, #0x7f
      000088 97               [ 1]  144 	ld	xl, a
      000089 4F               [ 1]  145 	clr	a
      00008A 01               [ 1]  146 	rrwa	x
      00008B AA 80            [ 1]  147 	or	a, #0x80
      00008D 97               [ 1]  148 	ld	xl, a
      00008E 17 0B            [ 2]  149 	ldw	(0x0b, sp), y
      000090 1F 09            [ 2]  150 	ldw	(0x09, sp), x
                                    151 ;	../_fsdiv.c: 310: if (mant1 < mant2)
      000092 1E 21            [ 2]  152 	ldw	x, (0x21, sp)
      000094 13 0B            [ 2]  153 	cpw	x, (0x0b, sp)
      000096 7B 20            [ 1]  154 	ld	a, (0x20, sp)
      000098 12 0A            [ 1]  155 	sbc	a, (0x0a, sp)
      00009A 7B 1F            [ 1]  156 	ld	a, (0x1f, sp)
      00009C 12 09            [ 1]  157 	sbc	a, (0x09, sp)
      00009E 2E 0F            [ 1]  158 	jrsge	00106$
                                    159 ;	../_fsdiv.c: 312: mant1 <<= 1;
      0000A0 08 22            [ 1]  160 	sll	(0x22, sp)
      0000A2 09 21            [ 1]  161 	rlc	(0x21, sp)
      0000A4 09 20            [ 1]  162 	rlc	(0x20, sp)
      0000A6 09 1F            [ 1]  163 	rlc	(0x1f, sp)
                                    164 ;	../_fsdiv.c: 313: exp--;
      0000A8 1E 0D            [ 2]  165 	ldw	x, (0x0d, sp)
      0000AA 5A               [ 2]  166 	decw	x
      0000AB 1F 15            [ 2]  167 	ldw	(0x15, sp), x
      0000AD 1F 0D            [ 2]  168 	ldw	(0x0d, sp), x
      0000AF                        169 00106$:
                                    170 ;	../_fsdiv.c: 317: mask = 0x1000000;
      0000AF 5F               [ 1]  171 	clrw	x
      0000B0 1F 1D            [ 2]  172 	ldw	(0x1d, sp), x
      0000B2 AE 01 00         [ 2]  173 	ldw	x, #0x0100
      0000B5 1F 1B            [ 2]  174 	ldw	(0x1b, sp), x
                                    175 ;	../_fsdiv.c: 318: result = 0;
      0000B7 5F               [ 1]  176 	clrw	x
      0000B8 1F 19            [ 2]  177 	ldw	(0x19, sp), x
      0000BA 1F 17            [ 2]  178 	ldw	(0x17, sp), x
                                    179 ;	../_fsdiv.c: 319: while (mask)
      0000BC                        180 00109$:
      0000BC 1E 1D            [ 2]  181 	ldw	x, (0x1d, sp)
      0000BE 26 04            [ 1]  182 	jrne	00179$
      0000C0 1E 1B            [ 2]  183 	ldw	x, (0x1b, sp)
      0000C2 27 4C            [ 1]  184 	jreq	00111$
      0000C4                        185 00179$:
                                    186 ;	../_fsdiv.c: 321: if (mant1 >= mant2)
      0000C4 1E 21            [ 2]  187 	ldw	x, (0x21, sp)
      0000C6 13 0B            [ 2]  188 	cpw	x, (0x0b, sp)
      0000C8 7B 20            [ 1]  189 	ld	a, (0x20, sp)
      0000CA 12 0A            [ 1]  190 	sbc	a, (0x0a, sp)
      0000CC 7B 1F            [ 1]  191 	ld	a, (0x1f, sp)
      0000CE 12 09            [ 1]  192 	sbc	a, (0x09, sp)
      0000D0 2F 2C            [ 1]  193 	jrslt	00108$
                                    194 ;	../_fsdiv.c: 323: result |= mask;
      0000D2 1E 19            [ 2]  195 	ldw	x, (0x19, sp)
      0000D4 16 17            [ 2]  196 	ldw	y, (0x17, sp)
      0000D6 9F               [ 1]  197 	ld	a, xl
      0000D7 1A 1E            [ 1]  198 	or	a, (0x1e, sp)
      0000D9 02               [ 1]  199 	rlwa	x
      0000DA 1A 1D            [ 1]  200 	or	a, (0x1d, sp)
      0000DC 95               [ 1]  201 	ld	xh, a
      0000DD 90 9F            [ 1]  202 	ld	a, yl
      0000DF 1A 1C            [ 1]  203 	or	a, (0x1c, sp)
      0000E1 90 02            [ 1]  204 	rlwa	y
      0000E3 1A 1B            [ 1]  205 	or	a, (0x1b, sp)
      0000E5 90 95            [ 1]  206 	ld	yh, a
      0000E7 1F 19            [ 2]  207 	ldw	(0x19, sp), x
      0000E9 17 17            [ 2]  208 	ldw	(0x17, sp), y
                                    209 ;	../_fsdiv.c: 324: mant1 -= mant2;
      0000EB 16 21            [ 2]  210 	ldw	y, (0x21, sp)
      0000ED 72 F2 0B         [ 2]  211 	subw	y, (0x0b, sp)
      0000F0 7B 20            [ 1]  212 	ld	a, (0x20, sp)
      0000F2 12 0A            [ 1]  213 	sbc	a, (0x0a, sp)
      0000F4 97               [ 1]  214 	ld	xl, a
      0000F5 7B 1F            [ 1]  215 	ld	a, (0x1f, sp)
      0000F7 12 09            [ 1]  216 	sbc	a, (0x09, sp)
      0000F9 95               [ 1]  217 	ld	xh, a
      0000FA 17 21            [ 2]  218 	ldw	(0x21, sp), y
      0000FC 1F 1F            [ 2]  219 	ldw	(0x1f, sp), x
      0000FE                        220 00108$:
                                    221 ;	../_fsdiv.c: 326: mant1 <<= 1;
      0000FE 08 22            [ 1]  222 	sll	(0x22, sp)
      000100 09 21            [ 1]  223 	rlc	(0x21, sp)
      000102 09 20            [ 1]  224 	rlc	(0x20, sp)
      000104 09 1F            [ 1]  225 	rlc	(0x1f, sp)
                                    226 ;	../_fsdiv.c: 327: mask >>= 1;
      000106 04 1B            [ 1]  227 	srl	(0x1b, sp)
      000108 06 1C            [ 1]  228 	rrc	(0x1c, sp)
      00010A 06 1D            [ 1]  229 	rrc	(0x1d, sp)
      00010C 06 1E            [ 1]  230 	rrc	(0x1e, sp)
      00010E 20 AC            [ 2]  231 	jra	00109$
      000110                        232 00111$:
                                    233 ;	../_fsdiv.c: 331: result += 1;
      000110 1E 19            [ 2]  234 	ldw	x, (0x19, sp)
      000112 1C 00 01         [ 2]  235 	addw	x, #0x0001
      000115 16 17            [ 2]  236 	ldw	y, (0x17, sp)
      000117 24 02            [ 1]  237 	jrnc	00181$
      000119 90 5C            [ 1]  238 	incw	y
      00011B                        239 00181$:
      00011B 1F 19            [ 2]  240 	ldw	(0x19, sp), x
      00011D 17 17            [ 2]  241 	ldw	(0x17, sp), y
                                    242 ;	../_fsdiv.c: 334: exp++;
      00011F 1E 0D            [ 2]  243 	ldw	x, (0x0d, sp)
      000121 5C               [ 1]  244 	incw	x
      000122 1F 0D            [ 2]  245 	ldw	(0x0d, sp), x
                                    246 ;	../_fsdiv.c: 335: result >>= 1;
      000124 07 17            [ 1]  247 	sra	(0x17, sp)
      000126 06 18            [ 1]  248 	rrc	(0x18, sp)
      000128 06 19            [ 1]  249 	rrc	(0x19, sp)
      00012A 06 1A            [ 1]  250 	rrc	(0x1a, sp)
                                    251 ;	../_fsdiv.c: 337: result &= ~HIDDEN;
      00012C 16 19            [ 2]  252 	ldw	y, (0x19, sp)
      00012E 7B 18            [ 1]  253 	ld	a, (0x18, sp)
      000130 A4 7F            [ 1]  254 	and	a, #0x7f
      000132 97               [ 1]  255 	ld	xl, a
      000133 7B 17            [ 1]  256 	ld	a, (0x17, sp)
      000135 95               [ 1]  257 	ld	xh, a
      000136 17 19            [ 2]  258 	ldw	(0x19, sp), y
      000138 1F 17            [ 2]  259 	ldw	(0x17, sp), x
                                    260 ;	../_fsdiv.c: 340: if (exp >= 0x100)
      00013A 1E 0D            [ 2]  261 	ldw	x, (0x0d, sp)
      00013C A3 01 00         [ 2]  262 	cpw	x, #0x0100
      00013F 2F 29            [ 1]  263 	jrslt	00116$
                                    264 ;	../_fsdiv.c: 341: fl1.l = (sign ? SIGNBIT : 0) | __INFINITY;
      000141 0D 14            [ 1]  265 	tnz	(0x14, sp)
      000143 27 09            [ 1]  266 	jreq	00120$
      000145 5F               [ 1]  267 	clrw	x
      000146 1F 15            [ 2]  268 	ldw	(0x15, sp), x
      000148 0F 14            [ 1]  269 	clr	(0x14, sp)
      00014A A6 80            [ 1]  270 	ld	a, #0x80
      00014C 20 06            [ 2]  271 	jra	00121$
      00014E                        272 00120$:
      00014E 5F               [ 1]  273 	clrw	x
      00014F 1F 15            [ 2]  274 	ldw	(0x15, sp), x
      000151 0F 14            [ 1]  275 	clr	(0x14, sp)
      000153 4F               [ 1]  276 	clr	a
      000154                        277 00121$:
      000154 AA 7F            [ 1]  278 	or	a, #0x7f
      000156 90 95            [ 1]  279 	ld	yh, a
      000158 7B 16            [ 1]  280 	ld	a, (0x16, sp)
      00015A 97               [ 1]  281 	ld	xl, a
      00015B 7B 15            [ 1]  282 	ld	a, (0x15, sp)
      00015D 95               [ 1]  283 	ld	xh, a
      00015E 7B 14            [ 1]  284 	ld	a, (0x14, sp)
      000160 AA 80            [ 1]  285 	or	a, #0x80
      000162 90 97            [ 1]  286 	ld	yl, a
      000164 1F 03            [ 2]  287 	ldw	(0x03, sp), x
      000166 17 01            [ 2]  288 	ldw	(0x01, sp), y
      000168 20 68            [ 2]  289 	jra	00117$
      00016A                        290 00116$:
                                    291 ;	../_fsdiv.c: 342: else if (exp < 0)
      00016A 0D 0D            [ 1]  292 	tnz	(0x0d, sp)
      00016C 2A 07            [ 1]  293 	jrpl	00113$
                                    294 ;	../_fsdiv.c: 343: fl1.l = 0;
      00016E 5F               [ 1]  295 	clrw	x
      00016F 1F 03            [ 2]  296 	ldw	(0x03, sp), x
      000171 1F 01            [ 2]  297 	ldw	(0x01, sp), x
      000173 20 5D            [ 2]  298 	jra	00117$
      000175                        299 00113$:
                                    300 ;	../_fsdiv.c: 345: fl1.l = PACK (sign ? SIGNBIT : 0 , exp, result);
      000175 0D 14            [ 1]  301 	tnz	(0x14, sp)
      000177 27 0A            [ 1]  302 	jreq	00122$
      000179 5F               [ 1]  303 	clrw	x
      00017A 1F 15            [ 2]  304 	ldw	(0x15, sp), x
      00017C AE 80 00         [ 2]  305 	ldw	x, #0x8000
      00017F 1F 13            [ 2]  306 	ldw	(0x13, sp), x
      000181 20 05            [ 2]  307 	jra	00123$
      000183                        308 00122$:
      000183 5F               [ 1]  309 	clrw	x
      000184 1F 15            [ 2]  310 	ldw	(0x15, sp), x
      000186 1F 13            [ 2]  311 	ldw	(0x13, sp), x
      000188                        312 00123$:
      000188 16 0D            [ 2]  313 	ldw	y, (0x0d, sp)
      00018A 5F               [ 1]  314 	clrw	x
      00018B 90 5D            [ 2]  315 	tnzw	y
      00018D 2A 01            [ 1]  316 	jrpl	00186$
      00018F 5A               [ 2]  317 	decw	x
      000190                        318 00186$:
      000190 5F               [ 1]  319 	clrw	x
      000191 A6 07            [ 1]  320 	ld	a, #0x07
      000193                        321 00187$:
      000193 90 58            [ 2]  322 	sllw	y
      000195 4A               [ 1]  323 	dec	a
      000196 26 FB            [ 1]  324 	jrne	00187$
      000198 9F               [ 1]  325 	ld	a, xl
      000199 1A 16            [ 1]  326 	or	a, (0x16, sp)
      00019B 6B 12            [ 1]  327 	ld	(0x12, sp), a
      00019D 9E               [ 1]  328 	ld	a, xh
      00019E 1A 15            [ 1]  329 	or	a, (0x15, sp)
      0001A0 6B 11            [ 1]  330 	ld	(0x11, sp), a
      0001A2 90 9F            [ 1]  331 	ld	a, yl
      0001A4 1A 14            [ 1]  332 	or	a, (0x14, sp)
      0001A6 6B 10            [ 1]  333 	ld	(0x10, sp), a
      0001A8 90 9E            [ 1]  334 	ld	a, yh
      0001AA 1A 13            [ 1]  335 	or	a, (0x13, sp)
      0001AC 16 19            [ 2]  336 	ldw	y, (0x19, sp)
      0001AE 17 15            [ 2]  337 	ldw	(0x15, sp), y
      0001B0 16 17            [ 2]  338 	ldw	y, (0x17, sp)
      0001B2 90 89            [ 2]  339 	pushw	y
      0001B4 1A 01            [ 1]  340 	or	a, (1, sp)
      0001B6 90 85            [ 2]  341 	popw	y
      0001B8 90 95            [ 1]  342 	ld	yh, a
      0001BA 7B 12            [ 1]  343 	ld	a, (0x12, sp)
      0001BC 1A 16            [ 1]  344 	or	a, (0x16, sp)
      0001BE 97               [ 1]  345 	ld	xl, a
      0001BF 7B 11            [ 1]  346 	ld	a, (0x11, sp)
      0001C1 1A 15            [ 1]  347 	or	a, (0x15, sp)
      0001C3 95               [ 1]  348 	ld	xh, a
      0001C4 90 89            [ 2]  349 	pushw	y
      0001C6 7B 12            [ 1]  350 	ld	a, (0x12, sp)
      0001C8 1A 02            [ 1]  351 	or	a, (2, sp)
      0001CA 90 85            [ 2]  352 	popw	y
      0001CC 90 97            [ 1]  353 	ld	yl, a
      0001CE 1F 03            [ 2]  354 	ldw	(0x03, sp), x
      0001D0 17 01            [ 2]  355 	ldw	(0x01, sp), y
      0001D2                        356 00117$:
                                    357 ;	../_fsdiv.c: 346: return (fl1.f);
      0001D2 1E 03            [ 2]  358 	ldw	x, (0x03, sp)
      0001D4 16 01            [ 2]  359 	ldw	y, (0x01, sp)
      0001D6                        360 00118$:
                                    361 ;	../_fsdiv.c: 347: }
      0001D6 5B 22            [ 2]  362 	addw	sp, #34
      0001D8 81               [ 4]  363 	ret
                                    364 ;	../_fsdiv.c: 349: float __fsdiv (float a1, float a2)
                                    365 ;	-----------------------------------------
                                    366 ;	 function __fsdiv
                                    367 ;	-----------------------------------------
      0001D9                        368 ___fsdiv:
      0001D9 52 06            [ 2]  369 	sub	sp, #6
                                    370 ;	../_fsdiv.c: 352: unsigned long *p = (unsigned long *) &f;
      0001DB 96               [ 1]  371 	ldw	x, sp
      0001DC 5C               [ 1]  372 	incw	x
      0001DD 1F 05            [ 2]  373 	ldw	(0x05, sp), x
                                    374 ;	../_fsdiv.c: 354: if (a2 == 0.0f && a1 > 0.0f)
      0001DF 1E 0F            [ 2]  375 	ldw	x, (0x0f, sp)
      0001E1 26 24            [ 1]  376 	jrne	00110$
      0001E3 1E 0D            [ 2]  377 	ldw	x, (0x0d, sp)
      0001E5 58               [ 2]  378 	sllw	x
      0001E6 26 1F            [ 1]  379 	jrne	00110$
      0001E8 1E 0B            [ 2]  380 	ldw	x, (0x0b, sp)
      0001EA 89               [ 2]  381 	pushw	x
      0001EB 1E 0B            [ 2]  382 	ldw	x, (0x0b, sp)
      0001ED 89               [ 2]  383 	pushw	x
      0001EE 5F               [ 1]  384 	clrw	x
      0001EF 89               [ 2]  385 	pushw	x
      0001F0 5F               [ 1]  386 	clrw	x
      0001F1 89               [ 2]  387 	pushw	x
      0001F2 CDr00r00         [ 4]  388 	call	___fslt
      0001F5 5B 08            [ 2]  389 	addw	sp, #8
      0001F7 4D               [ 1]  390 	tnz	a
      0001F8 27 0D            [ 1]  391 	jreq	00110$
                                    392 ;	../_fsdiv.c: 355: *p = 0x7f800000; // inf
      0001FA 1E 05            [ 2]  393 	ldw	x, (0x05, sp)
      0001FC 6F 03            [ 1]  394 	clr	(0x3, x)
      0001FE 6F 02            [ 1]  395 	clr	(0x2, x)
      000200 90 AE 7F 80      [ 2]  396 	ldw	y, #0x7f80
      000204 FF               [ 2]  397 	ldw	(x), y
      000205 20 5C            [ 2]  398 	jra	00111$
      000207                        399 00110$:
                                    400 ;	../_fsdiv.c: 356: else if (a2 == 0.0f && a1 < 0.0f)
      000207 1E 0F            [ 2]  401 	ldw	x, (0x0f, sp)
      000209 26 24            [ 1]  402 	jrne	00106$
      00020B 1E 0D            [ 2]  403 	ldw	x, (0x0d, sp)
      00020D 58               [ 2]  404 	sllw	x
      00020E 26 1F            [ 1]  405 	jrne	00106$
      000210 5F               [ 1]  406 	clrw	x
      000211 89               [ 2]  407 	pushw	x
      000212 5F               [ 1]  408 	clrw	x
      000213 89               [ 2]  409 	pushw	x
      000214 1E 0F            [ 2]  410 	ldw	x, (0x0f, sp)
      000216 89               [ 2]  411 	pushw	x
      000217 1E 0F            [ 2]  412 	ldw	x, (0x0f, sp)
      000219 89               [ 2]  413 	pushw	x
      00021A CDr00r00         [ 4]  414 	call	___fslt
      00021D 5B 08            [ 2]  415 	addw	sp, #8
      00021F 4D               [ 1]  416 	tnz	a
      000220 27 0D            [ 1]  417 	jreq	00106$
                                    418 ;	../_fsdiv.c: 357: *p = 0xff800000; // -inf
      000222 1E 05            [ 2]  419 	ldw	x, (0x05, sp)
      000224 6F 03            [ 1]  420 	clr	(0x3, x)
      000226 6F 02            [ 1]  421 	clr	(0x2, x)
      000228 90 AE FF 80      [ 2]  422 	ldw	y, #0xff80
      00022C FF               [ 2]  423 	ldw	(x), y
      00022D 20 34            [ 2]  424 	jra	00111$
      00022F                        425 00106$:
                                    426 ;	../_fsdiv.c: 358: else if (a2 == 0.0f && a1 == 0.0f)
      00022F 1E 0F            [ 2]  427 	ldw	x, (0x0f, sp)
      000231 26 1B            [ 1]  428 	jrne	00102$
      000233 1E 0D            [ 2]  429 	ldw	x, (0x0d, sp)
      000235 58               [ 2]  430 	sllw	x
      000236 26 16            [ 1]  431 	jrne	00102$
      000238 1E 0B            [ 2]  432 	ldw	x, (0x0b, sp)
      00023A 26 12            [ 1]  433 	jrne	00102$
      00023C 1E 09            [ 2]  434 	ldw	x, (0x09, sp)
      00023E 58               [ 2]  435 	sllw	x
      00023F 26 0D            [ 1]  436 	jrne	00102$
                                    437 ;	../_fsdiv.c: 359: *p = 0xffc00000; // nan
      000241 1E 05            [ 2]  438 	ldw	x, (0x05, sp)
      000243 6F 03            [ 1]  439 	clr	(0x3, x)
      000245 6F 02            [ 1]  440 	clr	(0x2, x)
      000247 90 AE FF C0      [ 2]  441 	ldw	y, #0xffc0
      00024B FF               [ 2]  442 	ldw	(x), y
      00024C 20 15            [ 2]  443 	jra	00111$
      00024E                        444 00102$:
                                    445 ;	../_fsdiv.c: 361: f = __fsdiv_org (a1, a2);
      00024E 1E 0F            [ 2]  446 	ldw	x, (0x0f, sp)
      000250 89               [ 2]  447 	pushw	x
      000251 1E 0F            [ 2]  448 	ldw	x, (0x0f, sp)
      000253 89               [ 2]  449 	pushw	x
      000254 1E 0F            [ 2]  450 	ldw	x, (0x0f, sp)
      000256 89               [ 2]  451 	pushw	x
      000257 1E 0F            [ 2]  452 	ldw	x, (0x0f, sp)
      000259 89               [ 2]  453 	pushw	x
      00025A CDr00r00         [ 4]  454 	call	___fsdiv_org
      00025D 5B 08            [ 2]  455 	addw	sp, #8
      00025F 1F 03            [ 2]  456 	ldw	(0x03, sp), x
      000261 17 01            [ 2]  457 	ldw	(0x01, sp), y
      000263                        458 00111$:
                                    459 ;	../_fsdiv.c: 363: return f; 
      000263 1E 03            [ 2]  460 	ldw	x, (0x03, sp)
      000265 16 01            [ 2]  461 	ldw	y, (0x01, sp)
                                    462 ;	../_fsdiv.c: 364: }
      000267 5B 06            [ 2]  463 	addw	sp, #6
      000269 81               [ 4]  464 	ret
                                    465 	.area CODE
                                    466 	.area CONST
                                    467 	.area INITIALIZER
                                    468 	.area CABS (ABS)
