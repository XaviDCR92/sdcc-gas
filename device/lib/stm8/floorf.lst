                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.9.3 #11345 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module floorf
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _floorf
                                     12 ;--------------------------------------------------------
                                     13 ; ram data
                                     14 ;--------------------------------------------------------
                                     15 	.area DATA
                                     16 ;--------------------------------------------------------
                                     17 ; ram data
                                     18 ;--------------------------------------------------------
                                     19 	.area INITIALIZED
                                     20 ;--------------------------------------------------------
                                     21 ; absolute external ram data
                                     22 ;--------------------------------------------------------
                                     23 	.area DABS (ABS)
                                     24 
                                     25 ; default segment ordering for linker
                                     26 	.area HOME
                                     27 	.area GSINIT
                                     28 	.area GSFINAL
                                     29 	.area CONST
                                     30 	.area INITIALIZER
                                     31 	.area CODE
                                     32 
                                     33 ;--------------------------------------------------------
                                     34 ; global & static initialisations
                                     35 ;--------------------------------------------------------
                                     36 	.area HOME
                                     37 	.area GSINIT
                                     38 	.area GSFINAL
                                     39 	.area GSINIT
                                     40 ;--------------------------------------------------------
                                     41 ; Home
                                     42 ;--------------------------------------------------------
                                     43 	.area HOME
                                     44 	.area HOME
                                     45 ;--------------------------------------------------------
                                     46 ; code
                                     47 ;--------------------------------------------------------
                                     48 	.area CODE
                                     49 ;	../floorf.c: 33: float floorf (float x) _FLOAT_FUNC_REENTRANT
                                     50 ;	-----------------------------------------
                                     51 ;	 function floorf
                                     52 ;	-----------------------------------------
      000000                         53 _floorf:
      000000 52 08            [ 2]   54 	sub	sp, #8
                                     55 ;	../floorf.c: 36: r=x;
      000002 1E 0D            [ 2]   56 	ldw	x, (0x0d, sp)
      000004 89               [ 2]   57 	pushw	x
      000005 1E 0D            [ 2]   58 	ldw	x, (0x0d, sp)
      000007 89               [ 2]   59 	pushw	x
      000008 CDr00r00         [ 4]   60 	call	___fs2slong
      00000B 5B 04            [ 2]   61 	addw	sp, #4
      00000D 1F 03            [ 2]   62 	ldw	(0x03, sp), x
      00000F 17 01            [ 2]   63 	ldw	(0x01, sp), y
                                     64 ;	../floorf.c: 38: return (r+((r>x)?-1:0));
      000011 1E 03            [ 2]   65 	ldw	x, (0x03, sp)
      000013 89               [ 2]   66 	pushw	x
      000014 1E 03            [ 2]   67 	ldw	x, (0x03, sp)
      000016 89               [ 2]   68 	pushw	x
      000017 CDr00r00         [ 4]   69 	call	___slong2fs
      00001A 5B 04            [ 2]   70 	addw	sp, #4
      00001C 1F 07            [ 2]   71 	ldw	(0x07, sp), x
      00001E 17 05            [ 2]   72 	ldw	(0x05, sp), y
                                     73 ;	../floorf.c: 37: if (r<=0)
      000020 5F               [ 1]   74 	clrw	x
      000021 13 03            [ 2]   75 	cpw	x, (0x03, sp)
      000023 4F               [ 1]   76 	clr	a
      000024 12 02            [ 1]   77 	sbc	a, (0x02, sp)
      000026 4F               [ 1]   78 	clr	a
      000027 12 01            [ 1]   79 	sbc	a, (0x01, sp)
      000029 2F 33            [ 1]   80 	jrslt	00102$
                                     81 ;	../floorf.c: 38: return (r+((r>x)?-1:0));
      00002B 1E 07            [ 2]   82 	ldw	x, (0x07, sp)
      00002D 89               [ 2]   83 	pushw	x
      00002E 1E 07            [ 2]   84 	ldw	x, (0x07, sp)
      000030 89               [ 2]   85 	pushw	x
      000031 1E 11            [ 2]   86 	ldw	x, (0x11, sp)
      000033 89               [ 2]   87 	pushw	x
      000034 1E 11            [ 2]   88 	ldw	x, (0x11, sp)
      000036 89               [ 2]   89 	pushw	x
      000037 CDr00r00         [ 4]   90 	call	___fslt
      00003A 5B 08            [ 2]   91 	addw	sp, #8
      00003C 4D               [ 1]   92 	tnz	a
      00003D 27 03            [ 1]   93 	jreq	00106$
      00003F 5F               [ 1]   94 	clrw	x
      000040 5A               [ 2]   95 	decw	x
      000041 21                      96 	.byte 0x21
      000042                         97 00106$:
      000042 5F               [ 1]   98 	clrw	x
      000043                         99 00107$:
      000043 51               [ 1]  100 	exgw	x, y
      000044 5F               [ 1]  101 	clrw	x
      000045 90 5D            [ 2]  102 	tnzw	y
      000047 2A 01            [ 1]  103 	jrpl	00120$
      000049 5A               [ 2]  104 	decw	x
      00004A                        105 00120$:
      00004A 72 F9 03         [ 2]  106 	addw	y, (0x03, sp)
      00004D 9F               [ 1]  107 	ld	a, xl
      00004E 19 02            [ 1]  108 	adc	a, (0x02, sp)
      000050 02               [ 1]  109 	rlwa	x
      000051 19 01            [ 1]  110 	adc	a, (0x01, sp)
      000053 95               [ 1]  111 	ld	xh, a
      000054 90 89            [ 2]  112 	pushw	y
      000056 89               [ 2]  113 	pushw	x
      000057 CDr00r00         [ 4]  114 	call	___slong2fs
      00005A 5B 04            [ 2]  115 	addw	sp, #4
      00005C 20 04            [ 2]  116 	jra	00104$
      00005E                        117 00102$:
                                    118 ;	../floorf.c: 40: return r;
      00005E 1E 07            [ 2]  119 	ldw	x, (0x07, sp)
      000060 16 05            [ 2]  120 	ldw	y, (0x05, sp)
      000062                        121 00104$:
                                    122 ;	../floorf.c: 41: }
      000062 5B 08            [ 2]  123 	addw	sp, #8
      000064 81               [ 4]  124 	ret
                                    125 	.area CODE
                                    126 	.area CONST
                                    127 	.area INITIALIZER
                                    128 	.area CABS (ABS)
