                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.9.3 #11345 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _memchr
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _memchr
                                     12 ;--------------------------------------------------------
                                     13 ; ram data
                                     14 ;--------------------------------------------------------
                                     15 	.area DATA
                                     16 ;--------------------------------------------------------
                                     17 ; ram data
                                     18 ;--------------------------------------------------------
                                     19 	.area INITIALIZED
                                     20 ;--------------------------------------------------------
                                     21 ; absolute external ram data
                                     22 ;--------------------------------------------------------
                                     23 	.area DABS (ABS)
                                     24 
                                     25 ; default segment ordering for linker
                                     26 	.area HOME
                                     27 	.area GSINIT
                                     28 	.area GSFINAL
                                     29 	.area CONST
                                     30 	.area INITIALIZER
                                     31 	.area CODE
                                     32 
                                     33 ;--------------------------------------------------------
                                     34 ; global & static initialisations
                                     35 ;--------------------------------------------------------
                                     36 	.area HOME
                                     37 	.area GSINIT
                                     38 	.area GSFINAL
                                     39 	.area GSINIT
                                     40 ;--------------------------------------------------------
                                     41 ; Home
                                     42 ;--------------------------------------------------------
                                     43 	.area HOME
                                     44 	.area HOME
                                     45 ;--------------------------------------------------------
                                     46 ; code
                                     47 ;--------------------------------------------------------
                                     48 	.area CODE
                                     49 ;	../_memchr.c: 31: void *memchr(const void *s, int c, size_t n)
                                     50 ;	-----------------------------------------
                                     51 ;	 function memchr
                                     52 ;	-----------------------------------------
      000000                         53 _memchr:
      000000 52 05            [ 2]   54 	sub	sp, #5
                                     55 ;	../_memchr.c: 33: unsigned char *p = (unsigned char *)s;
      000002 1E 08            [ 2]   56 	ldw	x, (0x08, sp)
                                     57 ;	../_memchr.c: 34: unsigned char *end = p + n;
      000004 1F 01            [ 2]   58 	ldw	(0x01, sp), x
      000006 72 FB 0C         [ 2]   59 	addw	x, (0x0c, sp)
      000009 1F 03            [ 2]   60 	ldw	(0x03, sp), x
                                     61 ;	../_memchr.c: 38: return(0);
      00000B 1E 01            [ 2]   62 	ldw	x, (0x01, sp)
      00000D                         63 00105$:
                                     64 ;	../_memchr.c: 35: for(; p != end; p++)
      00000D 13 03            [ 2]   65 	cpw	x, (0x03, sp)
      00000F 27 12            [ 1]   66 	jreq	00103$
                                     67 ;	../_memchr.c: 36: if(*p == (unsigned char)c)
      000011 F6               [ 1]   68 	ld	a, (x)
      000012 6B 05            [ 1]   69 	ld	(0x05, sp), a
      000014 7B 0B            [ 1]   70 	ld	a, (0x0b, sp)
      000016 11 05            [ 1]   71 	cp	a, (0x05, sp)
      000018 26 04            [ 1]   72 	jrne	00106$
                                     73 ;	../_memchr.c: 37: return((void *)p);
      00001A 1E 01            [ 2]   74 	ldw	x, (0x01, sp)
      00001C 20 06            [ 2]   75 	jra	00107$
      00001E                         76 00106$:
                                     77 ;	../_memchr.c: 35: for(; p != end; p++)
      00001E 5C               [ 1]   78 	incw	x
      00001F 1F 01            [ 2]   79 	ldw	(0x01, sp), x
      000021 20 EA            [ 2]   80 	jra	00105$
      000023                         81 00103$:
                                     82 ;	../_memchr.c: 38: return(0);
      000023 5F               [ 1]   83 	clrw	x
      000024                         84 00107$:
                                     85 ;	../_memchr.c: 39: }
      000024 5B 05            [ 2]   86 	addw	sp, #5
      000026 81               [ 4]   87 	ret
                                     88 	.area CODE
                                     89 	.area CONST
                                     90 	.area INITIALIZER
                                     91 	.area CABS (ABS)
