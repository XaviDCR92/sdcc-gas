                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.9.3 #11345 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _fsmul
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl ___fsmul
                                     12 ;--------------------------------------------------------
                                     13 ; ram data
                                     14 ;--------------------------------------------------------
                                     15 	.area DATA
                                     16 ;--------------------------------------------------------
                                     17 ; ram data
                                     18 ;--------------------------------------------------------
                                     19 	.area INITIALIZED
                                     20 ;--------------------------------------------------------
                                     21 ; absolute external ram data
                                     22 ;--------------------------------------------------------
                                     23 	.area DABS (ABS)
                                     24 
                                     25 ; default segment ordering for linker
                                     26 	.area HOME
                                     27 	.area GSINIT
                                     28 	.area GSFINAL
                                     29 	.area CONST
                                     30 	.area INITIALIZER
                                     31 	.area CODE
                                     32 
                                     33 ;--------------------------------------------------------
                                     34 ; global & static initialisations
                                     35 ;--------------------------------------------------------
                                     36 	.area HOME
                                     37 	.area GSINIT
                                     38 	.area GSFINAL
                                     39 	.area GSINIT
                                     40 ;--------------------------------------------------------
                                     41 ; Home
                                     42 ;--------------------------------------------------------
                                     43 	.area HOME
                                     44 	.area HOME
                                     45 ;--------------------------------------------------------
                                     46 ; code
                                     47 ;--------------------------------------------------------
                                     48 	.area CODE
                                     49 ;	../_fsmul.c: 241: float __fsmul (float a1, float a2) {
                                     50 ;	-----------------------------------------
                                     51 ;	 function __fsmul
                                     52 ;	-----------------------------------------
      000000                         53 ___fsmul:
      000000 52 15            [ 2]   54 	sub	sp, #21
                                     55 ;	../_fsmul.c: 247: fl1.f = a1;
      000002 16 1A            [ 2]   56 	ldw	y, (0x1a, sp)
      000004 17 03            [ 2]   57 	ldw	(0x03, sp), y
      000006 16 18            [ 2]   58 	ldw	y, (0x18, sp)
      000008 17 01            [ 2]   59 	ldw	(0x01, sp), y
                                     60 ;	../_fsmul.c: 248: fl2.f = a2;
      00000A 16 1E            [ 2]   61 	ldw	y, (0x1e, sp)
      00000C 17 07            [ 2]   62 	ldw	(0x07, sp), y
      00000E 16 1C            [ 2]   63 	ldw	y, (0x1c, sp)
      000010 17 05            [ 2]   64 	ldw	(0x05, sp), y
                                     65 ;	../_fsmul.c: 250: if (!fl1.l || !fl2.l)
      000012 16 03            [ 2]   66 	ldw	y, (0x03, sp)
      000014 17 14            [ 2]   67 	ldw	(0x14, sp), y
      000016 16 01            [ 2]   68 	ldw	y, (0x01, sp)
      000018 17 12            [ 2]   69 	ldw	(0x12, sp), y
      00001A 1E 14            [ 2]   70 	ldw	x, (0x14, sp)
      00001C 26 04            [ 1]   71 	jrne	00149$
      00001E 1E 12            [ 2]   72 	ldw	x, (0x12, sp)
      000020 27 0B            [ 1]   73 	jreq	00101$
      000022                         74 00149$:
      000022 1E 07            [ 2]   75 	ldw	x, (0x07, sp)
      000024 16 05            [ 2]   76 	ldw	y, (0x05, sp)
      000026 5D               [ 2]   77 	tnzw	x
      000027 26 0A            [ 1]   78 	jrne	00102$
      000029 90 5D            [ 2]   79 	tnzw	y
      00002B 26 06            [ 1]   80 	jrne	00102$
      00002D                         81 00101$:
                                     82 ;	../_fsmul.c: 251: return (0);
      00002D 5F               [ 1]   83 	clrw	x
      00002E 90 5F            [ 1]   84 	clrw	y
      000030 CCr02r03         [ 2]   85 	jp	00113$
      000033                         86 00102$:
                                     87 ;	../_fsmul.c: 254: sign = SIGN (fl1.l) ^ SIGN (fl2.l);
      000033 1E 01            [ 2]   88 	ldw	x, (0x01, sp)
      000035 58               [ 2]   89 	sllw	x
      000036 4F               [ 1]   90 	clr	a
      000037 49               [ 1]   91 	rlc	a
      000038 6B 15            [ 1]   92 	ld	(0x15, sp), a
      00003A 1E 05            [ 2]   93 	ldw	x, (0x05, sp)
      00003C 58               [ 2]   94 	sllw	x
      00003D 4F               [ 1]   95 	clr	a
      00003E 49               [ 1]   96 	rlc	a
      00003F 18 15            [ 1]   97 	xor	a, (0x15, sp)
      000041 6B 0D            [ 1]   98 	ld	(0x0d, sp), a
                                     99 ;	../_fsmul.c: 255: exp = EXP (fl1.l) - EXCESS;
      000043 1E 01            [ 2]  100 	ldw	x, (0x01, sp)
      000045 A6 80            [ 1]  101 	ld	a, #0x80
      000047 62               [ 2]  102 	div	x, a
      000048 4F               [ 1]  103 	clr	a
      000049 95               [ 1]  104 	ld	xh, a
      00004A 1D 00 7E         [ 2]  105 	subw	x, #0x007e
      00004D 1F 14            [ 2]  106 	ldw	(0x14, sp), x
                                    107 ;	../_fsmul.c: 256: exp += EXP (fl2.l);
      00004F 1E 05            [ 2]  108 	ldw	x, (0x05, sp)
      000051 A6 80            [ 1]  109 	ld	a, #0x80
      000053 62               [ 2]  110 	div	x, a
      000054 4F               [ 1]  111 	clr	a
      000055 95               [ 1]  112 	ld	xh, a
      000056 72 FB 14         [ 2]  113 	addw	x, (0x14, sp)
      000059 1F 0E            [ 2]  114 	ldw	(0x0e, sp), x
                                    115 ;	../_fsmul.c: 258: fl1.l = MANT (fl1.l);
      00005B 16 03            [ 2]  116 	ldw	y, (0x03, sp)
      00005D 1E 01            [ 2]  117 	ldw	x, (0x01, sp)
      00005F 9F               [ 1]  118 	ld	a, xl
      000060 A4 7F            [ 1]  119 	and	a, #0x7f
      000062 97               [ 1]  120 	ld	xl, a
      000063 4F               [ 1]  121 	clr	a
      000064 01               [ 1]  122 	rrwa	x
      000065 AA 80            [ 1]  123 	or	a, #0x80
      000067 97               [ 1]  124 	ld	xl, a
      000068 17 03            [ 2]  125 	ldw	(0x03, sp), y
      00006A 1F 01            [ 2]  126 	ldw	(0x01, sp), x
                                    127 ;	../_fsmul.c: 259: fl2.l = MANT (fl2.l);
      00006C 16 07            [ 2]  128 	ldw	y, (0x07, sp)
      00006E 1E 05            [ 2]  129 	ldw	x, (0x05, sp)
      000070 9F               [ 1]  130 	ld	a, xl
      000071 A4 7F            [ 1]  131 	and	a, #0x7f
      000073 97               [ 1]  132 	ld	xl, a
      000074 4F               [ 1]  133 	clr	a
      000075 01               [ 1]  134 	rrwa	x
      000076 AA 80            [ 1]  135 	or	a, #0x80
      000078 97               [ 1]  136 	ld	xl, a
      000079 17 07            [ 2]  137 	ldw	(0x07, sp), y
      00007B 1F 05            [ 2]  138 	ldw	(0x05, sp), x
                                    139 ;	../_fsmul.c: 262: result = (unsigned long)((unsigned short)(fl1.l >> 8)) * (unsigned short)(fl2.l >> 8);
      00007D 16 03            [ 2]  140 	ldw	y, (0x03, sp)
      00007F 1E 01            [ 2]  141 	ldw	x, (0x01, sp)
      000081 9F               [ 1]  142 	ld	a, xl
      000082 90 02            [ 1]  143 	rlwa	y
      000084 6B 11            [ 1]  144 	ld	(0x11, sp), a
      000086 90 01            [ 1]  145 	rrwa	y
      000088 6B 10            [ 1]  146 	ld	(0x10, sp), a
      00008A 1E 07            [ 2]  147 	ldw	x, (0x07, sp)
      00008C 1F 14            [ 2]  148 	ldw	(0x14, sp), x
      00008E 1E 05            [ 2]  149 	ldw	x, (0x05, sp)
      000090 7B 14            [ 1]  150 	ld	a, (0x14, sp)
      000092 6B 15            [ 1]  151 	ld	(0x15, sp), a
      000094 1F 13            [ 2]  152 	ldw	(0x13, sp), x
      000096 0F 12            [ 1]  153 	clr	(0x12, sp)
      000098 7B 15            [ 1]  154 	ld	a, (0x15, sp)
      00009A 02               [ 1]  155 	rlwa	x
      00009B 7B 14            [ 1]  156 	ld	a, (0x14, sp)
      00009D 01               [ 1]  157 	rrwa	x
      00009E 97               [ 1]  158 	ld	xl, a
      00009F 89               [ 2]  159 	pushw	x
      0000A0 1E 12            [ 2]  160 	ldw	x, (0x12, sp)
      0000A2 89               [ 2]  161 	pushw	x
      0000A3 CDr00r00         [ 4]  162 	call	___muluint2ulong
      0000A6 5B 04            [ 2]  163 	addw	sp, #4
      0000A8 1F 0B            [ 2]  164 	ldw	(0x0b, sp), x
      0000AA 17 09            [ 2]  165 	ldw	(0x09, sp), y
                                    166 ;	../_fsmul.c: 263: result += ((unsigned long)((unsigned short)(fl1.l & 0xff)) * (unsigned short)(fl2.l >> 8)) >> 8;
      0000AC 16 03            [ 2]  167 	ldw	y, (0x03, sp)
      0000AE 4F               [ 1]  168 	clr	a
      0000AF 90 95            [ 1]  169 	ld	yh, a
      0000B1 1E 07            [ 2]  170 	ldw	x, (0x07, sp)
      0000B3 1F 14            [ 2]  171 	ldw	(0x14, sp), x
      0000B5 1E 05            [ 2]  172 	ldw	x, (0x05, sp)
      0000B7 7B 14            [ 1]  173 	ld	a, (0x14, sp)
      0000B9 6B 15            [ 1]  174 	ld	(0x15, sp), a
      0000BB 1F 13            [ 2]  175 	ldw	(0x13, sp), x
      0000BD 0F 12            [ 1]  176 	clr	(0x12, sp)
      0000BF 7B 15            [ 1]  177 	ld	a, (0x15, sp)
      0000C1 02               [ 1]  178 	rlwa	x
      0000C2 7B 14            [ 1]  179 	ld	a, (0x14, sp)
      0000C4 01               [ 1]  180 	rrwa	x
      0000C5 97               [ 1]  181 	ld	xl, a
      0000C6 89               [ 2]  182 	pushw	x
      0000C7 90 89            [ 2]  183 	pushw	y
      0000C9 CDr00r00         [ 4]  184 	call	___muluint2ulong
      0000CC 5B 04            [ 2]  185 	addw	sp, #4
      0000CE 9E               [ 1]  186 	ld	a, xh
      0000CF 6B 15            [ 1]  187 	ld	(0x15, sp), a
      0000D1 17 13            [ 2]  188 	ldw	(0x13, sp), y
      0000D3 0F 12            [ 1]  189 	clr	(0x12, sp)
      0000D5 1E 0B            [ 2]  190 	ldw	x, (0x0b, sp)
      0000D7 72 FB 14         [ 2]  191 	addw	x, (0x14, sp)
      0000DA 16 09            [ 2]  192 	ldw	y, (0x09, sp)
      0000DC 24 02            [ 1]  193 	jrnc	00152$
      0000DE 90 5C            [ 1]  194 	incw	y
      0000E0                        195 00152$:
      0000E0 72 F9 12         [ 2]  196 	addw	y, (0x12, sp)
      0000E3 1F 0B            [ 2]  197 	ldw	(0x0b, sp), x
      0000E5 17 09            [ 2]  198 	ldw	(0x09, sp), y
                                    199 ;	../_fsmul.c: 264: result += ((unsigned long)((unsigned short)(fl2.l & 0xff)) * (unsigned short)(fl1.l >> 8)) >> 8;
      0000E7 16 07            [ 2]  200 	ldw	y, (0x07, sp)
      0000E9 4F               [ 1]  201 	clr	a
      0000EA 90 95            [ 1]  202 	ld	yh, a
      0000EC 1E 03            [ 2]  203 	ldw	x, (0x03, sp)
      0000EE 1F 14            [ 2]  204 	ldw	(0x14, sp), x
      0000F0 1E 01            [ 2]  205 	ldw	x, (0x01, sp)
      0000F2 7B 14            [ 1]  206 	ld	a, (0x14, sp)
      0000F4 6B 15            [ 1]  207 	ld	(0x15, sp), a
      0000F6 1F 13            [ 2]  208 	ldw	(0x13, sp), x
      0000F8 0F 12            [ 1]  209 	clr	(0x12, sp)
      0000FA 7B 15            [ 1]  210 	ld	a, (0x15, sp)
      0000FC 02               [ 1]  211 	rlwa	x
      0000FD 7B 14            [ 1]  212 	ld	a, (0x14, sp)
      0000FF 01               [ 1]  213 	rrwa	x
      000100 97               [ 1]  214 	ld	xl, a
      000101 89               [ 2]  215 	pushw	x
      000102 90 89            [ 2]  216 	pushw	y
      000104 CDr00r00         [ 4]  217 	call	___muluint2ulong
      000107 5B 04            [ 2]  218 	addw	sp, #4
      000109 9E               [ 1]  219 	ld	a, xh
      00010A 6B 15            [ 1]  220 	ld	(0x15, sp), a
      00010C 17 13            [ 2]  221 	ldw	(0x13, sp), y
      00010E 0F 12            [ 1]  222 	clr	(0x12, sp)
      000110 1E 0B            [ 2]  223 	ldw	x, (0x0b, sp)
      000112 72 FB 14         [ 2]  224 	addw	x, (0x14, sp)
      000115 16 09            [ 2]  225 	ldw	y, (0x09, sp)
      000117 24 02            [ 1]  226 	jrnc	00153$
      000119 90 5C            [ 1]  227 	incw	y
      00011B                        228 00153$:
      00011B 72 F9 12         [ 2]  229 	addw	y, (0x12, sp)
      00011E 1F 0B            [ 2]  230 	ldw	(0x0b, sp), x
      000120 17 09            [ 2]  231 	ldw	(0x09, sp), y
                                    232 ;	../_fsmul.c: 267: result += 0x40;
      000122 1E 0B            [ 2]  233 	ldw	x, (0x0b, sp)
      000124 1C 00 40         [ 2]  234 	addw	x, #0x0040
      000127 16 09            [ 2]  235 	ldw	y, (0x09, sp)
      000129 24 02            [ 1]  236 	jrnc	00154$
      00012B 90 5C            [ 1]  237 	incw	y
      00012D                        238 00154$:
      00012D 1F 0B            [ 2]  239 	ldw	(0x0b, sp), x
      00012F 17 09            [ 2]  240 	ldw	(0x09, sp), y
                                    241 ;	../_fsmul.c: 269: if (result & SIGNBIT)
      000131 0D 09            [ 1]  242 	tnz	(0x09, sp)
      000133 2A 1C            [ 1]  243 	jrpl	00105$
                                    244 ;	../_fsmul.c: 272: result += 0x40;
      000135 1E 0B            [ 2]  245 	ldw	x, (0x0b, sp)
      000137 1C 00 40         [ 2]  246 	addw	x, #0x0040
      00013A 16 09            [ 2]  247 	ldw	y, (0x09, sp)
      00013C 24 02            [ 1]  248 	jrnc	00156$
      00013E 90 5C            [ 1]  249 	incw	y
      000140                        250 00156$:
      000140 1F 0B            [ 2]  251 	ldw	(0x0b, sp), x
      000142 17 09            [ 2]  252 	ldw	(0x09, sp), y
                                    253 ;	../_fsmul.c: 273: result >>= 8;
      000144 16 0A            [ 2]  254 	ldw	y, (0x0a, sp)
      000146 7B 09            [ 1]  255 	ld	a, (0x09, sp)
      000148 97               [ 1]  256 	ld	xl, a
      000149 4F               [ 1]  257 	clr	a
      00014A 95               [ 1]  258 	ld	xh, a
      00014B 17 0B            [ 2]  259 	ldw	(0x0b, sp), y
      00014D 1F 09            [ 2]  260 	ldw	(0x09, sp), x
      00014F 20 15            [ 2]  261 	jra	00106$
      000151                        262 00105$:
                                    263 ;	../_fsmul.c: 277: result >>= 7;
      000151 1E 0B            [ 2]  264 	ldw	x, (0x0b, sp)
      000153 16 09            [ 2]  265 	ldw	y, (0x09, sp)
      000155 4F               [ 1]  266 	clr	a
      000156 90 01            [ 1]  267 	rrwa	y
      000158 01               [ 1]  268 	rrwa	x
      000159 48               [ 1]  269 	sll	a
      00015A 59               [ 2]  270 	rlcw	x
      00015B 90 59            [ 2]  271 	rlcw	y
      00015D 1F 0B            [ 2]  272 	ldw	(0x0b, sp), x
      00015F 17 09            [ 2]  273 	ldw	(0x09, sp), y
                                    274 ;	../_fsmul.c: 278: exp--;
      000161 1E 0E            [ 2]  275 	ldw	x, (0x0e, sp)
      000163 5A               [ 2]  276 	decw	x
      000164 1F 0E            [ 2]  277 	ldw	(0x0e, sp), x
      000166                        278 00106$:
                                    279 ;	../_fsmul.c: 281: result &= ~HIDDEN;
      000166 16 0B            [ 2]  280 	ldw	y, (0x0b, sp)
      000168 7B 0A            [ 1]  281 	ld	a, (0x0a, sp)
      00016A A4 7F            [ 1]  282 	and	a, #0x7f
      00016C 97               [ 1]  283 	ld	xl, a
      00016D 7B 09            [ 1]  284 	ld	a, (0x09, sp)
      00016F 95               [ 1]  285 	ld	xh, a
      000170 17 0B            [ 2]  286 	ldw	(0x0b, sp), y
      000172 1F 09            [ 2]  287 	ldw	(0x09, sp), x
                                    288 ;	../_fsmul.c: 284: if (exp >= 0x100)
      000174 1E 0E            [ 2]  289 	ldw	x, (0x0e, sp)
      000176 A3 01 00         [ 2]  290 	cpw	x, #0x0100
      000179 2F 29            [ 1]  291 	jrslt	00111$
                                    292 ;	../_fsmul.c: 285: fl1.l = (sign ? SIGNBIT : 0) | __INFINITY;
      00017B 0D 0D            [ 1]  293 	tnz	(0x0d, sp)
      00017D 27 09            [ 1]  294 	jreq	00115$
      00017F 5F               [ 1]  295 	clrw	x
      000180 1F 14            [ 2]  296 	ldw	(0x14, sp), x
      000182 0F 13            [ 1]  297 	clr	(0x13, sp)
      000184 A6 80            [ 1]  298 	ld	a, #0x80
      000186 20 06            [ 2]  299 	jra	00116$
      000188                        300 00115$:
      000188 5F               [ 1]  301 	clrw	x
      000189 1F 14            [ 2]  302 	ldw	(0x14, sp), x
      00018B 0F 13            [ 1]  303 	clr	(0x13, sp)
      00018D 4F               [ 1]  304 	clr	a
      00018E                        305 00116$:
      00018E AA 7F            [ 1]  306 	or	a, #0x7f
      000190 90 95            [ 1]  307 	ld	yh, a
      000192 7B 15            [ 1]  308 	ld	a, (0x15, sp)
      000194 97               [ 1]  309 	ld	xl, a
      000195 7B 14            [ 1]  310 	ld	a, (0x14, sp)
      000197 95               [ 1]  311 	ld	xh, a
      000198 7B 13            [ 1]  312 	ld	a, (0x13, sp)
      00019A AA 80            [ 1]  313 	or	a, #0x80
      00019C 90 97            [ 1]  314 	ld	yl, a
      00019E 1F 03            [ 2]  315 	ldw	(0x03, sp), x
      0001A0 17 01            [ 2]  316 	ldw	(0x01, sp), y
      0001A2 20 5B            [ 2]  317 	jra	00112$
      0001A4                        318 00111$:
                                    319 ;	../_fsmul.c: 286: else if (exp < 0)
      0001A4 0D 0E            [ 1]  320 	tnz	(0x0e, sp)
      0001A6 2A 07            [ 1]  321 	jrpl	00108$
                                    322 ;	../_fsmul.c: 287: fl1.l = 0;
      0001A8 5F               [ 1]  323 	clrw	x
      0001A9 1F 03            [ 2]  324 	ldw	(0x03, sp), x
      0001AB 1F 01            [ 2]  325 	ldw	(0x01, sp), x
      0001AD 20 50            [ 2]  326 	jra	00112$
      0001AF                        327 00108$:
                                    328 ;	../_fsmul.c: 289: fl1.l = PACK (sign ? SIGNBIT : 0 , exp, result);
      0001AF 0D 0D            [ 1]  329 	tnz	(0x0d, sp)
      0001B1 27 0A            [ 1]  330 	jreq	00117$
      0001B3 5F               [ 1]  331 	clrw	x
      0001B4 1F 14            [ 2]  332 	ldw	(0x14, sp), x
      0001B6 AE 80 00         [ 2]  333 	ldw	x, #0x8000
      0001B9 1F 12            [ 2]  334 	ldw	(0x12, sp), x
      0001BB 20 05            [ 2]  335 	jra	00118$
      0001BD                        336 00117$:
      0001BD 5F               [ 1]  337 	clrw	x
      0001BE 1F 14            [ 2]  338 	ldw	(0x14, sp), x
      0001C0 1F 12            [ 2]  339 	ldw	(0x12, sp), x
      0001C2                        340 00118$:
      0001C2 16 0E            [ 2]  341 	ldw	y, (0x0e, sp)
      0001C4 5F               [ 1]  342 	clrw	x
      0001C5 90 5D            [ 2]  343 	tnzw	y
      0001C7 2A 01            [ 1]  344 	jrpl	00161$
      0001C9 5A               [ 2]  345 	decw	x
      0001CA                        346 00161$:
      0001CA 90 9F            [ 1]  347 	ld	a, yl
      0001CC 5F               [ 1]  348 	clrw	x
      0001CD 88               [ 1]  349 	push	a
      0001CE A6 07            [ 1]  350 	ld	a, #0x07
      0001D0                        351 00162$:
      0001D0 08 01            [ 1]  352 	sll	(1, sp)
      0001D2 90 02            [ 1]  353 	rlwa	y
      0001D4 49               [ 1]  354 	rlc	a
      0001D5 90 01            [ 1]  355 	rrwa	y
      0001D7 4A               [ 1]  356 	dec	a
      0001D8 26 F6            [ 1]  357 	jrne	00162$
      0001DA 84               [ 1]  358 	pop	a
      0001DB 1A 13            [ 1]  359 	or	a, (0x13, sp)
      0001DD 90 97            [ 1]  360 	ld	yl, a
      0001DF 9F               [ 1]  361 	ld	a, xl
      0001E0 1A 15            [ 1]  362 	or	a, (0x15, sp)
      0001E2 02               [ 1]  363 	rlwa	x
      0001E3 1A 14            [ 1]  364 	or	a, (0x14, sp)
      0001E5 95               [ 1]  365 	ld	xh, a
      0001E6 90 9E            [ 1]  366 	ld	a, yh
      0001E8 1A 12            [ 1]  367 	or	a, (0x12, sp)
      0001EA 1A 09            [ 1]  368 	or	a, (0x09, sp)
      0001EC 90 95            [ 1]  369 	ld	yh, a
      0001EE 9F               [ 1]  370 	ld	a, xl
      0001EF 1A 0C            [ 1]  371 	or	a, (0x0c, sp)
      0001F1 02               [ 1]  372 	rlwa	x
      0001F2 1A 0B            [ 1]  373 	or	a, (0x0b, sp)
      0001F4 95               [ 1]  374 	ld	xh, a
      0001F5 90 9F            [ 1]  375 	ld	a, yl
      0001F7 1A 0A            [ 1]  376 	or	a, (0x0a, sp)
      0001F9 90 97            [ 1]  377 	ld	yl, a
      0001FB 1F 03            [ 2]  378 	ldw	(0x03, sp), x
      0001FD 17 01            [ 2]  379 	ldw	(0x01, sp), y
      0001FF                        380 00112$:
                                    381 ;	../_fsmul.c: 290: return (fl1.f);
      0001FF 1E 03            [ 2]  382 	ldw	x, (0x03, sp)
      000201 16 01            [ 2]  383 	ldw	y, (0x01, sp)
      000203                        384 00113$:
                                    385 ;	../_fsmul.c: 291: }
      000203 5B 15            [ 2]  386 	addw	sp, #21
      000205 81               [ 4]  387 	ret
                                    388 	.area CODE
                                    389 	.area CONST
                                    390 	.area INITIALIZER
                                    391 	.area CABS (ABS)
